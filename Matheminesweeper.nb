(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    573706,      11408]
NotebookOptionsPosition[    559481,      11155]
NotebookOutlinePosition[    559883,      11171]
CellTagsIndexPosition[    559840,      11168]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Graphics", "Chapter"]], "Chapter",
 CellChangeTimes->{{3.7955353193448606`*^9, 3.79553532262963*^9}, {
  3.7963855284283056`*^9, 
  3.7963855299663334`*^9}},ExpressionUUID->"f85d76d1-fec0-445a-95c4-\
711131d11a5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RepeatableGraphics", "[", 
   RowBox[{"x_", ",", "y_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "function", " ", "to", " ", "create", " ", "a", " ", "graphic", " ", "of",
      " ", "one", " ", "segment", " ", "of", " ", "the", " ", "tesselation", 
     RowBox[{"(", 
      RowBox[{
      "dodecagon", " ", "and", " ", "surrounding", " ", "hexagons", " ", 
       "and", " ", "squares"}], ")"}]}], ",", " ", 
    RowBox[{"given", " ", "an", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], " ", "coordinate", " ", "for", " ", 
     "the", " ", 
     RowBox[{"segment", "'"}], "s", " ", "center", " ", "and", " ", "the", 
     " ", "size", " ", "of", " ", "the", " ", "whole", " ", "board"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"offsetX", "=", 
       RowBox[{"2.19", "x"}]}], ",", 
      RowBox[{"offsetY", "=", 
       RowBox[{
        RowBox[{"2.53834", "y"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2.53834", "/", "2"}], ")"}], 
          RowBox[{"Abs", "[", "x", "]"}]}], ")"}]}]}], ",", 
      RowBox[{"colorLst", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"board", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{"LightGray", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "13"}], "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "@", "showMines"}], ",", 
           RowBox[{"colorMineLst", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}], ",", 
           RowBox[{"colorFlagLst", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}]}], "]"}]}],
         "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "all", " ", "of", " ", "the", " ", "hard", " ", "coded", " ", "values",
         " ", "are", " ", "relative", " ", "values", " ", "for", " ", 
        "placement", " ", "of", " ", "shapes", " ", "in", " ", "a", " ", 
        "single", " ", "segment"}], ",", " ", 
       RowBox[{"they", " ", 
        RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", "be", " ", 
        "changed"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"central", " ", "dodecagon"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"offsetX", ",", "offsetY"}], "}"}], ",", "1.04", ",", "12"}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "All", " ", "of", " ", "the", " ", "surrounding", " ", "shapes", " ", 
        "in", " ", "clockwise", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"offsetX", ",", 
          RowBox[{"offsetY", "+", "1", "+", 
           RowBox[{"(", 
            RowBox[{".538344", "/", "2"}], ")"}]}]}], "}"}], ",", 
        RowBox[{".761333", "/", "2"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", ".73"}], ",", 
          RowBox[{"offsetY", "+", "1", "+", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", "1.095"}], ",", 
          RowBox[{"offsetY", "+", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "12"}]}], "}"}], ",", "4"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", "1.46"}], ",", "offsetY"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "6", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", "1.095"}], ",", 
          RowBox[{"offsetY", "-", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{"\[Pi]", "/", "12"}]}], "}"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "7", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", ".73"}], ",", 
          RowBox[{"offsetY", "-", "1", "-", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "8", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"offsetX", ",", 
          RowBox[{"offsetY", "-", "1", "-", 
           RowBox[{"(", 
            RowBox[{".538344", "/", "2"}], ")"}]}]}], "}"}], ",", 
        RowBox[{".761333", "/", "2"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "9", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", ".73"}], ",", 
          RowBox[{"offsetY", "-", "1", "-", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "10", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", "1.095"}], ",", 
          RowBox[{"offsetY", "-", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "12"}]}], "}"}], ",", "4"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "11", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", "1.46"}], ",", "offsetY"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "12", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", "1.095"}], ",", 
          RowBox[{"offsetY", "+", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{"\[Pi]", "/", "12"}]}], "}"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"colorLst", "[", 
       RowBox[{"[", "13", "]"}], "]"}], ",", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", ".73"}], ",", 
          RowBox[{"offsetY", "+", "1", "+", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7955346397907996`*^9, 3.7955346408855743`*^9}, {
   3.7955346969904304`*^9, 3.7955348092996497`*^9}, {3.7955348500095453`*^9, 
   3.7955350402528563`*^9}, {3.795535097520024*^9, 3.7955352640169487`*^9}, 
   3.795535345123804*^9, {3.7955354161956816`*^9, 3.7955354178910007`*^9}, {
   3.7955358925508204`*^9, 3.7955359124739947`*^9}, {3.79553596947464*^9, 
   3.7955359721473713`*^9}, 3.795536288774293*^9, {3.7955363231320677`*^9, 
   3.7955363576370687`*^9}, {3.795536394990549*^9, 3.7955363966599827`*^9}, {
   3.7955365949034605`*^9, 3.7955366851565685`*^9}, {3.7955367164714947`*^9, 
   3.795536760798554*^9}, {3.7955371045883665`*^9, 3.7955373686237974`*^9}, {
   3.795537411086116*^9, 3.795537444027072*^9}, {3.795538248307883*^9, 
   3.7955382733818502`*^9}, {3.7955383367861977`*^9, 
   3.7955383770905657`*^9}, {3.7955384078422165`*^9, 3.795538434941738*^9}, {
   3.7955386529707837`*^9, 3.7955386766181183`*^9}, {3.795538780761285*^9, 
   3.7955387832985215`*^9}, {3.7955390231059113`*^9, 3.795539025777221*^9}, {
   3.795539080978036*^9, 3.7955390822281866`*^9}, 3.795539375383108*^9, {
   3.7955400475999126`*^9, 3.7955401615733857`*^9}, {3.795540224063579*^9, 
   3.7955402449338694`*^9}, {3.795545901300959*^9, 3.795545921897908*^9}, {
   3.7959659665398097`*^9, 3.795966145455112*^9}, {3.7959662277171507`*^9, 
   3.7959663029111757`*^9}, {3.797683498464216*^9, 3.797683510926322*^9}, {
   3.7976838874187365`*^9, 3.7976839155415363`*^9}, {3.797684045234324*^9, 
   3.7976840578918934`*^9}, {3.797684965712964*^9, 3.797684967942912*^9}, {
   3.7976850552804413`*^9, 3.7976850723312535`*^9}, {3.7976851459591565`*^9, 
   3.7976851477785215`*^9}, {3.797686311940805*^9, 3.7976864344180083`*^9}, {
   3.797702876367384*^9, 3.7977028946984496`*^9}, {3.7977039049222765`*^9, 
   3.797703934306177*^9}, {3.79770469718717*^9, 3.7977047046872005`*^9}, 
   3.797705316005581*^9, {3.7977167635574894`*^9, 3.7977168082665997`*^9}, {
   3.7977169212880936`*^9, 3.797716923817131*^9}, {3.797717230305089*^9, 
   3.7977173764131727`*^9}, {3.7977175340691843`*^9, 
   3.7977175395587716`*^9}, {3.797718443370648*^9, 3.797718444548763*^9}, {
   3.797767716553664*^9, 3.7977677177827525`*^9}, {3.797768096116979*^9, 
   3.7977680995617404`*^9}, {3.797961426101991*^9, 3.7979614440551233`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e4aacc25-8c91-4d1a-b6cf-48258bcbcba5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"textLst", "[", 
   RowBox[{"x_", ",", "y_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "creates", " ", "a", " ", "list", " ", "of", " ", "text", " ", "objects",
       " ", "and", " ", "their", " ", "coordinates", " ", "if", " ", "the", 
      " ", "tile", " ", "they", " ", "are", " ", "in", " ", "has", " ", 
      "been", " ", "opened"}], ",", " ", 
     RowBox[{"and", " ", "if", " ", "so"}], ",", " ", 
     RowBox[{
     "also", " ", "attributes", " ", "a", " ", "color", " ", "to", " ", "the",
       " ", "number", " ", "such", " ", "that", " ", "1", " ", "is", " ", 
      "blue"}], ",", " ", 
     RowBox[{"2", " ", "is", " ", "gree"}], ",", " ", 
     RowBox[{"3", " ", "is", " ", "red"}], ",", " ", 
     RowBox[{"4", " ", "is", " ", "crimson"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"polar", "=", 
       RowBox[{"polarConv", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}]}], ",", 
      "coordLst", ",", 
      RowBox[{"graphicsLst", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"font", "=", 
       RowBox[{"fontSize", "[", "size", "]"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "this", " ", "list", " ", "holds", " ", "all", " ", "the", " ", 
        "local", " ", "coordinates", " ", "for", " ", "the", " ", "center", 
        " ", "of", " ", "tiles", " ", "in", " ", "a", " ", 
        "RepeatableGraphics"}], "*)"}], 
      RowBox[{"locLst", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "+", 
            RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".73", ",", 
           RowBox[{"1", "+", 
            RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.095", ",", ".634586"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.46", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.095", ",", 
           RowBox[{"-", ".634586"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".73", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".73"}], ",", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.095"}], ",", 
           RowBox[{"-", ".634586"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.46"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.095"}], ",", ".634586"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".73"}], ",", 
           RowBox[{"1", "+", 
            RowBox[{".538344", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"offsetX", "=", 
       RowBox[{"2.19", "x"}]}], ",", 
      RowBox[{"offsetY", "=", 
       RowBox[{
        RowBox[{"2.53834", "y"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2.53834", "/", "2"}], ")"}], 
          RowBox[{"Abs", "[", "x", "]"}]}], ")"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coordLst", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"northMostTile", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}], ",", 
        "polar"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{"(*", 
       RowBox[{
       "adds", " ", "only", " ", "the", " ", "numbers", " ", "and", " ", 
        "coordinates", " ", "of", " ", "tiles", " ", "that", " ", "are", " ", 
        "open", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"meaning", " ", "they", " ", "are", " ", 
           RowBox[{"not", " ", "'"}], 
           RowBox[{"unknown", "'"}], " ", "tiles"}], ",", " ", 
          RowBox[{
          "the", " ", "player", " ", "has", " ", "determined", " ", "them", 
           " ", "to", " ", "be", " ", "not", " ", "mines"}]}], ")"}]}], 
       "*)"}], 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getNum", "[", 
             RowBox[{"board", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"coordLst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"coordLst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
             "]"}], "\[NotEqual]", "0"}], "&&", 
           RowBox[{"TrueQ", "[", 
            RowBox[{"getOpen", "[", 
             RowBox[{"board", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"coordLst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"coordLst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
             "]"}], "]"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"graphicsLst", ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Switch", "[", 
               RowBox[{
                RowBox[{"getNum", "[", 
                 RowBox[{"board", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"coordLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"coordLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                 "]"}], ",", "\[IndentingNewLine]", "1", ",", "Blue", ",", 
                "\[IndentingNewLine]", "2", ",", "Green", ",", 
                "\[IndentingNewLine]", "3", ",", "Red", ",", 
                "\[IndentingNewLine]", "_", ",", 
                RowBox[{"Darker", "[", "Red", "]"}]}], "\[IndentingNewLine]", 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"TrueQ", "@", 
                  RowBox[{"getMine", "[", 
                   RowBox[{"board", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"coordLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"coordLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                   "]"}]}]}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"getNum", "[", 
                    RowBox[{"board", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"coordLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"coordLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                    "]"}], ",", "font"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"offsetX", "+", 
                    RowBox[{"locLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"offsetY", "+", 
                    RowBox[{"locLst", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
                 "]"}]}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "13"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "graphicsLst", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797702902633396*^9, 3.7977029203105946`*^9}, 
   3.7977029805713835`*^9, {3.797703041068261*^9, 3.7977030721915855`*^9}, {
   3.7977031380282216`*^9, 3.797703148026169*^9}, {3.7977031835134144`*^9, 
   3.797703350009893*^9}, {3.7977037155731525`*^9, 3.797703884260292*^9}, {
   3.797703996446369*^9, 3.7977040387096977`*^9}, {3.79770410020933*^9, 
   3.797704174832157*^9}, {3.7977042107073617`*^9, 3.7977042305603433`*^9}, {
   3.797704284287345*^9, 3.7977042942383113`*^9}, {3.797704326056402*^9, 
   3.797704634741151*^9}, {3.7977046803742456`*^9, 3.7977046812333097`*^9}, {
   3.797704831379669*^9, 3.797704862227109*^9}, {3.7977051272190175`*^9, 
   3.7977051273530283`*^9}, {3.7977052077240105`*^9, 3.797705290170018*^9}, {
   3.797705416959812*^9, 3.7977054874860215`*^9}, {3.7977055190820017`*^9, 
   3.797705568055001*^9}, {3.7977096625654173`*^9, 3.797709675619378*^9}, {
   3.797710076663498*^9, 3.7977100829849215`*^9}, 3.797711683021409*^9, {
   3.7977119869102945`*^9, 3.7977119916542425`*^9}, {3.797712488449438*^9, 
   3.797712521750348*^9}, 3.797712995453705*^9, {3.7977132804579496`*^9, 
   3.7977133252419453`*^9}, {3.7977133632734594`*^9, 3.797713366277074*^9}, {
   3.797713416652988*^9, 3.797713471895409*^9}, 3.797714168607251*^9, 
   3.797714548888626*^9, {3.7977146568705997`*^9, 3.797714805713004*^9}, {
   3.7977159705140543`*^9, 3.797715978804422*^9}, {3.797716096500712*^9, 
   3.797716266667419*^9}, {3.797716312859971*^9, 3.7977164385144186`*^9}, {
   3.7977166464963975`*^9, 3.797716660675716*^9}, {3.7977176951190214`*^9, 
   3.797717730673229*^9}, {3.7977184201872015`*^9, 3.7977184367279887`*^9}, {
   3.797767496704132*^9, 3.797767517188487*^9}, {3.797768104322276*^9, 
   3.797768120307424*^9}, {3.7979614772071257`*^9, 3.7979614873131356`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"84c65409-e446-43c8-b425-91327b6a2173"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorFlagLst", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "creates", " ", "a", " ", "list", " ", "that", " ", "specifies", " ", 
      "the", " ", "color", " ", "of", " ", "each", " ", "tile", " ", "in", 
      " ", "a", " ", "RepeatableGraphics", " ", "section"}], ",", " ", 
     RowBox[{
     "LightGray", " ", "if", " ", "the", " ", "tile", " ", "has", " ", "not", 
      " ", "been", " ", "clicked"}], ",", " ", 
     RowBox[{
     "White", " ", "if", " ", "it", " ", "has", " ", "been", " ", "clicked", 
      " ", "to", " ", "open", " ", "to", " ", "see", " ", "the", " ", 
      "number"}], ",", " ", 
     RowBox[{
     "and", " ", "Red", " ", "if", " ", "the", " ", "tile", " ", "was", " ", 
      "marked", " ", "as", " ", "a", " ", "flag"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"polar", "=", 
       RowBox[{"polarConv", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}]}], ",", 
      "coordLst"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coordLst", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"northMostTile", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}], ",", 
        "polar"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"getFlag", "[", 
          RowBox[{"board", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"coordLst", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"coordLst", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], 
         ",", "Red", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"getOpen", "[", 
             RowBox[{"board", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"coordLst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"coordLst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
             "]"}]}], ",", "LightGray", ",", "White"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "13"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976852349294376`*^9, 3.797685369336759*^9}, {
   3.797685428658122*^9, 3.797685463533146*^9}, 3.797685501624374*^9, {
   3.7976855536452737`*^9, 3.797685604937047*^9}, {3.7976857108901234`*^9, 
   3.7976857114561653`*^9}, {3.7976861425470695`*^9, 3.797686142709078*^9}, {
   3.7976869125807705`*^9, 3.7976869147231035`*^9}, {3.7977138226920996`*^9, 
   3.7977138598522024`*^9}, {3.797714259748003*^9, 3.797714389739176*^9}, {
   3.7977145586369915`*^9, 3.797714640345744*^9}, {3.7977159823056364`*^9, 
   3.7977159870645328`*^9}, {3.797716304352476*^9, 3.7977163087073417`*^9}, {
   3.7977166378798633`*^9, 3.7977166416217375`*^9}, {3.797718408884655*^9, 
   3.7977184133951273`*^9}, {3.7977675272390313`*^9, 3.797767537473573*^9}, {
   3.7977681248860483`*^9, 3.797768129960188*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"72581321-7418-4c80-b4d9-c3061919e4e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorMineLst", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"(*", 
    RowBox[{
    "creates", " ", "a", " ", "list", " ", "that", " ", "specifies", " ", 
     "the", " ", "color", " ", "of", " ", "each", " ", "mine", " ", "in", " ",
      "a", " ", "RepeatableGraphics", " ", "section", " ", "as", " ", "black",
      " ", "when", " ", "the", " ", "game", " ", "is", " ", "lost"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"polar", "=", 
       RowBox[{"polarConv", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}]}], ",", 
      "coordLst"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coordLst", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"northMostTile", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}], ",", 
        "polar"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "@", 
          RowBox[{"getMine", "[", 
           RowBox[{"board", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"coordLst", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"coordLst", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
           "]"}]}], ",", "Black", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getFlag", "[", 
            RowBox[{"board", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"coordLst", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"coordLst", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}],
            ",", "Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"getOpen", "[", 
               RowBox[{"board", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"coordLst", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"coordLst", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
               "]"}]}], ",", "LightGray", ",", "White"}], "]"}]}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "13"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797717366782457*^9, 3.797717455359133*^9}, {
  3.797717560088729*^9, 3.797717561652976*^9}, {3.797717627620245*^9, 
  3.797717663418182*^9}, {3.797718391959034*^9, 3.797718400227146*^9}, {
  3.79776754709254*^9, 3.7977675583832164`*^9}, {3.797768132798778*^9, 
  3.7977681525580144`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"4a3e44a9-fcf8-4819-876e-8250293f1437"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boardOfSize", "[", "size_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "creates", " ", "a", " ", "board", " ", "of", " ", "a", " ", "given", 
      " ", "size"}], ",", " ", 
     RowBox[{
     "where", " ", "size", " ", "is", " ", "the", " ", "number", " ", "of", 
      " ", "RepeatableGraphics", " ", "along", " ", "a", " ", "side", " ", 
      "of", " ", "the", " ", "board"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tiles", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"numbers", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"tiles", ",", 
            RowBox[{"RepeatableGraphics", "[", 
             RowBox[{"k", ",", "j", ",", "size"}], "]"}]}], "]"}], ";", 
          RowBox[{"(*", 
           RowBox[{
           "The", " ", "tiles", " ", "for", " ", "the", " ", "board", " ", 
            "are", " ", "created", " ", "here"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"board", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"numbers", ",", 
              RowBox[{"textLst", "[", 
               RowBox[{"k", ",", "j", ",", "size"}], "]"}]}], "]"}]}], "]"}], 
          ";"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"0", "-", 
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "size"}], ")"}], "-", "2"}], ")"}], "-", 
            RowBox[{"Abs", "[", "k", "]"}], "-", 
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "numbers", " ", "to", " ", "be", " ", "displayed", " ", 
         "in", " ", "the", " ", "tiles", " ", "are", " ", "created", " ", 
         "here"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"0", "-", 
          RowBox[{"(", 
           RowBox[{"size", "-", "1"}], ")"}]}], ",", 
         RowBox[{"size", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"tiles", ",", "numbers"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7955375712558775`*^9, 3.7955375836832523`*^9}, {
   3.7955376230196047`*^9, 3.7955376290890207`*^9}, {3.7955377818366833`*^9, 
   3.795537800530964*^9}, {3.795539492308111*^9, 3.795539505130128*^9}, {
   3.795539570381424*^9, 3.7955396055405364`*^9}, {3.7955397487036037`*^9, 
   3.795539764497987*^9}, {3.7955399240981193`*^9, 3.7955399352400064`*^9}, {
   3.79554002549222*^9, 3.795540026537634*^9}, 3.795540202142745*^9, {
   3.7955403249608965`*^9, 3.795540329385185*^9}, {3.7955404184252234`*^9, 
   3.7955404592330065`*^9}, {3.7955405454074802`*^9, 
   3.7955405495210705`*^9}, {3.7955406571567698`*^9, 
   3.7955406776946135`*^9}, {3.7955407517675276`*^9, 3.79554076570639*^9}, {
   3.795540814442687*^9, 3.7955408145476923`*^9}, {3.795540864539592*^9, 
   3.7955409079175806`*^9}, {3.795541089985647*^9, 3.795541090519424*^9}, {
   3.7977048855310535`*^9, 3.7977050193334556`*^9}, 3.7977138898148127`*^9, {
   3.7977139983183146`*^9, 3.797714075052845*^9}, {3.797716847846286*^9, 
   3.797716864560493*^9}, {3.7977183516079025`*^9, 3.7977183534878798`*^9}, {
   3.7977675638038626`*^9, 3.7977675659480243`*^9}, {3.7977681425688066`*^9, 
   3.797768143770915*^9}, {3.797962095872959*^9, 3.7979621079050617`*^9}, {
   3.797964890598686*^9, 3.7979648920880857`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0547e3fa-beb4-45dd-8268-d1da3d4228ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "@", 
  RowBox[{"boardOfSize", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.7955368417089853`*^9, 3.7955368754903793`*^9}, {
   3.795537760190386*^9, 3.7955377724565077`*^9}, {3.7955409247548866`*^9, 
   3.7955409362688704`*^9}, {3.795541097231513*^9, 3.79554112765695*^9}, {
   3.795541520027594*^9, 3.7955415201673675`*^9}, {3.7955416333685265`*^9, 
   3.795541633500537*^9}, {3.7955416701252537`*^9, 3.795541670297741*^9}, {
   3.7955421237473755`*^9, 3.795542123846383*^9}, {3.7955421856545897`*^9, 
   3.7955421858166075`*^9}, {3.795542284333808*^9, 3.795542284525832*^9}, {
   3.7955425409909897`*^9, 3.7955425421553164`*^9}, {3.795543066797207*^9, 
   3.795543066959199*^9}, {3.7955432646453323`*^9, 3.7955432647693415`*^9}, {
   3.795543309645689*^9, 3.7955433096964674`*^9}, {3.795543719390436*^9, 
   3.795543719538237*^9}, {3.7955437700442696`*^9, 3.7955437701258984`*^9}, {
   3.795948393575058*^9, 3.7959483936760654`*^9}, {3.7977141009058757`*^9, 
   3.797714108009766*^9}, {3.797714160501251*^9, 3.797714160599765*^9}, {
   3.7977143476727457`*^9, 3.7977143477407503`*^9}, {3.797716475386089*^9, 
   3.797716478234786*^9}, {3.797716514058735*^9, 3.7977165169112577`*^9}, 
   3.79771655579148*^9, {3.7977166321972632`*^9, 3.797716634018404*^9}, {
   3.7977675692060833`*^9, 3.797767569275092*^9}, {3.797767661088607*^9, 
   3.797767675998274*^9}, {3.7977677245393853`*^9, 3.797767724658413*^9}, {
   3.797768166548793*^9, 3.7977681665797944`*^9}, {3.7977744062519827`*^9, 
   3.7977744063089867`*^9}, {3.797781036986246*^9, 3.7977810582922673`*^9}, {
   3.7977818336880608`*^9, 3.797781834075325*^9}, {3.7979398875629597`*^9, 
   3.7979398876269655`*^9}, {3.7979621242010655`*^9, 3.7979621277328777`*^9}},
 CellLabel->
  "In[483]:=",ExpressionUUID->"3fc42165-6a89-411e-9fcb-9c7229f808d6"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{-4.110828193093378, -3.542902859340631}, \
{-3.6446089475659904`, -3.2737310524340093`}, {-3.375437140659369, \
-2.8075118069066214`}, {-3.375437140659369, -2.2691681930933782`}, \
{-3.6446089475659904`, -1.8029489475659906`}, {-4.110828193093377, \
-1.5337771406593688`}, {-4.6491718069066215`, -1.5337771406593688`}, \
{-5.115391052434009, -1.8029489475659903`}, {-5.3845628593406305`, \
-2.2691681930933774`}, {-5.384562859340631, -2.807511806906621}, \
{-5.11539105243401, -3.2737310524340084`}, {-4.649171806906623, \
-3.5429028593406304`}}],
     RegularPolygon[{-4.38, -2.53834}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-4.110828136479451, -1.5383398635205487`}, \
{-4.110828136479451, -0.999996136479451}, {-4.649171863520548, \
-0.999996136479451}, {-4.649171863520549, -1.5383398635205487`}}],
      RegularPolygon[{-4.38, -1.2691679999999999`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, -0.7391679999999998}, {-4.108993464005752, \
-1.0041679999999997`}, {-4.108993464005753, -1.5341679999999998`}, {-3.65, \
-1.7991679999999999`}, {-3.1910065359942474`, -1.5341680000000002`}, \
{-3.191006535994247, -1.0041680000000002`}}],
      RegularPolygon[{-3.65, -1.2691679999999999`}, {0.53, Rational[1, 2] Pi},
        6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, -2.002277869442041}, \
{-3.186476130557959, -1.536057913484019}, {-3.6526960865159808`, \
-1.8052301305579583`}, {-3.3835238694420413`, -2.2714500865159803`}}],
      RegularPolygon[{-3.285, -1.9037539999999997`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, -2.0083399999999996`}, {-3.3789934640057524`, \
-2.2733399999999997`}, {-3.3789934640057524`, -2.8033399999999995`}, {-2.92, \
-3.06834}, {-2.4610065359942475`, -2.80334}, {-2.4610065359942475`, \
-2.27334}}],
      RegularPolygon[{-2.92, -2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, -3.0744021305579587`}, \
{-3.3835238694420413`, -2.8052299134840193`}, {-3.6526960865159808`, \
-3.271449869442041}, {-3.186476130557959, -3.5406220865159805`}}],
      RegularPolygon[{-3.285, -3.172926}, {0.380667, Rational[1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, -3.2775119999999998`}, {-4.108993464005752, \
-3.542512}, {-4.108993464005753, -4.072512}, {-3.65, -4.337512}, \
{-3.1910065359942474`, -4.072512000000001}, {-3.191006535994247, \
-3.5425120000000003`}}],
      RegularPolygon[{-3.65, -3.807512}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-4.110828136479451, -4.076683863520549}, \
{-4.110828136479451, -3.538340136479451}, {-4.649171863520548, \
-3.538340136479451}, {-4.649171863520549, -4.0766838635205485`}}],
      RegularPolygon[{-4.38, -3.807512}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.109999999999999, -3.2775119999999998`}, \
{-5.568993464005752, -3.542512}, {-5.568993464005752, -4.072512}, \
{-5.109999999999999, -4.337512}, {-4.651006535994247, -4.072512000000001}, \
{-4.651006535994247, -3.5425120000000003`}}],
      RegularPolygon[{-5.109999999999999, -3.807512}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.107303913484019, -3.271449869442041}, \
{-5.3764761305579585`, -2.8052299134840193`}, {-5.84269608651598, \
-3.0744021305579587`}, {-5.573523869442041, -3.5406220865159805`}}],
      RegularPolygon[{-5.475, -3.172926}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.84, -2.0083399999999996`}, {-6.298993464005752, \
-2.2733399999999997`}, {-6.298993464005752, -2.8033399999999995`}, {-5.84, \
-3.06834}, {-5.381006535994247, -2.80334}, {-5.381006535994247, -2.27334}}],
      RegularPolygon[{-5.84, -2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.107303913484019, -1.8052301305579586`}, \
{-5.573523869442041, -1.536057913484019}, {-5.84269608651598, \
-2.002277869442041}, {-5.3764761305579585`, -2.2714500865159803`}}],
      RegularPolygon[{-5.475, -1.9037539999999997`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.109999999999999, -0.7391679999999998}, \
{-5.568993464005752, -1.0041679999999997`}, {-5.568993464005752, \
-1.5341679999999998`}, {-5.109999999999999, -1.7991679999999999`}, \
{-4.651006535994247, -1.5341680000000002`}, {-4.651006535994247, \
-1.0041680000000002`}}],
      RegularPolygon[{-5.109999999999999, -1.2691679999999999`}, {
       0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{-4.110828193093378, -1.004562859340631}, \
{-3.6446089475659904`, -0.7353910524340095}, {-3.375437140659369, \
-0.26917180690662174`}, {-3.375437140659369, 
      0.2691718069066215}, {-3.6446089475659904`, 
      0.7353910524340093}, {-4.110828193093377, 
      1.004562859340631}, {-4.6491718069066215`, 
      1.004562859340631}, {-5.115391052434009, 
      0.7353910524340095}, {-5.3845628593406305`, 
      0.26917180690662235`}, {-5.384562859340631, -0.2691718069066212}, \
{-5.11539105243401, -0.7353910524340087}, {-4.649171806906623, \
-1.0045628593406306`}}],
     RegularPolygon[{-4.38, 0.}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-4.110828136479451, 
       1.000000136479451}, {-4.110828136479451, 
       1.5383438635205489`}, {-4.649171863520548, 
       1.5383438635205489`}, {-4.649171863520549, 1.000000136479451}}],
      RegularPolygon[{-4.38, 1.269172}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, 1.799172}, {-4.108993464005752, 
       1.534172}, {-4.108993464005753, 1.004172}, {-3.65, 
       0.7391719999999999}, {-3.1910065359942474`, 
       1.0041719999999996`}, {-3.191006535994247, 1.5341719999999996`}}],
      RegularPolygon[{-3.65, 1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, 
       0.5360621305579587}, {-3.186476130557959, 
       1.0022820865159807`}, {-3.6526960865159808`, 
       0.7331098694420414}, {-3.3835238694420413`, 0.26688991348401925`}}],
      RegularPolygon[{-3.285, 0.634586}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, 0.53}, {-3.3789934640057524`, 
       0.2650000000000002}, {-3.3789934640057524`, -0.26499999999999985`}, \
{-2.92, -0.53}, {-2.4610065359942475`, -0.26500000000000024`}, \
{-2.4610065359942475`, 0.2649999999999996}}],
      RegularPolygon[{-2.92, 0.}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, -0.5360621305579587}, \
{-3.3835238694420413`, -0.26688991348401925`}, {-3.6526960865159808`, \
-0.7331098694420413}, {-3.186476130557959, -1.0022820865159807`}}],
      RegularPolygon[{-3.285, -0.634586}, {0.380667, Rational[1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, -0.7391719999999999}, {-4.108993464005752, \
-1.0041719999999998`}, {-4.108993464005753, -1.5341719999999999`}, {-3.65, \
-1.799172}, {-3.1910065359942474`, -1.5341720000000003`}, \
{-3.191006535994247, -1.0041720000000003`}}],
      RegularPolygon[{-3.65, -1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-4.110828136479451, -1.5383438635205489`}, \
{-4.110828136479451, -1.000000136479451}, {-4.649171863520548, \
-1.000000136479451}, {-4.649171863520549, -1.5383438635205489`}}],
      RegularPolygon[{-4.38, -1.269172}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.109999999999999, -0.7391719999999999}, \
{-5.568993464005752, -1.0041719999999998`}, {-5.568993464005752, \
-1.5341719999999999`}, {-5.109999999999999, -1.799172}, {-4.651006535994247, \
-1.5341720000000003`}, {-4.651006535994247, -1.0041720000000003`}}],
      RegularPolygon[{-5.109999999999999, -1.269172}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.107303913484019, -0.7331098694420413}, \
{-5.3764761305579585`, -0.26688991348401925`}, {-5.84269608651598, \
-0.5360621305579586}, {-5.573523869442041, -1.0022820865159807`}}],
      RegularPolygon[{-5.475, -0.634586}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.84, 0.53}, {-6.298993464005752, 
       0.2650000000000002}, {-6.298993464005752, -0.26499999999999985`}, \
{-5.84, -0.53}, {-5.381006535994247, -0.26500000000000024`}, \
{-5.381006535994247, 0.2649999999999996}}],
      RegularPolygon[{-5.84, 0.}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.107303913484019, 
       0.7331098694420413}, {-5.573523869442041, 
       1.0022820865159807`}, {-5.84269608651598, 
       0.5360621305579587}, {-5.3764761305579585`, 0.2668899134840192}}],
      RegularPolygon[{-5.475, 0.634586}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.109999999999999, 1.799172}, {-5.568993464005752, 
       1.534172}, {-5.568993464005752, 1.004172}, {-5.109999999999999, 
       0.7391719999999999}, {-4.651006535994247, 
       1.0041719999999996`}, {-4.651006535994247, 1.5341719999999996`}}],
      RegularPolygon[{-5.109999999999999, 1.269172}, {
       0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{-4.110828193093378, 
      1.5337771406593688`}, {-3.6446089475659904`, 
      1.8029489475659903`}, {-3.375437140659369, 
      2.2691681930933782`}, {-3.375437140659369, 
      2.8075118069066214`}, {-3.6446089475659904`, 
      3.273731052434009}, {-4.110828193093377, 
      3.542902859340631}, {-4.6491718069066215`, 
      3.542902859340631}, {-5.115391052434009, 
      3.2737310524340093`}, {-5.3845628593406305`, 
      2.8075118069066223`}, {-5.384562859340631, 
      2.2691681930933787`}, {-5.11539105243401, 
      1.8029489475659912`}, {-4.649171806906623, 1.5337771406593692`}}],
     RegularPolygon[{-4.38, 2.53834}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-4.110828136479451, 
       3.538340136479451}, {-4.110828136479451, 
       4.076683863520549}, {-4.649171863520548, 
       4.076683863520549}, {-4.649171863520549, 3.538340136479451}}],
      RegularPolygon[{-4.38, 3.807512}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, 4.337512}, {-4.108993464005752, 
       4.072512000000001}, {-4.108993464005753, 3.5425120000000003`}, {-3.65, 
       3.2775119999999998`}, {-3.1910065359942474`, 
       3.542512}, {-3.191006535994247, 4.072512}}],
      RegularPolygon[{-3.65, 3.807512}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, 
       3.0744021305579587`}, {-3.186476130557959, 
       3.5406220865159805`}, {-3.6526960865159808`, 
       3.271449869442041}, {-3.3835238694420413`, 2.8052299134840193`}}],
      RegularPolygon[{-3.285, 3.172926}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, 3.06834}, {-3.3789934640057524`, 
       2.80334}, {-3.3789934640057524`, 2.27334}, {-2.92, 
       2.0083399999999996`}, {-2.4610065359942475`, 
       2.2733399999999997`}, {-2.4610065359942475`, 2.8033399999999995`}}],
      RegularPolygon[{-2.92, 2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, 
       2.002277869442041}, {-3.3835238694420413`, 
       2.2714500865159803`}, {-3.6526960865159808`, 
       1.8052301305579586`}, {-3.186476130557959, 1.5360579134840189`}}],
      RegularPolygon[{-3.285, 1.9037539999999997`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, 1.7991679999999999`}, {-4.108993464005752, 
       1.534168}, {-4.108993464005753, 1.004168}, {-3.65, 
       0.7391679999999998}, {-3.1910065359942474`, 
       1.0041679999999995`}, {-3.191006535994247, 1.5341679999999995`}}],
      RegularPolygon[{-3.65, 1.2691679999999999`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-4.110828136479451, 
       0.999996136479451}, {-4.110828136479451, 
       1.5383398635205487`}, {-4.649171863520548, 
       1.5383398635205487`}, {-4.649171863520549, 0.999996136479451}}],
      RegularPolygon[{-4.38, 1.2691679999999999`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.109999999999999, 
       1.7991679999999999`}, {-5.568993464005752, 
       1.534168}, {-5.568993464005752, 1.004168}, {-5.109999999999999, 
       0.7391679999999998}, {-4.651006535994247, 
       1.0041679999999995`}, {-4.651006535994247, 1.5341679999999995`}}],
      RegularPolygon[{-5.109999999999999, 1.2691679999999999`}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.107303913484019, 
       1.8052301305579586`}, {-5.3764761305579585`, 
       2.2714500865159803`}, {-5.84269608651598, 
       2.002277869442041}, {-5.573523869442041, 1.536057913484019}}],
      RegularPolygon[{-5.475, 1.9037539999999997`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.84, 3.06834}, {-6.298993464005752, 
       2.80334}, {-6.298993464005752, 2.27334}, {-5.84, 
       2.0083399999999996`}, {-5.381006535994247, 
       2.2733399999999997`}, {-5.381006535994247, 2.8033399999999995`}}],
      RegularPolygon[{-5.84, 2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.107303913484019, 
       3.271449869442041}, {-5.573523869442041, 
       3.5406220865159805`}, {-5.84269608651598, 
       3.0744021305579587`}, {-5.3764761305579585`, 2.8052299134840193`}}],
      RegularPolygon[{-5.475, 3.172926}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-5.109999999999999, 4.337512}, {-5.568993464005752, 
       4.072512000000001}, {-5.568993464005752, 
       3.5425120000000003`}, {-5.109999999999999, 
       3.2775119999999998`}, {-4.651006535994247, 
       3.542512}, {-4.651006535994247, 4.072512}}],
      RegularPolygon[{-5.109999999999999, 3.807512}, {
       0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{-1.9208281930933784`, -4.812072859340631}, \
{-1.4546089475659905`, -4.54290105243401}, {-1.185437140659369, \
-4.076681806906621}, {-1.185437140659369, -3.538338193093378}, \
{-1.4546089475659905`, -3.0721189475659907`}, {-1.920828193093378, \
-2.8029471406593687`}, {-2.4591718069066215`, -2.8029471406593687`}, \
{-2.9253910524340094`, -3.0721189475659902`}, {-3.194562859340631, \
-3.5383381930933773`}, {-3.194562859340631, -4.076681806906621}, \
{-2.9253910524340103`, -4.542901052434009}, {-2.4591718069066233`, \
-4.81207285934063}}],
     RegularPolygon[{-2.19, -3.8075099999999997`}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, -2.8075098635205484`}, \
{-1.920828136479451, -2.2691661364794506`}, {-2.459171863520549, \
-2.2691661364794506`}, {-2.459171863520549, -2.8075098635205484`}}],
      RegularPolygon[{-2.19, -2.5383379999999995`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.46, -2.0083379999999993`}, {-1.9189934640057524`, \
-2.2733379999999994`}, {-1.9189934640057524`, -2.803337999999999}, {-1.46, \
-3.068338}, {-1.0010065359942475`, -2.8033379999999997`}, \
{-1.0010065359942473`, -2.273338}}],
      RegularPolygon[{-1.46, -2.5383379999999995`}, {0.53, Rational[1, 2] Pi},
        6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -3.271447869442041}, \
{-0.9964761305579587, -2.805227913484019}, {-1.4626960865159806`, \
-3.0744001305579585`}, {-1.1935238694420411`, -3.5406200865159803`}}],
      RegularPolygon[{-1.095, -3.1729239999999996`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, -3.2775099999999995`}, {-1.1889934640057525`, \
-3.5425099999999996`}, {-1.1889934640057525`, -4.072509999999999}, \
{-0.7300000000000001, -4.33751}, {-0.2710065359942476, -4.07251}, \
{-0.2710065359942473, -3.54251}}],
      RegularPolygon[{-0.73, -3.8075099999999997`}, {0.53, Rational[1, 2] Pi},
        6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -4.343572130557958}, \
{-1.1935238694420411`, -4.074399913484019}, {-1.4626960865159808`, \
-4.5406198694420405`}, {-0.9964761305579589, -4.80979208651598}}],
      RegularPolygon[{-1.095, -4.442095999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.46, -4.546682}, {-1.9189934640057524`, \
-4.811681999999999}, {-1.9189934640057524`, -5.341682}, {-1.46, -5.606682}, \
{-1.0010065359942475`, -5.3416820000000005`}, {-1.0010065359942473`, \
-4.811682}}],
      RegularPolygon[{-1.46, -5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, -5.345853863520549}, \
{-1.920828136479451, -4.807510136479451}, {-2.459171863520549, \
-4.807510136479451}, {-2.459171863520549, -5.345853863520549}}],
      RegularPolygon[{-2.19, -5.076682}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, -4.546682}, {-3.3789934640057524`, \
-4.811681999999999}, {-3.3789934640057524`, -5.341682}, {-2.92, -5.606682}, \
{-2.4610065359942475`, -5.3416820000000005`}, {-2.4610065359942475`, \
-4.811682}}],
      RegularPolygon[{-2.92, -5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, -4.5406198694420405`}, \
{-3.186476130557959, -4.074399913484019}, {-3.6526960865159808`, \
-4.343572130557958}, {-3.3835238694420413`, -4.80979208651598}}],
      RegularPolygon[{-3.285, -4.442095999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, -3.2775099999999995`}, {-4.108993464005752, \
-3.5425099999999996`}, {-4.108993464005753, -4.072509999999999}, {-3.65, \
-4.33751}, {-3.1910065359942474`, -4.07251}, {-3.191006535994247, -3.54251}}],
      RegularPolygon[{-3.65, -3.8075099999999997`}, {0.53, Rational[1, 2] Pi},
        6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, -3.0744001305579585`}, \
{-3.3835238694420413`, -2.805227913484019}, {-3.6526960865159808`, \
-3.271447869442041}, {-3.186476130557959, -3.5406200865159803`}}],
      RegularPolygon[{-3.285, -3.1729239999999996`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, -2.0083379999999993`}, {-3.3789934640057524`, \
-2.2733379999999994`}, {-3.3789934640057524`, -2.803337999999999}, {-2.92, \
-3.068338}, {-2.4610065359942475`, -2.8033379999999997`}, \
{-2.4610065359942475`, -2.273338}}],
      RegularPolygon[{-2.92, -2.5383379999999995`}, {0.53, Rational[1, 2] Pi},
        6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{-1.9208281930933784`, -2.273732859340631}, \
{-1.4546089475659905`, -2.0045610524340094`}, {-1.185437140659369, \
-1.5383418069066217`}, {-1.185437140659369, -0.9999981930933783}, \
{-1.4546089475659905`, -0.5337789475659906}, {-1.920828193093378, \
-0.26460714065936886`}, {-2.4591718069066215`, -0.26460714065936886`}, \
{-2.9253910524340094`, -0.5337789475659904}, {-3.194562859340631, \
-0.9999981930933776}, {-3.194562859340631, -1.538341806906621}, \
{-2.9253910524340103`, -2.0045610524340085`}, {-2.4591718069066233`, \
-2.2737328593406305`}}],
     RegularPolygon[{-2.19, -1.26917}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, -0.26916986352054884`}, \
{-1.920828136479451, 0.26917386352054906`}, {-2.459171863520549, 
       0.26917386352054906`}, {-2.459171863520549, -0.2691698635205488}}],
      RegularPolygon[{-2.19, 2.0000000001130225`*^-6}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-1.46, 0.5300020000000001}, {-1.9189934640057524`, 
       0.2650020000000003}, {-1.9189934640057524`, -0.26499799999999973`}, \
{-1.46, -0.529998}, {-1.0010065359942475`, -0.2649980000000001}, \
{-1.0010065359942473`, 0.26500199999999974`}}],
      RegularPolygon[{-1.46, 2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -0.7331078694420412}, \
{-0.9964761305579587, -0.2668879134840192}, {-1.4626960865159806`, \
-0.5360601305579585}, {-1.1935238694420411`, -1.0022800865159807`}}],
      RegularPolygon[{-1.095, -0.6345839999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.73, -0.7391699999999999}, {-1.1889934640057525`, \
-1.0041699999999998`}, {-1.1889934640057525`, -1.5341699999999998`}, \
{-0.7300000000000001, -1.79917}, {-0.2710065359942476, -1.53417}, \
{-0.2710065359942473, -1.0041700000000002`}}],
      RegularPolygon[{-0.73, -1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -1.8052321305579588`}, \
{-1.1935238694420411`, -1.5360599134840194`}, {-1.4626960865159808`, \
-2.002279869442041}, {-0.9964761305579589, -2.2714520865159806`}}],
      RegularPolygon[{-1.095, -1.903756}, {0.380667, Rational[1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.46, -2.008342}, {-1.9189934640057524`, -2.273342}, \
{-1.9189934640057524`, -2.803342}, {-1.46, -3.0683420000000003`}, \
{-1.0010065359942475`, -2.8033420000000002`}, {-1.0010065359942473`, \
-2.2733420000000004`}}],
      RegularPolygon[{-1.46, -2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, -2.807513863520549}, \
{-1.920828136479451, -2.269170136479451}, {-2.459171863520549, \
-2.269170136479451}, {-2.459171863520549, -2.807513863520549}}],
      RegularPolygon[{-2.19, -2.538342}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, -2.008342}, {-3.3789934640057524`, -2.273342}, \
{-3.3789934640057524`, -2.803342}, {-2.92, -3.0683420000000003`}, \
{-2.4610065359942475`, -2.8033420000000002`}, {-2.4610065359942475`, \
-2.2733420000000004`}}],
      RegularPolygon[{-2.92, -2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, -2.002279869442041}, \
{-3.186476130557959, -1.5360599134840194`}, {-3.6526960865159808`, \
-1.8052321305579586`}, {-3.3835238694420413`, -2.2714520865159806`}}],
      RegularPolygon[{-3.285, -1.903756}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, -0.7391699999999999}, {-4.108993464005752, \
-1.0041699999999998`}, {-4.108993464005753, -1.5341699999999998`}, {-3.65, \
-1.79917}, {-3.1910065359942474`, -1.53417}, {-3.191006535994247, \
-1.0041700000000002`}}],
      RegularPolygon[{-3.65, -1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, -0.5360601305579586}, \
{-3.3835238694420413`, -0.2668879134840192}, {-3.6526960865159808`, \
-0.7331078694420412}, {-3.186476130557959, -1.0022800865159807`}}],
      RegularPolygon[{-3.285, -0.6345839999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, 0.5300020000000001}, {-3.3789934640057524`, 
       0.2650020000000003}, {-3.3789934640057524`, -0.26499799999999973`}, \
{-2.92, -0.529998}, {-2.4610065359942475`, -0.2649980000000001}, \
{-2.4610065359942475`, 0.26500199999999974`}}],
      RegularPolygon[{-2.92, 2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[1], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{-1.9208281930933784`, 
      0.26460714065936886`}, {-1.4546089475659905`, 
      0.5337789475659904}, {-1.185437140659369, 
      0.9999981930933781}, {-1.185437140659369, 
      1.5383418069066215`}, {-1.4546089475659905`, 
      2.004561052434009}, {-1.920828193093378, 
      2.273732859340631}, {-2.4591718069066215`, 
      2.273732859340631}, {-2.9253910524340094`, 
      2.0045610524340094`}, {-3.194562859340631, 
      1.5383418069066224`}, {-3.194562859340631, 
      0.9999981930933788}, {-2.9253910524340103`, 
      0.5337789475659912}, {-2.4591718069066233`, 0.2646071406593693}}],
     RegularPolygon[{-2.19, 1.26917}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, 
       2.269170136479451}, {-1.920828136479451, 
       2.807513863520549}, {-2.459171863520549, 
       2.807513863520549}, {-2.459171863520549, 2.269170136479451}}],
      RegularPolygon[{-2.19, 2.538342}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-1.46, 3.0683420000000003`}, {-1.9189934640057524`, 
       2.8033420000000002`}, {-1.9189934640057524`, 
       2.2733420000000004`}, {-1.46, 2.008342}, {-1.0010065359942475`, 
       2.273342}, {-1.0010065359942473`, 2.803342}}],
      RegularPolygon[{-1.46, 2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       1.8052321305579588`}, {-0.9964761305579587, 
       2.2714520865159806`}, {-1.4626960865159806`, 
       2.002279869442041}, {-1.1935238694420411`, 1.5360599134840194`}}],
      RegularPolygon[{-1.095, 1.903756}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.73, 1.79917}, {-1.1889934640057525`, 
       1.53417}, {-1.1889934640057525`, 1.00417}, {-0.7300000000000001, 
       0.7391699999999999}, {-0.2710065359942476, 
       1.0041699999999998`}, {-0.2710065359942473, 1.5341699999999996`}}],
      RegularPolygon[{-0.73, 1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       0.7331078694420412}, {-1.1935238694420411`, 
       1.0022800865159807`}, {-1.4626960865159808`, 
       0.5360601305579586}, {-0.9964761305579589, 0.26688791348401913`}}],
      RegularPolygon[{-1.095, 0.6345839999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-1.46, 0.529998}, {-1.9189934640057524`, 
       0.26499800000000007`}, {-1.9189934640057524`, -0.26500199999999996`}, \
{-1.46, -0.5300020000000001}, {-1.0010065359942475`, -0.26500200000000035`}, \
{-1.0010065359942473`, 0.2649979999999995}}],
      RegularPolygon[{-1.46, -2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, -0.26917386352054906`}, \
{-1.920828136479451, 0.26916986352054884`}, {-2.459171863520549, 
       0.26916986352054884`}, {-2.459171863520549, -0.269173863520549}}],
      RegularPolygon[{-2.19, -2.0000000001130225`*^-6}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, 0.529998}, {-3.3789934640057524`, 
       0.26499800000000007`}, {-3.3789934640057524`, -0.26500199999999996`}, \
{-2.92, -0.5300020000000001}, {-2.4610065359942475`, -0.26500200000000035`}, \
{-2.4610065359942475`, 0.2649979999999995}}],
      RegularPolygon[{-2.92, -2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, 
       0.5360601305579586}, {-3.186476130557959, 
       1.0022800865159807`}, {-3.6526960865159808`, 
       0.7331078694420413}, {-3.3835238694420413`, 0.2668879134840192}}],
      RegularPolygon[{-3.285, 0.6345839999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, 1.79917}, {-4.108993464005752, 
       1.53417}, {-4.108993464005753, 1.00417}, {-3.65, 
       0.7391699999999999}, {-3.1910065359942474`, 
       1.0041699999999998`}, {-3.191006535994247, 1.5341699999999996`}}],
      RegularPolygon[{-3.65, 1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, 
       2.002279869442041}, {-3.3835238694420413`, 
       2.2714520865159806`}, {-3.6526960865159808`, 
       1.8052321305579588`}, {-3.186476130557959, 1.5360599134840192`}}],
      RegularPolygon[{-3.285, 1.903756}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, 3.0683420000000003`}, {-3.3789934640057524`, 
       2.8033420000000002`}, {-3.3789934640057524`, 
       2.2733420000000004`}, {-2.92, 2.008342}, {-2.4610065359942475`, 
       2.273342}, {-2.4610065359942475`, 2.803342}}],
      RegularPolygon[{-2.92, 2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{-1.9208281930933784`, 
      2.8029471406593687`}, {-1.4546089475659905`, 
      3.0721189475659902`}, {-1.185437140659369, 
      3.538338193093378}, {-1.185437140659369, 
      4.076681806906621}, {-1.4546089475659905`, 
      4.542901052434009}, {-1.920828193093378, 
      4.812072859340631}, {-2.4591718069066215`, 
      4.812072859340631}, {-2.9253910524340094`, 
      4.54290105243401}, {-3.194562859340631, 
      4.076681806906622}, {-3.194562859340631, 
      3.5383381930933786`}, {-2.9253910524340103`, 
      3.072118947565991}, {-2.4591718069066233`, 2.802947140659369}}],
     RegularPolygon[{-2.19, 3.8075099999999997`}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, 
       4.807510136479451}, {-1.920828136479451, 
       5.345853863520549}, {-2.459171863520549, 
       5.345853863520549}, {-2.459171863520549, 4.807510136479451}}],
      RegularPolygon[{-2.19, 5.076682}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.46, 5.606682}, {-1.9189934640057524`, 
       5.3416820000000005`}, {-1.9189934640057524`, 4.811682}, {-1.46, 
       4.546682}, {-1.0010065359942475`, 
       4.811681999999999}, {-1.0010065359942473`, 5.341682}}],
      RegularPolygon[{-1.46, 5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       4.343572130557958}, {-0.9964761305579587, 
       4.80979208651598}, {-1.4626960865159806`, 
       4.5406198694420405`}, {-1.1935238694420411`, 4.074399913484019}}],
      RegularPolygon[{-1.095, 4.442095999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, 4.33751}, {-1.1889934640057525`, 
       4.07251}, {-1.1889934640057525`, 3.54251}, {-0.7300000000000001, 
       3.2775099999999995`}, {-0.2710065359942476, 
       3.5425099999999996`}, {-0.2710065359942473, 4.072509999999999}}],
      RegularPolygon[{-0.73, 3.8075099999999997`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       3.271447869442041}, {-1.1935238694420411`, 
       3.5406200865159803`}, {-1.4626960865159808`, 
       3.0744001305579585`}, {-0.9964761305579589, 2.805227913484019}}],
      RegularPolygon[{-1.095, 3.1729239999999996`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-1.46, 3.068338}, {-1.9189934640057524`, 
       2.8033379999999997`}, {-1.9189934640057524`, 2.273338}, {-1.46, 
       2.0083379999999993`}, {-1.0010065359942475`, 
       2.2733379999999994`}, {-1.0010065359942473`, 2.803337999999999}}],
      RegularPolygon[{-1.46, 2.5383379999999995`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.920828136479451, 
       2.2691661364794506`}, {-1.920828136479451, 
       2.8075098635205484`}, {-2.459171863520549, 
       2.8075098635205484`}, {-2.459171863520549, 2.2691661364794506`}}],
      RegularPolygon[{-2.19, 2.5383379999999995`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, 3.068338}, {-3.3789934640057524`, 
       2.8033379999999997`}, {-3.3789934640057524`, 2.273338}, {-2.92, 
       2.0083379999999993`}, {-2.4610065359942475`, 
       2.2733379999999994`}, {-2.4610065359942475`, 2.803337999999999}}],
      RegularPolygon[{-2.92, 2.5383379999999995`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, 
       3.0744001305579585`}, {-3.186476130557959, 
       3.5406200865159803`}, {-3.6526960865159808`, 
       3.271447869442041}, {-3.3835238694420413`, 2.805227913484019}}],
      RegularPolygon[{-3.285, 3.1729239999999996`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-3.65, 4.33751}, {-4.108993464005752, 
       4.07251}, {-4.108993464005753, 3.54251}, {-3.65, 
       3.2775099999999995`}, {-3.1910065359942474`, 
       3.5425099999999996`}, {-3.191006535994247, 4.072509999999999}}],
      RegularPolygon[{-3.65, 3.8075099999999997`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.9173039134840195`, 
       4.5406198694420405`}, {-3.3835238694420413`, 
       4.80979208651598}, {-3.6526960865159808`, 
       4.343572130557958}, {-3.186476130557959, 4.074399913484019}}],
      RegularPolygon[{-3.285, 4.442095999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-2.92, 5.606682}, {-3.3789934640057524`, 
       5.3416820000000005`}, {-3.3789934640057524`, 4.811682}, {-2.92, 
       4.546682}, {-2.4610065359942475`, 
       4.811681999999999}, {-2.4610065359942475`, 5.341682}}],
      RegularPolygon[{-2.92, 5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{0.26917180690662157`, -6.08124285934063}, {
      0.7353910524340094, -5.812071052434009}, {
      1.004562859340631, -5.345851806906621}, {
      1.004562859340631, -4.807508193093378}, {
      0.7353910524340096, -4.341288947565991}, {
      0.269171806906622, -4.072117140659369}, {-0.26917180690662146`, \
-4.072117140659369}, {-0.7353910524340094, -4.341288947565991}, \
{-1.0045628593406308`, -4.807508193093377}, {-1.0045628593406313`, \
-5.345851806906621}, {-0.7353910524340102, -5.812071052434009}, \
{-0.26917180690662323`, -6.08124285934063}}],
     RegularPolygon[{0., -5.07668}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, -4.076679863520549}, {
       0.26917186352054895`, -3.5383361364794506`}, {-0.2691718635205489, \
-3.5383361364794506`}, {-0.26917186352054895`, -4.076679863520548}}],
      RegularPolygon[{0., -3.8075079999999994`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, -3.277507999999999}, {
       0.27100653599424757`, -3.5425079999999993`}, {
       0.2710065359942474, -4.072507999999999}, {
       0.7299999999999999, -4.337508}, {1.1889934640057525`, -4.072508}, {
       1.1889934640057527`, -3.5425079999999998`}}],
      RegularPolygon[{0.73, -3.8075079999999994`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -4.540617869442041}, {
       1.1935238694420411`, -4.074397913484019}, {
       0.7273039134840193, -4.343570130557959}, {
       0.9964761305579588, -4.809790086515981}}],
      RegularPolygon[{1.095, -4.442094}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.46, -4.546679999999999}, {
       1.0010065359942475`, -4.811679999999999}, {
       1.0010065359942475`, -5.341679999999999}, {1.46, -5.60668}, {
       1.9189934640057524`, -5.34168}, {1.9189934640057527`, -4.81168}}],
      RegularPolygon[{1.46, -5.07668}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -5.612742130557958}, {
       0.9964761305579588, -5.343569913484019}, {
       0.7273039134840192, -5.8097898694420405`}, {
       1.1935238694420411`, -6.07896208651598}}],
      RegularPolygon[{1.095, -5.711265999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, -5.815852}, {
       0.27100653599424757`, -6.080851999999999}, {
       0.2710065359942474, -6.6108519999999995`}, {
       0.7299999999999999, -6.875852}, {1.1889934640057525`, -6.610852}, {
       1.1889934640057527`, -6.080852}}],
      RegularPolygon[{0.73, -6.345852}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, -6.615023863520549}, {
       0.26917186352054895`, -6.0766801364794505`}, {-0.2691718635205489, \
-6.0766801364794505`}, {-0.26917186352054895`, -6.615023863520548}}],
      RegularPolygon[{0., -6.345852}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, -5.815852}, {-1.1889934640057525`, \
-6.080851999999999}, {-1.1889934640057525`, -6.6108519999999995`}, \
{-0.7300000000000001, -6.875852}, {-0.2710065359942476, -6.610852}, \
{-0.2710065359942473, -6.080852}}],
      RegularPolygon[{-0.73, -6.345852}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -5.8097898694420405`}, \
{-0.9964761305579587, -5.343569913484019}, {-1.4626960865159806`, \
-5.612742130557958}, {-1.1935238694420411`, -6.07896208651598}}],
      RegularPolygon[{-1.095, -5.711265999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.46, -4.546679999999999}, {-1.9189934640057524`, \
-4.811679999999999}, {-1.9189934640057524`, -5.341679999999999}, {-1.46, \
-5.60668}, {-1.0010065359942475`, -5.34168}, {-1.0010065359942473`, \
-4.81168}}],
      RegularPolygon[{-1.46, -5.07668}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -4.343570130557959}, \
{-1.1935238694420411`, -4.074397913484019}, {-1.4626960865159808`, \
-4.540617869442041}, {-0.9964761305579589, -4.809790086515981}}],
      RegularPolygon[{-1.095, -4.442094}, {0.380667, Rational[1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, -3.277507999999999}, {-1.1889934640057525`, \
-3.5425079999999993`}, {-1.1889934640057525`, -4.072507999999999}, \
{-0.7300000000000001, -4.337508}, {-0.2710065359942476, -4.072508}, \
{-0.2710065359942473, -3.5425079999999998`}}],
      RegularPolygon[{-0.73, -3.8075079999999994`}, {0.53, Rational[1, 2] Pi},
        6]]}}, 
   {GrayLevel[1], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{0.26917180690662157`, -3.542902859340631}, {
      0.7353910524340094, -3.2737310524340093`}, {
      1.004562859340631, -2.8075118069066214`}, {
      1.004562859340631, -2.2691681930933782`}, {
      0.7353910524340096, -1.8029489475659906`}, {
      0.269171806906622, -1.5337771406593688`}, {-0.26917180690662146`, \
-1.5337771406593688`}, {-0.7353910524340094, -1.8029489475659903`}, \
{-1.0045628593406308`, -2.2691681930933774`}, {-1.0045628593406313`, \
-2.807511806906621}, {-0.7353910524340102, -3.2737310524340084`}, \
{-0.26917180690662323`, -3.5429028593406304`}}],
     RegularPolygon[{0., -2.53834}, 1.04, 12]], 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, -1.5383398635205487`}, {
       0.26917186352054895`, -0.999996136479451}, {-0.2691718635205489, \
-0.999996136479451}, {-0.26917186352054895`, -1.5383398635205487`}}],
      RegularPolygon[{0., -1.2691679999999999`}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.73, -0.7391679999999998}, {
       0.27100653599424757`, -1.0041679999999997`}, {
       0.2710065359942474, -1.5341679999999998`}, {
       0.7299999999999999, -1.7991679999999999`}, {
       1.1889934640057525`, -1.5341680000000002`}, {
       1.1889934640057527`, -1.0041680000000002`}}],
      RegularPolygon[{0.73, -1.2691679999999999`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -2.002277869442041}, {
       1.1935238694420411`, -1.536057913484019}, {
       0.7273039134840193, -1.8052301305579583`}, {
       0.9964761305579588, -2.2714500865159803`}}],
      RegularPolygon[{1.095, -1.9037539999999997`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.46, -2.0083399999999996`}, {
       1.0010065359942475`, -2.2733399999999997`}, {
       1.0010065359942475`, -2.8033399999999995`}, {1.46, -3.06834}, {
       1.9189934640057524`, -2.80334}, {1.9189934640057527`, -2.27334}}],
      RegularPolygon[{1.46, -2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -3.0744021305579587`}, {
       0.9964761305579588, -2.8052299134840193`}, {
       0.7273039134840192, -3.271449869442041}, {
       1.1935238694420411`, -3.5406220865159805`}}],
      RegularPolygon[{1.095, -3.172926}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, -3.2775119999999998`}, {
       0.27100653599424757`, -3.542512}, {0.2710065359942474, -4.072512}, {
       0.7299999999999999, -4.337512}, {
       1.1889934640057525`, -4.072512000000001}, {
       1.1889934640057527`, -3.5425120000000003`}}],
      RegularPolygon[{0.73, -3.807512}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, -4.076683863520549}, {
       0.26917186352054895`, -3.538340136479451}, {-0.2691718635205489, \
-3.538340136479451}, {-0.26917186352054895`, -4.0766838635205485`}}],
      RegularPolygon[{0., -3.807512}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, -3.2775119999999998`}, {-1.1889934640057525`, \
-3.542512}, {-1.1889934640057525`, -4.072512}, {-0.7300000000000001, \
-4.337512}, {-0.2710065359942476, -4.072512000000001}, {-0.2710065359942473, \
-3.5425120000000003`}}],
      RegularPolygon[{-0.73, -3.807512}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -3.271449869442041}, \
{-0.9964761305579587, -2.8052299134840193`}, {-1.4626960865159806`, \
-3.0744021305579587`}, {-1.1935238694420411`, -3.5406220865159805`}}],
      RegularPolygon[{-1.095, -3.172926}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.46, -2.0083399999999996`}, {-1.9189934640057524`, \
-2.2733399999999997`}, {-1.9189934640057524`, -2.8033399999999995`}, {-1.46, \
-3.06834}, {-1.0010065359942475`, -2.80334}, {-1.0010065359942473`, \
-2.27334}}],
      RegularPolygon[{-1.46, -2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -1.8052301305579586`}, \
{-1.1935238694420411`, -1.536057913484019}, {-1.4626960865159808`, \
-2.002277869442041}, {-0.9964761305579589, -2.2714500865159803`}}],
      RegularPolygon[{-1.095, -1.9037539999999997`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.73, -0.7391679999999998}, {-1.1889934640057525`, \
-1.0041679999999997`}, {-1.1889934640057525`, -1.5341679999999998`}, \
{-0.7300000000000001, -1.7991679999999999`}, {-0.2710065359942476, \
-1.5341680000000002`}, {-0.2710065359942473, -1.0041680000000002`}}],
      RegularPolygon[{-0.73, -1.2691679999999999`}, {0.53, Rational[1, 2] Pi},
        6]]}}, 
   {GrayLevel[1], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{0.26917180690662157`, -1.004562859340631}, {
      0.7353910524340094, -0.7353910524340095}, {
      1.004562859340631, -0.26917180690662174`}, {1.004562859340631, 
      0.2691718069066215}, {0.7353910524340096, 0.7353910524340093}, {
      0.269171806906622, 1.004562859340631}, {-0.26917180690662146`, 
      1.004562859340631}, {-0.7353910524340094, 
      0.7353910524340095}, {-1.0045628593406308`, 
      0.26917180690662235`}, {-1.0045628593406313`, -0.2691718069066212}, \
{-0.7353910524340102, -0.7353910524340087}, {-0.26917180690662323`, \
-1.0045628593406306`}}],
     RegularPolygon[{0., 0.}, 1.04, 12]], 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, 1.000000136479451}, {
       0.26917186352054895`, 1.5383438635205489`}, {-0.2691718635205489, 
       1.5383438635205489`}, {-0.26917186352054895`, 1.000000136479451}}],
      RegularPolygon[{0., 1.269172}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.73, 1.799172}, {0.27100653599424757`, 1.534172}, {
       0.2710065359942474, 1.004172}, {0.7299999999999999, 
       0.7391719999999999}, {1.1889934640057525`, 1.0041719999999996`}, {
       1.1889934640057527`, 1.5341719999999996`}}],
      RegularPolygon[{0.73, 1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 0.5360621305579587}, {
       1.1935238694420411`, 1.0022820865159807`}, {0.7273039134840193, 
       0.7331098694420414}, {0.9964761305579588, 0.26688991348401925`}}],
      RegularPolygon[{1.095, 0.634586}, {0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.46, 0.53}, {1.0010065359942475`, 0.2650000000000002}, {
       1.0010065359942475`, -0.26499999999999985`}, {1.46, -0.53}, {
       1.9189934640057524`, -0.26500000000000024`}, {1.9189934640057527`, 
       0.2649999999999996}}],
      RegularPolygon[{1.46, 0.}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -0.5360621305579587}, {
       0.9964761305579588, -0.26688991348401925`}, {
       0.7273039134840192, -0.7331098694420413}, {
       1.1935238694420411`, -1.0022820865159807`}}],
      RegularPolygon[{1.095, -0.634586}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.73, -0.7391719999999999}, {
       0.27100653599424757`, -1.0041719999999998`}, {
       0.2710065359942474, -1.5341719999999999`}, {
       0.7299999999999999, -1.799172}, {
       1.1889934640057525`, -1.5341720000000003`}, {
       1.1889934640057527`, -1.0041720000000003`}}],
      RegularPolygon[{0.73, -1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, -1.5383438635205489`}, {
       0.26917186352054895`, -1.000000136479451}, {-0.2691718635205489, \
-1.000000136479451}, {-0.26917186352054895`, -1.5383438635205489`}}],
      RegularPolygon[{0., -1.269172}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.73, -0.7391719999999999}, {-1.1889934640057525`, \
-1.0041719999999998`}, {-1.1889934640057525`, -1.5341719999999999`}, \
{-0.7300000000000001, -1.799172}, {-0.2710065359942476, \
-1.5341720000000003`}, {-0.2710065359942473, -1.0041720000000003`}}],
      RegularPolygon[{-0.73, -1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, -0.7331098694420413}, \
{-0.9964761305579587, -0.26688991348401925`}, {-1.4626960865159806`, \
-0.5360621305579586}, {-1.1935238694420411`, -1.0022820865159807`}}],
      RegularPolygon[{-1.095, -0.634586}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-1.46, 0.53}, {-1.9189934640057524`, 
       0.2650000000000002}, {-1.9189934640057524`, -0.26499999999999985`}, \
{-1.46, -0.53}, {-1.0010065359942475`, -0.26500000000000024`}, \
{-1.0010065359942473`, 0.2649999999999996}}],
      RegularPolygon[{-1.46, 0.}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       0.7331098694420413}, {-1.1935238694420411`, 
       1.0022820865159807`}, {-1.4626960865159808`, 
       0.5360621305579587}, {-0.9964761305579589, 0.2668899134840192}}],
      RegularPolygon[{-1.095, 0.634586}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.73, 1.799172}, {-1.1889934640057525`, 
       1.534172}, {-1.1889934640057525`, 1.004172}, {-0.7300000000000001, 
       0.7391719999999999}, {-0.2710065359942476, 
       1.0041719999999996`}, {-0.2710065359942473, 1.5341719999999996`}}],
      RegularPolygon[{-0.73, 1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[1], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{0.26917180690662157`, 1.5337771406593688`}, {
      0.7353910524340094, 1.8029489475659903`}, {1.004562859340631, 
      2.2691681930933782`}, {1.004562859340631, 2.8075118069066214`}, {
      0.7353910524340096, 3.273731052434009}, {0.269171806906622, 
      3.542902859340631}, {-0.26917180690662146`, 
      3.542902859340631}, {-0.7353910524340094, 
      3.2737310524340093`}, {-1.0045628593406308`, 
      2.8075118069066223`}, {-1.0045628593406313`, 
      2.2691681930933787`}, {-0.7353910524340102, 
      1.8029489475659912`}, {-0.26917180690662323`, 1.5337771406593692`}}],
     RegularPolygon[{0., 2.53834}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, 3.538340136479451}, {
       0.26917186352054895`, 4.076683863520549}, {-0.2691718635205489, 
       4.076683863520549}, {-0.26917186352054895`, 3.538340136479451}}],
      RegularPolygon[{0., 3.807512}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, 4.337512}, {0.27100653599424757`, 
       4.072512000000001}, {0.2710065359942474, 3.5425120000000003`}, {
       0.7299999999999999, 3.2775119999999998`}, {1.1889934640057525`, 
       3.542512}, {1.1889934640057527`, 4.072512}}],
      RegularPolygon[{0.73, 3.807512}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 3.0744021305579587`}, {
       1.1935238694420411`, 3.5406220865159805`}, {0.7273039134840193, 
       3.271449869442041}, {0.9964761305579588, 2.8052299134840193`}}],
      RegularPolygon[{1.095, 3.172926}, {0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.46, 3.06834}, {1.0010065359942475`, 2.80334}, {
       1.0010065359942475`, 2.27334}, {1.46, 2.0083399999999996`}, {
       1.9189934640057524`, 2.2733399999999997`}, {1.9189934640057527`, 
       2.8033399999999995`}}],
      RegularPolygon[{1.46, 2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 2.002277869442041}, {
       0.9964761305579588, 2.2714500865159803`}, {0.7273039134840192, 
       1.8052301305579586`}, {1.1935238694420411`, 1.5360579134840189`}}],
      RegularPolygon[{1.095, 1.9037539999999997`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.73, 1.7991679999999999`}, {0.27100653599424757`, 
       1.534168}, {0.2710065359942474, 1.004168}, {0.7299999999999999, 
       0.7391679999999998}, {1.1889934640057525`, 1.0041679999999995`}, {
       1.1889934640057527`, 1.5341679999999995`}}],
      RegularPolygon[{0.73, 1.2691679999999999`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, 0.999996136479451}, {
       0.26917186352054895`, 1.5383398635205487`}, {-0.2691718635205489, 
       1.5383398635205487`}, {-0.26917186352054895`, 0.999996136479451}}],
      RegularPolygon[{0., 1.2691679999999999`}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.73, 1.7991679999999999`}, {-1.1889934640057525`, 
       1.534168}, {-1.1889934640057525`, 1.004168}, {-0.7300000000000001, 
       0.7391679999999998}, {-0.2710065359942476, 
       1.0041679999999995`}, {-0.2710065359942473, 1.5341679999999995`}}],
      RegularPolygon[{-0.73, 1.2691679999999999`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       1.8052301305579586`}, {-0.9964761305579587, 
       2.2714500865159803`}, {-1.4626960865159806`, 
       2.002277869442041}, {-1.1935238694420411`, 1.536057913484019}}],
      RegularPolygon[{-1.095, 1.9037539999999997`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{-1.46, 3.06834}, {-1.9189934640057524`, 
       2.80334}, {-1.9189934640057524`, 2.27334}, {-1.46, 
       2.0083399999999996`}, {-1.0010065359942475`, 
       2.2733399999999997`}, {-1.0010065359942473`, 2.8033399999999995`}}],
      RegularPolygon[{-1.46, 2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       3.271449869442041}, {-1.1935238694420411`, 
       3.5406220865159805`}, {-1.4626960865159808`, 
       3.0744021305579587`}, {-0.9964761305579589, 2.8052299134840193`}}],
      RegularPolygon[{-1.095, 3.172926}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, 4.337512}, {-1.1889934640057525`, 
       4.072512000000001}, {-1.1889934640057525`, 
       3.5425120000000003`}, {-0.7300000000000001, 
       3.2775119999999998`}, {-0.2710065359942476, 
       3.542512}, {-0.2710065359942473, 4.072512}}],
      RegularPolygon[{-0.73, 3.807512}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{0.26917180690662157`, 4.072117140659369}, {
      0.7353910524340094, 4.341288947565991}, {1.004562859340631, 
      4.807508193093378}, {1.004562859340631, 5.345851806906621}, {
      0.7353910524340096, 5.812071052434009}, {0.269171806906622, 
      6.08124285934063}, {-0.26917180690662146`, 
      6.08124285934063}, {-0.7353910524340094, 
      5.812071052434009}, {-1.0045628593406308`, 
      5.345851806906622}, {-1.0045628593406313`, 
      4.807508193093378}, {-0.7353910524340102, 
      4.341288947565991}, {-0.26917180690662323`, 4.072117140659369}}],
     RegularPolygon[{0., 5.07668}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, 6.0766801364794505`}, {
       0.26917186352054895`, 6.615023863520549}, {-0.2691718635205489, 
       6.615023863520549}, {-0.26917186352054895`, 6.076680136479451}}],
      RegularPolygon[{0., 6.345852}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, 6.875852}, {0.27100653599424757`, 6.610852}, {
       0.2710065359942474, 6.080852}, {0.7299999999999999, 5.815852}, {
       1.1889934640057525`, 6.080851999999999}, {1.1889934640057527`, 
       6.6108519999999995`}}],
      RegularPolygon[{0.73, 6.345852}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 5.612742130557958}, {
       1.1935238694420411`, 6.07896208651598}, {0.7273039134840193, 
       5.8097898694420405`}, {0.9964761305579588, 5.343569913484019}}],
      RegularPolygon[{1.095, 5.711265999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.46, 5.60668}, {1.0010065359942475`, 5.34168}, {
       1.0010065359942475`, 4.81168}, {1.46, 4.546679999999999}, {
       1.9189934640057524`, 4.811679999999999}, {1.9189934640057527`, 
       5.341679999999999}}],
      RegularPolygon[{1.46, 5.07668}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 4.540617869442041}, {
       0.9964761305579588, 4.809790086515981}, {0.7273039134840192, 
       4.343570130557959}, {1.1935238694420411`, 4.074397913484019}}],
      RegularPolygon[{1.095, 4.442094}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, 4.337508}, {0.27100653599424757`, 4.072508}, {
       0.2710065359942474, 3.5425079999999998`}, {0.7299999999999999, 
       3.277507999999999}, {1.1889934640057525`, 3.5425079999999993`}, {
       1.1889934640057527`, 4.072507999999999}}],
      RegularPolygon[{0.73, 3.8075079999999994`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.26917186352054895`, 3.5383361364794506`}, {
       0.26917186352054895`, 4.076679863520549}, {-0.2691718635205489, 
       4.076679863520549}, {-0.26917186352054895`, 3.5383361364794506`}}],
      RegularPolygon[{0., 3.8075079999999994`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, 4.337508}, {-1.1889934640057525`, 
       4.072508}, {-1.1889934640057525`, 
       3.5425079999999998`}, {-0.7300000000000001, 
       3.277507999999999}, {-0.2710065359942476, 
       3.5425079999999993`}, {-0.2710065359942473, 4.072507999999999}}],
      RegularPolygon[{-0.73, 3.8075079999999994`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       4.343570130557959}, {-0.9964761305579587, 
       4.809790086515981}, {-1.4626960865159806`, 
       4.540617869442041}, {-1.1935238694420411`, 4.074397913484019}}],
      RegularPolygon[{-1.095, 4.442094}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-1.46, 5.60668}, {-1.9189934640057524`, 
       5.34168}, {-1.9189934640057524`, 4.81168}, {-1.46, 
       4.546679999999999}, {-1.0010065359942475`, 
       4.811679999999999}, {-1.0010065359942473`, 5.341679999999999}}],
      RegularPolygon[{-1.46, 5.07668}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.7273039134840192, 
       5.8097898694420405`}, {-1.1935238694420411`, 
       6.07896208651598}, {-1.4626960865159808`, 
       5.612742130557958}, {-0.9964761305579589, 5.343569913484019}}],
      RegularPolygon[{-1.095, 5.711265999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{-0.73, 6.875852}, {-1.1889934640057525`, 
       6.610852}, {-1.1889934640057525`, 6.080852}, {-0.7300000000000001, 
       5.815852}, {-0.2710065359942476, 
       6.080851999999999}, {-0.2710065359942473, 6.6108519999999995`}}],
      RegularPolygon[{-0.73, 6.345852}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{2.4591718069066215`, -4.812072859340631}, {
      2.9253910524340094`, -4.54290105243401}, {
      3.194562859340631, -4.076681806906621}, {
      3.194562859340631, -3.538338193093378}, {
      2.9253910524340094`, -3.0721189475659907`}, {
      2.459171806906622, -2.8029471406593687`}, {
      1.9208281930933784`, -2.8029471406593687`}, {
      1.4546089475659905`, -3.0721189475659902`}, {
      1.1854371406593691`, -3.5383381930933773`}, {
      1.1854371406593687`, -4.076681806906621}, {
      1.4546089475659898`, -4.542901052434009}, {
      1.9208281930933766`, -4.81207285934063}}],
     RegularPolygon[{2.19, -3.8075099999999997`}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, -2.8075098635205484`}, {
       2.459171863520549, -2.2691661364794506`}, {
       1.920828136479451, -2.2691661364794506`}, {
       1.920828136479451, -2.8075098635205484`}}],
      RegularPolygon[{2.19, -2.5383379999999995`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, -2.0083379999999993`}, {
       2.4610065359942475`, -2.2733379999999994`}, {
       2.4610065359942475`, -2.803337999999999}, {2.92, -3.068338}, {
       3.3789934640057524`, -2.8033379999999997`}, {
       3.3789934640057524`, -2.273338}}],
      RegularPolygon[{2.92, -2.5383379999999995`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, -3.271447869442041}, {
       3.3835238694420413`, -2.805227913484019}, {
       2.9173039134840195`, -3.0744001305579585`}, {
       3.186476130557959, -3.5406200865159803`}}],
      RegularPolygon[{3.285, -3.1729239999999996`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, -3.2775099999999995`}, {
       3.1910065359942474`, -3.5425099999999996`}, {
       3.1910065359942474`, -4.072509999999999}, {3.65, -4.33751}, {
       4.108993464005752, -4.07251}, {4.108993464005753, -3.54251}}],
      RegularPolygon[{3.65, -3.8075099999999997`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, -4.343572130557958}, {
       3.186476130557959, -4.074399913484019}, {
       2.9173039134840195`, -4.5406198694420405`}, {
       3.3835238694420413`, -4.80979208651598}}],
      RegularPolygon[{3.285, -4.442095999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, -4.546682}, {
       2.4610065359942475`, -4.811681999999999}, {
       2.4610065359942475`, -5.341682}, {2.92, -5.606682}, {
       3.3789934640057524`, -5.3416820000000005`}, {
       3.3789934640057524`, -4.811682}}],
      RegularPolygon[{2.92, -5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, -5.345853863520549}, {
       2.459171863520549, -4.807510136479451}, {
       1.920828136479451, -4.807510136479451}, {
       1.920828136479451, -5.345853863520549}}],
      RegularPolygon[{2.19, -5.076682}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.46, -4.546682}, {
       1.0010065359942475`, -4.811681999999999}, {
       1.0010065359942475`, -5.341682}, {1.46, -5.606682}, {
       1.9189934640057524`, -5.3416820000000005`}, {
       1.9189934640057527`, -4.811682}}],
      RegularPolygon[{1.46, -5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -4.5406198694420405`}, {
       1.1935238694420411`, -4.074399913484019}, {
       0.7273039134840193, -4.343572130557958}, {
       0.9964761305579588, -4.80979208651598}}],
      RegularPolygon[{1.095, -4.442095999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, -3.2775099999999995`}, {
       0.27100653599424757`, -3.5425099999999996`}, {
       0.2710065359942474, -4.072509999999999}, {
       0.7299999999999999, -4.33751}, {1.1889934640057525`, -4.07251}, {
       1.1889934640057527`, -3.54251}}],
      RegularPolygon[{0.73, -3.8075099999999997`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -3.0744001305579585`}, {
       0.9964761305579588, -2.805227913484019}, {
       0.7273039134840192, -3.271447869442041}, {
       1.1935238694420411`, -3.5406200865159803`}}],
      RegularPolygon[{1.095, -3.1729239999999996`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.46, -2.0083379999999993`}, {
       1.0010065359942475`, -2.2733379999999994`}, {
       1.0010065359942475`, -2.803337999999999}, {1.46, -3.068338}, {
       1.9189934640057524`, -2.8033379999999997`}, {
       1.9189934640057527`, -2.273338}}],
      RegularPolygon[{1.46, -2.5383379999999995`}, {0.53, Rational[1, 2] Pi}, 
       6]]}}, 
   {GrayLevel[1], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{2.4591718069066215`, -2.273732859340631}, {
      2.9253910524340094`, -2.0045610524340094`}, {
      3.194562859340631, -1.5383418069066217`}, {
      3.194562859340631, -0.9999981930933783}, {
      2.9253910524340094`, -0.5337789475659906}, {
      2.459171806906622, -0.26460714065936886`}, {
      1.9208281930933784`, -0.26460714065936886`}, {
      1.4546089475659905`, -0.5337789475659904}, {
      1.1854371406593691`, -0.9999981930933776}, {
      1.1854371406593687`, -1.538341806906621}, {
      1.4546089475659898`, -2.0045610524340085`}, {
      1.9208281930933766`, -2.2737328593406305`}}],
     RegularPolygon[{2.19, -1.26917}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, -0.26916986352054884`}, {
       2.459171863520549, 0.26917386352054906`}, {1.920828136479451, 
       0.26917386352054906`}, {1.920828136479451, -0.2691698635205488}}],
      RegularPolygon[{2.19, 2.0000000001130225`*^-6}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, 0.5300020000000001}, {2.4610065359942475`, 
       0.2650020000000003}, {2.4610065359942475`, -0.26499799999999973`}, {
       2.92, -0.529998}, {3.3789934640057524`, -0.2649980000000001}, {
       3.3789934640057524`, 0.26500199999999974`}}],
      RegularPolygon[{2.92, 2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, -0.7331078694420412}, {
       3.3835238694420413`, -0.2668879134840192}, {
       2.9173039134840195`, -0.5360601305579585}, {
       3.186476130557959, -1.0022800865159807`}}],
      RegularPolygon[{3.285, -0.6345839999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, -0.7391699999999999}, {
       3.1910065359942474`, -1.0041699999999998`}, {
       3.1910065359942474`, -1.5341699999999998`}, {3.65, -1.79917}, {
       4.108993464005752, -1.53417}, {
       4.108993464005753, -1.0041700000000002`}}],
      RegularPolygon[{3.65, -1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, -1.8052321305579588`}, {
       3.186476130557959, -1.5360599134840194`}, {
       2.9173039134840195`, -2.002279869442041}, {
       3.3835238694420413`, -2.2714520865159806`}}],
      RegularPolygon[{3.285, -1.903756}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, -2.008342}, {2.4610065359942475`, -2.273342}, {
       2.4610065359942475`, -2.803342}, {2.92, -3.0683420000000003`}, {
       3.3789934640057524`, -2.8033420000000002`}, {
       3.3789934640057524`, -2.2733420000000004`}}],
      RegularPolygon[{2.92, -2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, -2.807513863520549}, {
       2.459171863520549, -2.269170136479451}, {
       1.920828136479451, -2.269170136479451}, {
       1.920828136479451, -2.807513863520549}}],
      RegularPolygon[{2.19, -2.538342}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.46, -2.008342}, {1.0010065359942475`, -2.273342}, {
       1.0010065359942475`, -2.803342}, {1.46, -3.0683420000000003`}, {
       1.9189934640057524`, -2.8033420000000002`}, {
       1.9189934640057527`, -2.2733420000000004`}}],
      RegularPolygon[{1.46, -2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -2.002279869442041}, {
       1.1935238694420411`, -1.5360599134840194`}, {
       0.7273039134840193, -1.8052321305579586`}, {
       0.9964761305579588, -2.2714520865159806`}}],
      RegularPolygon[{1.095, -1.903756}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.73, -0.7391699999999999}, {
       0.27100653599424757`, -1.0041699999999998`}, {
       0.2710065359942474, -1.5341699999999998`}, {
       0.7299999999999999, -1.79917}, {1.1889934640057525`, -1.53417}, {
       1.1889934640057527`, -1.0041700000000002`}}],
      RegularPolygon[{0.73, -1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, -0.5360601305579586}, {
       0.9964761305579588, -0.2668879134840192}, {
       0.7273039134840192, -0.7331078694420412}, {
       1.1935238694420411`, -1.0022800865159807`}}],
      RegularPolygon[{1.095, -0.6345839999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.46, 0.5300020000000001}, {1.0010065359942475`, 
       0.2650020000000003}, {1.0010065359942475`, -0.26499799999999973`}, {
       1.46, -0.529998}, {1.9189934640057524`, -0.2649980000000001}, {
       1.9189934640057527`, 0.26500199999999974`}}],
      RegularPolygon[{1.46, 2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{2.4591718069066215`, 0.26460714065936886`}, {
      2.9253910524340094`, 0.5337789475659904}, {3.194562859340631, 
      0.9999981930933781}, {3.194562859340631, 1.5383418069066215`}, {
      2.9253910524340094`, 2.004561052434009}, {2.459171806906622, 
      2.273732859340631}, {1.9208281930933784`, 2.273732859340631}, {
      1.4546089475659905`, 2.0045610524340094`}, {1.1854371406593691`, 
      1.5383418069066224`}, {1.1854371406593687`, 0.9999981930933788}, {
      1.4546089475659898`, 0.5337789475659912}, {1.9208281930933766`, 
      0.2646071406593693}}],
     RegularPolygon[{2.19, 1.26917}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, 2.269170136479451}, {2.459171863520549, 
       2.807513863520549}, {1.920828136479451, 2.807513863520549}, {
       1.920828136479451, 2.269170136479451}}],
      RegularPolygon[{2.19, 2.538342}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, 3.0683420000000003`}, {2.4610065359942475`, 
       2.8033420000000002`}, {2.4610065359942475`, 2.2733420000000004`}, {
       2.92, 2.008342}, {3.3789934640057524`, 2.273342}, {3.3789934640057524`,
        2.803342}}],
      RegularPolygon[{2.92, 2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, 1.8052321305579588`}, {
       3.3835238694420413`, 2.2714520865159806`}, {2.9173039134840195`, 
       2.002279869442041}, {3.186476130557959, 1.5360599134840194`}}],
      RegularPolygon[{3.285, 1.903756}, {0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, 1.79917}, {3.1910065359942474`, 1.53417}, {
       3.1910065359942474`, 1.00417}, {3.65, 0.7391699999999999}, {
       4.108993464005752, 1.0041699999999998`}, {4.108993464005753, 
       1.5341699999999996`}}],
      RegularPolygon[{3.65, 1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, 0.7331078694420412}, {
       3.186476130557959, 1.0022800865159807`}, {2.9173039134840195`, 
       0.5360601305579586}, {3.3835238694420413`, 0.26688791348401913`}}],
      RegularPolygon[{3.285, 0.6345839999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, 0.529998}, {2.4610065359942475`, 
       0.26499800000000007`}, {2.4610065359942475`, -0.26500199999999996`}, {
       2.92, -0.5300020000000001}, {
       3.3789934640057524`, -0.26500200000000035`}, {3.3789934640057524`, 
       0.2649979999999995}}],
      RegularPolygon[{2.92, -2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, -0.26917386352054906`}, {
       2.459171863520549, 0.26916986352054884`}, {1.920828136479451, 
       0.26916986352054884`}, {1.920828136479451, -0.269173863520549}}],
      RegularPolygon[{2.19, -2.0000000001130225`*^-6}, 0.3806665, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.46, 0.529998}, {1.0010065359942475`, 
       0.26499800000000007`}, {1.0010065359942475`, -0.26500199999999996`}, {
       1.46, -0.5300020000000001}, {
       1.9189934640057524`, -0.26500200000000035`}, {1.9189934640057527`, 
       0.2649979999999995}}],
      RegularPolygon[{1.46, -2.0000000001130225`*^-6}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 0.5360601305579586}, {
       1.1935238694420411`, 1.0022800865159807`}, {0.7273039134840193, 
       0.7331078694420413}, {0.9964761305579588, 0.2668879134840192}}],
      RegularPolygon[{1.095, 0.6345839999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[1], 
     InterpretationBox[
      PolygonBox[{{0.73, 1.79917}, {0.27100653599424757`, 1.53417}, {
       0.2710065359942474, 1.00417}, {0.7299999999999999, 
       0.7391699999999999}, {1.1889934640057525`, 1.0041699999999998`}, {
       1.1889934640057527`, 1.5341699999999996`}}],
      RegularPolygon[{0.73, 1.26917}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 2.002279869442041}, {
       0.9964761305579588, 2.2714520865159806`}, {0.7273039134840192, 
       1.8052321305579588`}, {1.1935238694420411`, 1.5360599134840192`}}],
      RegularPolygon[{1.095, 1.903756}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.46, 3.0683420000000003`}, {1.0010065359942475`, 
       2.8033420000000002`}, {1.0010065359942475`, 2.2733420000000004`}, {
       1.46, 2.008342}, {1.9189934640057524`, 2.273342}, {1.9189934640057527`,
        2.803342}}],
      RegularPolygon[{1.46, 2.538342}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{2.4591718069066215`, 2.8029471406593687`}, {
      2.9253910524340094`, 3.0721189475659902`}, {3.194562859340631, 
      3.538338193093378}, {3.194562859340631, 4.076681806906621}, {
      2.9253910524340094`, 4.542901052434009}, {2.459171806906622, 
      4.812072859340631}, {1.9208281930933784`, 4.812072859340631}, {
      1.4546089475659905`, 4.54290105243401}, {1.1854371406593691`, 
      4.076681806906622}, {1.1854371406593687`, 3.5383381930933786`}, {
      1.4546089475659898`, 3.072118947565991}, {1.9208281930933766`, 
      2.802947140659369}}],
     RegularPolygon[{2.19, 3.8075099999999997`}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, 4.807510136479451}, {2.459171863520549, 
       5.345853863520549}, {1.920828136479451, 5.345853863520549}, {
       1.920828136479451, 4.807510136479451}}],
      RegularPolygon[{2.19, 5.076682}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, 5.606682}, {2.4610065359942475`, 
       5.3416820000000005`}, {2.4610065359942475`, 4.811682}, {2.92, 
       4.546682}, {3.3789934640057524`, 4.811681999999999}, {
       3.3789934640057524`, 5.341682}}],
      RegularPolygon[{2.92, 5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, 4.343572130557958}, {
       3.3835238694420413`, 4.80979208651598}, {2.9173039134840195`, 
       4.5406198694420405`}, {3.186476130557959, 4.074399913484019}}],
      RegularPolygon[{3.285, 4.442095999999999}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, 4.33751}, {3.1910065359942474`, 4.07251}, {
       3.1910065359942474`, 3.54251}, {3.65, 3.2775099999999995`}, {
       4.108993464005752, 3.5425099999999996`}, {4.108993464005753, 
       4.072509999999999}}],
      RegularPolygon[{3.65, 3.8075099999999997`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, 3.271447869442041}, {
       3.186476130557959, 3.5406200865159803`}, {2.9173039134840195`, 
       3.0744001305579585`}, {3.3835238694420413`, 2.805227913484019}}],
      RegularPolygon[{3.285, 3.1729239999999996`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, 3.068338}, {2.4610065359942475`, 
       2.8033379999999997`}, {2.4610065359942475`, 2.273338}, {2.92, 
       2.0083379999999993`}, {3.3789934640057524`, 2.2733379999999994`}, {
       3.3789934640057524`, 2.803337999999999}}],
      RegularPolygon[{2.92, 2.5383379999999995`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.459171863520549, 2.2691661364794506`}, {
       2.459171863520549, 2.8075098635205484`}, {1.920828136479451, 
       2.8075098635205484`}, {1.920828136479451, 2.2691661364794506`}}],
      RegularPolygon[{2.19, 2.5383379999999995`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.46, 3.068338}, {1.0010065359942475`, 2.8033379999999997`}
       , {1.0010065359942475`, 2.273338}, {1.46, 2.0083379999999993`}, {
       1.9189934640057524`, 2.2733379999999994`}, {1.9189934640057527`, 
       2.803337999999999}}],
      RegularPolygon[{1.46, 2.5383379999999995`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 3.0744001305579585`}, {
       1.1935238694420411`, 3.5406200865159803`}, {0.7273039134840193, 
       3.271447869442041}, {0.9964761305579588, 2.805227913484019}}],
      RegularPolygon[{1.095, 3.1729239999999996`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{0.73, 4.33751}, {0.27100653599424757`, 4.07251}, {
       0.2710065359942474, 3.54251}, {0.7299999999999999, 
       3.2775099999999995`}, {1.1889934640057525`, 3.5425099999999996`}, {
       1.1889934640057527`, 4.072509999999999}}],
      RegularPolygon[{0.73, 3.8075099999999997`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.4626960865159808`, 4.5406198694420405`}, {
       0.9964761305579588, 4.80979208651598}, {0.7273039134840192, 
       4.343572130557958}, {1.1935238694420411`, 4.074399913484019}}],
      RegularPolygon[{1.095, 4.442095999999999}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{1.46, 5.606682}, {1.0010065359942475`, 
       5.3416820000000005`}, {1.0010065359942475`, 4.811682}, {1.46, 
       4.546682}, {1.9189934640057524`, 4.811681999999999}, {
       1.9189934640057527`, 5.341682}}],
      RegularPolygon[{1.46, 5.076682}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{4.6491718069066215`, -3.542902859340631}, {
      5.115391052434009, -3.2737310524340093`}, {
      5.384562859340631, -2.8075118069066214`}, {
      5.384562859340631, -2.2691681930933782`}, {
      5.11539105243401, -1.8029489475659906`}, {
      4.649171806906622, -1.5337771406593688`}, {
      4.110828193093378, -1.5337771406593688`}, {
      3.6446089475659904`, -1.8029489475659903`}, {
      3.3754371406593693`, -2.2691681930933774`}, {
      3.3754371406593684`, -2.807511806906621}, {
      3.64460894756599, -3.2737310524340084`}, {
      4.1108281930933765`, -3.5429028593406304`}}],
     RegularPolygon[{4.38, -2.53834}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{4.649171863520549, -1.5383398635205487`}, {
       4.649171863520549, -0.999996136479451}, {
       4.1108281364794514`, -0.999996136479451}, {
       4.110828136479451, -1.5383398635205487`}}],
      RegularPolygon[{4.38, -1.2691679999999999`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.109999999999999, -0.7391679999999998}, {
       4.651006535994247, -1.0041679999999997`}, {
       4.651006535994247, -1.5341679999999998`}, {
       5.109999999999999, -1.7991679999999999`}, {
       5.568993464005752, -1.5341680000000002`}, {
       5.568993464005752, -1.0041680000000002`}}],
      RegularPolygon[{5.109999999999999, -1.2691679999999999`}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84269608651598, -2.002277869442041}, {
       5.573523869442041, -1.536057913484019}, {
       5.107303913484019, -1.8052301305579583`}, {
       5.3764761305579585`, -2.2714500865159803`}}],
      RegularPolygon[{5.475, -1.9037539999999997`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84, -2.0083399999999996`}, {
       5.381006535994247, -2.2733399999999997`}, {
       5.381006535994247, -2.8033399999999995`}, {5.84, -3.06834}, {
       6.298993464005752, -2.80334}, {6.298993464005752, -2.27334}}],
      RegularPolygon[{5.84, -2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84269608651598, -3.0744021305579587`}, {
       5.3764761305579585`, -2.8052299134840193`}, {
       5.107303913484019, -3.271449869442041}, {
       5.573523869442041, -3.5406220865159805`}}],
      RegularPolygon[{5.475, -3.172926}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.109999999999999, -3.2775119999999998`}, {
       4.651006535994247, -3.542512}, {4.651006535994247, -4.072512}, {
       5.109999999999999, -4.337512}, {
       5.568993464005752, -4.072512000000001}, {
       5.568993464005752, -3.5425120000000003`}}],
      RegularPolygon[{5.109999999999999, -3.807512}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{4.649171863520549, -4.076683863520549}, {
       4.649171863520549, -3.538340136479451}, {
       4.1108281364794514`, -3.538340136479451}, {
       4.110828136479451, -4.0766838635205485`}}],
      RegularPolygon[{4.38, -3.807512}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, -3.2775119999999998`}, {
       3.1910065359942474`, -3.542512}, {3.1910065359942474`, -4.072512}, {
       3.65, -4.337512}, {4.108993464005752, -4.072512000000001}, {
       4.108993464005753, -3.5425120000000003`}}],
      RegularPolygon[{3.65, -3.807512}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, -3.271449869442041}, {
       3.3835238694420413`, -2.8052299134840193`}, {
       2.9173039134840195`, -3.0744021305579587`}, {
       3.186476130557959, -3.5406220865159805`}}],
      RegularPolygon[{3.285, -3.172926}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, -2.0083399999999996`}, {
       2.4610065359942475`, -2.2733399999999997`}, {
       2.4610065359942475`, -2.8033399999999995`}, {2.92, -3.06834}, {
       3.3789934640057524`, -2.80334}, {3.3789934640057524`, -2.27334}}],
      RegularPolygon[{2.92, -2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, -1.8052301305579586`}, {
       3.186476130557959, -1.536057913484019}, {
       2.9173039134840195`, -2.002277869442041}, {
       3.3835238694420413`, -2.2714500865159803`}}],
      RegularPolygon[{3.285, -1.9037539999999997`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, -0.7391679999999998}, {
       3.1910065359942474`, -1.0041679999999997`}, {
       3.1910065359942474`, -1.5341679999999998`}, {
       3.65, -1.7991679999999999`}, {
       4.108993464005752, -1.5341680000000002`}, {
       4.108993464005753, -1.0041680000000002`}}],
      RegularPolygon[{3.65, -1.2691679999999999`}, {0.53, Rational[1, 2] Pi}, 
       6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{4.6491718069066215`, -1.004562859340631}, {
      5.115391052434009, -0.7353910524340095}, {
      5.384562859340631, -0.26917180690662174`}, {5.384562859340631, 
      0.2691718069066215}, {5.11539105243401, 0.7353910524340093}, {
      4.649171806906622, 1.004562859340631}, {4.110828193093378, 
      1.004562859340631}, {3.6446089475659904`, 0.7353910524340095}, {
      3.3754371406593693`, 0.26917180690662235`}, {
      3.3754371406593684`, -0.2691718069066212}, {
      3.64460894756599, -0.7353910524340087}, {
      4.1108281930933765`, -1.0045628593406306`}}],
     RegularPolygon[{4.38, 0.}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{4.649171863520549, 1.000000136479451}, {4.649171863520549, 
       1.5383438635205489`}, {4.1108281364794514`, 1.5383438635205489`}, {
       4.110828136479451, 1.000000136479451}}],
      RegularPolygon[{4.38, 1.269172}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.109999999999999, 1.799172}, {4.651006535994247, 
       1.534172}, {4.651006535994247, 1.004172}, {5.109999999999999, 
       0.7391719999999999}, {5.568993464005752, 1.0041719999999996`}, {
       5.568993464005752, 1.5341719999999996`}}],
      RegularPolygon[{5.109999999999999, 1.269172}, {0.53, Rational[1, 2] Pi},
        6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84269608651598, 0.5360621305579587}, {5.573523869442041, 
       1.0022820865159807`}, {5.107303913484019, 0.7331098694420414}, {
       5.3764761305579585`, 0.26688991348401925`}}],
      RegularPolygon[{5.475, 0.634586}, {0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84, 0.53}, {5.381006535994247, 0.2650000000000002}, {
       5.381006535994247, -0.26499999999999985`}, {5.84, -0.53}, {
       6.298993464005752, -0.26500000000000024`}, {6.298993464005752, 
       0.2649999999999996}}],
      RegularPolygon[{5.84, 0.}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84269608651598, -0.5360621305579587}, {
       5.3764761305579585`, -0.26688991348401925`}, {
       5.107303913484019, -0.7331098694420413}, {
       5.573523869442041, -1.0022820865159807`}}],
      RegularPolygon[{5.475, -0.634586}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.109999999999999, -0.7391719999999999}, {
       4.651006535994247, -1.0041719999999998`}, {
       4.651006535994247, -1.5341719999999999`}, {
       5.109999999999999, -1.799172}, {
       5.568993464005752, -1.5341720000000003`}, {
       5.568993464005752, -1.0041720000000003`}}],
      RegularPolygon[{5.109999999999999, -1.269172}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{4.649171863520549, -1.5383438635205489`}, {
       4.649171863520549, -1.000000136479451}, {
       4.1108281364794514`, -1.000000136479451}, {
       4.110828136479451, -1.5383438635205489`}}],
      RegularPolygon[{4.38, -1.269172}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, -0.7391719999999999}, {
       3.1910065359942474`, -1.0041719999999998`}, {
       3.1910065359942474`, -1.5341719999999999`}, {3.65, -1.799172}, {
       4.108993464005752, -1.5341720000000003`}, {
       4.108993464005753, -1.0041720000000003`}}],
      RegularPolygon[{3.65, -1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, -0.7331098694420413}, {
       3.3835238694420413`, -0.26688991348401925`}, {
       2.9173039134840195`, -0.5360621305579586}, {
       3.186476130557959, -1.0022820865159807`}}],
      RegularPolygon[{3.285, -0.634586}, {0.380667, Rational[-1, 12] Pi}, 
       4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, 0.53}, {2.4610065359942475`, 0.2650000000000002}, {
       2.4610065359942475`, -0.26499999999999985`}, {2.92, -0.53}, {
       3.3789934640057524`, -0.26500000000000024`}, {3.3789934640057524`, 
       0.2649999999999996}}],
      RegularPolygon[{2.92, 0.}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, 0.7331098694420413}, {
       3.186476130557959, 1.0022820865159807`}, {2.9173039134840195`, 
       0.5360621305579587}, {3.3835238694420413`, 0.2668899134840192}}],
      RegularPolygon[{3.285, 0.634586}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, 1.799172}, {3.1910065359942474`, 1.534172}, {
       3.1910065359942474`, 1.004172}, {3.65, 0.7391719999999999}, {
       4.108993464005752, 1.0041719999999996`}, {4.108993464005753, 
       1.5341719999999996`}}],
      RegularPolygon[{3.65, 1.269172}, {0.53, Rational[1, 2] Pi}, 6]]}}, 
   {GrayLevel[0.85], EdgeForm[Thickness[Large]], 
    InterpretationBox[
     PolygonBox[{{4.6491718069066215`, 1.5337771406593688`}, {
      5.115391052434009, 1.8029489475659903`}, {5.384562859340631, 
      2.2691681930933782`}, {5.384562859340631, 2.8075118069066214`}, {
      5.11539105243401, 3.273731052434009}, {4.649171806906622, 
      3.542902859340631}, {4.110828193093378, 3.542902859340631}, {
      3.6446089475659904`, 3.2737310524340093`}, {3.3754371406593693`, 
      2.8075118069066223`}, {3.3754371406593684`, 2.2691681930933787`}, {
      3.64460894756599, 1.8029489475659912`}, {4.1108281930933765`, 
      1.5337771406593692`}}],
     RegularPolygon[{4.38, 2.53834}, 1.04, 12]], 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{4.649171863520549, 3.538340136479451}, {4.649171863520549, 
       4.076683863520549}, {4.1108281364794514`, 4.076683863520549}, {
       4.110828136479451, 3.538340136479451}}],
      RegularPolygon[{4.38, 3.807512}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.109999999999999, 4.337512}, {4.651006535994247, 
       4.072512000000001}, {4.651006535994247, 3.5425120000000003`}, {
       5.109999999999999, 3.2775119999999998`}, {5.568993464005752, 
       3.542512}, {5.568993464005752, 4.072512}}],
      RegularPolygon[{5.109999999999999, 3.807512}, {0.53, Rational[1, 2] Pi},
        6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84269608651598, 3.0744021305579587`}, {5.573523869442041,
        3.5406220865159805`}, {5.107303913484019, 3.271449869442041}, {
       5.3764761305579585`, 2.8052299134840193`}}],
      RegularPolygon[{5.475, 3.172926}, {0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84, 3.06834}, {5.381006535994247, 2.80334}, {
       5.381006535994247, 2.27334}, {5.84, 2.0083399999999996`}, {
       6.298993464005752, 2.2733399999999997`}, {6.298993464005752, 
       2.8033399999999995`}}],
      RegularPolygon[{5.84, 2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.84269608651598, 2.002277869442041}, {5.3764761305579585`,
        2.2714500865159803`}, {5.107303913484019, 1.8052301305579586`}, {
       5.573523869442041, 1.5360579134840189`}}],
      RegularPolygon[{5.475, 1.9037539999999997`}, {
       0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{5.109999999999999, 1.7991679999999999`}, {
       4.651006535994247, 1.534168}, {4.651006535994247, 1.004168}, {
       5.109999999999999, 0.7391679999999998}, {5.568993464005752, 
       1.0041679999999995`}, {5.568993464005752, 1.5341679999999995`}}],
      RegularPolygon[{5.109999999999999, 1.2691679999999999`}, {
       0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{4.649171863520549, 0.999996136479451}, {4.649171863520549, 
       1.5383398635205487`}, {4.1108281364794514`, 1.5383398635205487`}, {
       4.110828136479451, 0.999996136479451}}],
      RegularPolygon[{4.38, 1.2691679999999999`}, 0.3806665, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, 1.7991679999999999`}, {3.1910065359942474`, 
       1.534168}, {3.1910065359942474`, 1.004168}, {3.65, 
       0.7391679999999998}, {4.108993464005752, 1.0041679999999995`}, {
       4.108993464005753, 1.5341679999999995`}}],
      RegularPolygon[{3.65, 1.2691679999999999`}, {0.53, Rational[1, 2] Pi}, 
       6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, 1.8052301305579586`}, {
       3.3835238694420413`, 2.2714500865159803`}, {2.9173039134840195`, 
       2.002277869442041}, {3.186476130557959, 1.536057913484019}}],
      RegularPolygon[{3.285, 1.9037539999999997`}, {
       0.380667, Rational[-1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{2.92, 3.06834}, {2.4610065359942475`, 2.80334}, {
       2.4610065359942475`, 2.27334}, {2.92, 2.0083399999999996`}, {
       3.3789934640057524`, 2.2733399999999997`}, {3.3789934640057524`, 
       2.8033399999999995`}}],
      RegularPolygon[{2.92, 2.53834}, {0.53, Rational[1, 2] Pi}, 6]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.6526960865159808`, 3.271449869442041}, {
       3.186476130557959, 3.5406220865159805`}, {2.9173039134840195`, 
       3.0744021305579587`}, {3.3835238694420413`, 2.8052299134840193`}}],
      RegularPolygon[{3.285, 3.172926}, {0.380667, Rational[1, 12] Pi}, 4]]}, 
    {GrayLevel[0.85], 
     InterpretationBox[
      PolygonBox[{{3.65, 4.337512}, {3.1910065359942474`, 
       4.072512000000001}, {3.1910065359942474`, 3.5425120000000003`}, {3.65, 
       3.2775119999999998`}, {4.108993464005752, 3.542512}, {
       4.108993464005753, 4.072512}}],
      RegularPolygon[{3.65, 3.807512}, {0.53, Rational[1, 2] Pi}, 
       6]]}}, {{}, {}, {}, {}, {
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-1.46, 2.0000000000575113*^-6}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-1.095, -0.6345839999999999}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-0.73, -1.26917}]}}, {
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-2.19, 1.26917}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-1.46, 2.538342}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-1.46, -2.0000000000575113*^-6}]}}, 
    {RGBColor[0, 0, 1], InsetBox[
      StyleBox["1",
       StripOnInput->False,
       FontSize->19.57110866788469], {-1.46, 2.5383379999999995}]}, {}, {
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {0., -2.53834}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {1.46, -2.53834}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-0.73, -1.2691679999999999}]}}, {
     {RGBColor[0, 1, 0], InsetBox[
       StyleBox["2",
        StripOnInput->False,
        FontSize->19.57110866788469], {0.73, 1.269172}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {1.095, 0.634586}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {1.46, 0.}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-0.73, -1.269172}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-1.095, -0.634586}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-1.46, 0.}]}}, {
     {RGBColor[0, 1, 0], InsetBox[
       StyleBox["2",
        StripOnInput->False,
        FontSize->19.57110866788469], {0., 2.53834}]}, 
     {RGBColor[0, 1, 0], InsetBox[
       StyleBox["2",
        StripOnInput->False,
        FontSize->19.57110866788469], {0.73, 1.2691679999999999}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {-1.46, 2.53834}]}}, {}, 
    {RGBColor[0, 0, 1], InsetBox[
      StyleBox["1",
       StripOnInput->False,
       FontSize->19.57110866788469], {1.46, -2.5383379999999995}]}, {
     {RGBColor[0, 1, 0], InsetBox[
       StyleBox["2",
        StripOnInput->False,
        FontSize->19.57110866788469], {2.19, -1.26917}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {1.46, -2.538342}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {1.46, 2.0000000000575113*^-6}]}}, {
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {1.46, -2.0000000000575113*^-6}]}, 
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->19.57110866788469], {1.095, 0.6345839999999999}]}, 
     {RGBColor[0, 1, 0], InsetBox[
       StyleBox["2",
        StripOnInput->False,
        FontSize->
         19.57110866788469], {0.73, 1.26917}]}}, {}, {}, {}, {}}}]], "Output",
 CellChangeTimes->{
  3.797962128386897*^9, 3.7979622542669353`*^9, {3.797962306749658*^9, 
   3.7979623162749195`*^9}, {3.797962388484915*^9, 3.797962400552186*^9}, {
   3.797962435483919*^9, 3.797962442622736*^9}, 3.7979627485649347`*^9, 
   3.7979631272650547`*^9, {3.797963384914799*^9, 3.797963392689412*^9}, 
   3.797964388744208*^9, 3.7979648967541504`*^9, {3.7979654736440105`*^9, 
   3.7979654816490088`*^9}, {3.797965576109443*^9, 3.7979655842958584`*^9}},
 CellLabel->
  "Out[483]=",ExpressionUUID->"e620629a-4f40-4e80-b9d7-5237a8fcbd47"]
}, Open  ]],

Cell["\<\
Beginner: size 3
Intermediate: size 4
Expert: size 5
Custom: size N\
\>", "Subsection",
 CellChangeTimes->{{3.7955438563921137`*^9, 
  3.79554388607883*^9}},ExpressionUUID->"e4ccd654-28c3-4f6d-ae39-\
709efb2ce62c"],

Cell[CellGroupData[{

Cell["\<\
Size 3  ---> FontSize 20
Size 4  ---> FontSize 15
Size 5  ---> FontSize 10
Size 7  ---> FontSize 9
Size 9  ---> FontSize 7
font size is always the same no matter the graphic size so the larger the \
board, the smaller the font size needs to be\
\>", "Subsection",
 CellChangeTimes->{{3.795545058340581*^9, 3.7955450751252584`*^9}, {
   3.795545185749918*^9, 3.7955451986058464`*^9}, {3.795545311883966*^9, 
   3.7955453264272556`*^9}, {3.795545357912154*^9, 3.7955453697103014`*^9}, 
   3.7955454344177446`*^9, {3.7955456013310595`*^9, 3.795545611414722*^9}, {
   3.795966362785307*^9, 
   3.7959663998303185`*^9}},ExpressionUUID->"3d47a5d6-01bd-4480-a583-\
73a3ed6e15ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fontSize", "[", "x_", "]"}], "=", 
    RowBox[{"Fit", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "7"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["x", 
         RowBox[{"-", "1"}]]}], "}"}], ",", "x"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "parameter", " ", "x", " ", "is", " ", "size", " ", "of", " ", "board"}], 
   "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7955453990054207`*^9, 3.7955455239535837`*^9}, {
   3.795545615061488*^9, 3.7955456191628103`*^9}, {3.7955459925889816`*^9, 
   3.795546015360279*^9}, 3.7963856535925417`*^9, {3.797713554418254*^9, 
   3.7977135821430655`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5af3e9e1-4804-45fc-9692-78232e22d66e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fontSize", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.795546021157439*^9, 3.795546034763647*^9}, {
  3.797713655815978*^9, 3.7977136705368977`*^9}},
 CellLabel->
  "In[459]:=",ExpressionUUID->"af9d1bfc-49b6-4a55-a71c-23d8e2722ca6"],

Cell[BoxData["7.371133728920439`"], "Output",
 CellChangeTimes->{{3.795546025733341*^9, 3.7955460352431355`*^9}, {
  3.7977136571868963`*^9, 3.7977136710379353`*^9}},
 CellLabel->
  "Out[459]=",ExpressionUUID->"1e22b5cf-9027-46d4-a6ba-3231769b1fb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Out", "[", "949", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7955455280128336`*^9, 3.7955455480245314`*^9}, {
  3.7955456249595065`*^9, 3.795545629594434*^9}},
 CellLabel->
  "In[951]:=",ExpressionUUID->"820356a3-b9ba-4597-a06b-4a16fbff87cc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/wH60bDJ
       "]]},
     Annotation[#, "Charting`Private`Tag$566242#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 3.955140820372202},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 15}, {3.955140820372202, 31.17839746963689}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.795545543962964*^9, 3.795545548629754*^9}, {
  3.795545625421049*^9, 3.795545630029464*^9}},
 CellLabel->
  "Out[951]=",ExpressionUUID->"72b9bff6-8d1a-4f1d-9b77-5eced93aa4ed"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Border Detection", "Chapter",
 CellChangeTimes->{{3.796385582162359*^9, 
  3.7963855853599358`*^9}},ExpressionUUID->"4d47abb5-b70f-4909-ab1e-\
cbb3b629d6b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"given", " ", "a", " ", "set", " ", "of", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "this", " ", "calculates", " ", "the", " ", "coordinates", " ", "of", " ",
      "the", " ", "adjacent", " ", 
     RowBox[{"tiles", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"surrounding", "[", "coord_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"OddQ", "[", 
      RowBox[{
       RowBox[{"coord", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*", 
       RowBox[{"coord", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"surroundingDodec", "@", "coord"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", 
        RowBox[{
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"surroundingSquare", "@", "coord"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"surroundingHex", "@", "coord"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.795259419339102*^9, 3.795259430392816*^9}, {
  3.795259495601775*^9, 3.79525968359161*^9}, {3.7963570815372643`*^9, 
  3.796357113016097*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"522ce20f-bbf6-4fde-b444-e25d180f1852"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
F/SoFlms/Gff6Q8iMIi8z+Rkjn1vcnMA/gqiJ9Qlyn2UC5RDO3WNTVCeo3wp
9TrVlDDroE4lByGpU4mGoVadmkfux6dOxRkVtidUsxSapkmX7QmFPNqGmGso
tW3Kq5RrBb2kXpMR8rDej18rPyrh1+hnBbq9ydmCOt6h8oDMl1fK7ie97Unl
ecqSetI91C/Wi9+zSHcqZyhbZKwO40D91gu+t28yOMInDrQ+MkOcz/gaDNbK
erHn4Pbss3detMYGYn/dpbvtWsaadjX66KfBGv1kgNiFGPZrG9MQ29ZGsW7b
AOdxQxRLsadOszHWxlrf50K9HPlns0zUL4/0nfYgAoTIY8o1plVGmEWe/RV7
Ks5yPky5TDmuVVxPqKOUv82MTjUlzCqoU8lBTOpUou6ot07tQi4oSZ16qxIa
AznalnHqh0ujnlBxebQ4e0FcPSLqEufIS+qJv9P7c4vyZAm3Rj/tQJ3uG5U3
SKuqslmySf2pYPeTp6qcxzuVJ0mPetL56iM3etozz8VeKc0FkaXKywKIJ2SY
hG8sLcBXzvM0CKwRrJXuPnvLdS2eFK2pamyX7i7YtY01jrXu1jxr9BsDxCrE
rFtsDEMsK9ba/2+V81h8LmOpjbU25iL23urJT08V9NZt1f9crrzWd9qDCBQi
FysX2efnLvXkq+it8nZxPaGmNKlWHmW1iZHrMqdTTQmzBupUkrSkTiXqgkbq
1AJyQo3Wqc8r0QMA5zS2DVM/XKBEHg31gzuqvIZSe0D5TtlVT4pacNSEi36H
qCcWK6+y9bqTNKKvkC55aw37Sal1Ka9VHi5e60mfU44RnDc+pUvkaP3WtgBi
CRkm4RtHq69M7horzneS+uM9+uyNjPrsHR6toa46rMei7sYax1p3Nfo4r3ye
5z0oa0CM6tm/5J1RTKvVSp/LWGBjr43BiMXPJ+ir6AuB/qlNMkO/PNl3uoMI
HCKHmWYZbyaKq5FLyk+fVZ4ju3pCtQ3XdTNd+QXJkk41/TBLoE4lyW5SpxI1
IymdmkeOqN46Fc8DfkCJs1E62qSQmxX1hLpIqs+j9Weo+UY9KWrAl8r2khr9
Lyon+53G1EPDnnxKeZeMlj9qpN9a1/2k1Ir1pGt2rydNQpe+Gb4q7QV33viN
AcQRMmz+l3Fn57YXjk3gD2INoNZ+pJT02Vsj5fvsVWOluhtrHmsfe4DbC8Z4
3ZHSD8QkxKZ7bKxCzCrXv6RaQ6yNnsvQGIxYbGMyYnMSz+wfIOitO9S43rr3
+U51EIFD5DsGz891Sot5dwL+iT4VeAZrf3GfyQ7v0LUyXnmW8rk6r0X/OtX0
wyyAOpUk+yR1KlEVfOnUPHJG9dCp6JM2U9nZVHJOY73yaHHWdz3p7eJqxof4
nNQUok1cHe4vus9pbNR+0tueUJ4tu9WTNvK5fXUS+9xATmblRc4MIH6Q6eCZ
1mfgO7c38A/B93frs3d2tFYaaSW6u+S88l9Ee0Ob1x0qfSj2L7m96v4l1dqu
5zIQk21snimN7WmKnjv4TFRkvvL/+E5zECmByEmmSabb9zIbGuSb+kbeXK9c
p1yuHNeifjpG3Huauxq8Fv3pVNMP0wzqVJIsS+pUYsAIRafmq9WpqLVHnb3t
CTVW8rJECvJGfd2bpP55tDhDTTjqSVcpZ8ufWU9aMV6n/A97TuNMecHW5Sax
n/Q21JO+SRKpJ4UebZURGt/31i8fDiB2kOkgfGVv0ybD8ysa8Ad+Ln302XuT
VN9nr1rD2ne6u2D3BHde+X8oD/K7VaUCPfuXICatimLU0wnOIWIwYvEbBOfR
IEZbv4Lf3ltnv8VnWTPhszJGvzxA+bzvFAeREojcafDMR7t02v7h9d5Tf6c8
TblSORWfl44U1FwZ+Z5kXaeaEmYB1Kne9Q+ZDlKn+t2qUoEQdWoBuaSB6tRN
yhPE9YUY8DmNSRg+33qbuHrSKfJMVE/6TeUSv1MeLGYLzmnEfSqe0+hjPyk1
9GpAb7GDZLd60nrVPn9diueNLyyIfDqAuEGmi59SLszDh75epxfdqDxCevXZ
O0jq12evWivqbuwN2CN2nVc+2+fGFTAQa75p91TEIMQixKRGP3sRZyXPZWis
Rsy2sRsxfFOd/PcTgt66TfqfS5T/4ju9QaQMIueYnMyzz9VdVyef/LPyQuVq
5dycmI6hugamKD+p3OJxPSanU00J0wzqVOpUsmJSpwp1an8IXafmkVvqT6f2
PqcxN1P9EHk01P097/EaSq1YT/o6Ka0nvVtcPelYr7MfDkYpP668057TuEiV
WQj7SaltEtdrbO/61pNuVU4RfH6/h7rzwfqtFwOIGWS6CJ85GD7UBV/aWsOL
xfbZ2+R9FTor1d3YK3adV/7xaC8hXGxBjLm7u38JYhBq7fPeZ9AZYjRitcbs
3Ewbw009zitHz0n0SW2WyfrlG32nNYgUQuRp5X6mVUaZuTX643blZcoDxX12
P6JdfX6c8jSp/ly1elsyOtWUMI2gTqVOJasmdapQp/ZG2nRqHrmmPUp88Rrl
LInOaZyokRTnNCKPdrf3kfdtpfWke+lXQ+QPev9/KYO7nrR4TuPPu89pDG0/
6W2oJz1detSTTlU/vLzKPfX9gs/vWwoiy5TfCiBekOnkNw18CGfnvr/KF4EP
w5d79NmDrz/ofdX1bSW6u+S88p+L//PKfaLYv+SXNsYg1uyr9+dSaXz/kmoN
MRuxe7mN5TamI7ZfU6Uf43OrDmkz6Jcq8hPfaQ0ipRD5knKxfRbkoip98SYl
+vXi+f4JzaplR6uf76+81fuq69saq1NNCdME6lShTiXrQepU6lSLNOvUAnJO
j0gf5zQeIWHl0eJso/KD0rue9Ifias8HE/ZTXtPjnMaQ95NSK9aTohdZhfWk
pYQvoz9qk0zNixyv39oRQKwg00n4znHwpS6cqfN4Bb98j/TRZ+9oSb7PXrWG
PcPp7tLzyq+J9pjBBMSQH/boX4JYs9H7DJU3xG7EcHwmtsjGdlM8r/yRCnz5
Din21t1Tv3yX73QGkXKIHGWaZaJ9Xu/FCvzwj8qzxPWEmp7TfXWE+vVc5b/J
YNappoRpAXWqUKeS9SJ1KnVqNnTqCPXD9g4p5Obqd0PPo8UZ6knfLMix7ZRJ
8lRUo4960jme/aTRmCK9z2lM035SalulZz3pkF01+gPpe4I653bpjM7G/UUA
cYJMN28zruduR+HIAfwCfBS+Cp+F7/bos7fV++qqzIq6G3vJ7ueVT/G64zUe
iBlfszEEsQQx5QS9D3d6n5XKDbEcMV1ju8Z4xHob83FG80DOK1+lbJNhxvXW
fch3KoNIOVQyK5ebDmm1PljO/15S4hmqNcr5yiFD1JcnKT+mfNn76qrc6qtT
TQlDB3VqROpUsr6kTqVOTb9O7T6nMS15tDjbKX3Vk94prp50tF+3qTtwTuNH
lXfIMHnQntOIZ9XTuJ/0tmI96WpXT9rRKoVxum+eK/3X6OM8Z3zun5M5eZGz
A4gPZDZ4tvUp+NaN/fwQfBK+CR+Fr8Jn4bvWh1/wvppqsxLdbfcY7DXYc9ze
08jzyn0AMaJn/5KDxcWUnd5nojbbKMXnMhDzcUazmaT++rkY58ez+/jMVGSB
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
dd26TTVfz2D0P8Qi6lSS7I+DV6eyH3S19K5TbZ+9ok7dWeMFPac8Qdyz+g2t
J71GOUuiWvviOY0nK+8JYE6zwIeU7zKunnRGXjpbCrbXwtfrOIddUnqeeKFt
+K5a+40JXejnpdhzF+fW/FMA950Mm59TLrRn434hoT+6QXmERDX6ukawVuya
uTpaQ/UyrG2scax1rHn7bAv2gId8v/XIBFxsQowqnleusWtWFMvqZT37lyAG
21iMmIzYnAQ+LPgcv1mvc6nyG4n8TZ8YjLmAekLkPJOTvez+dk1C93DTunXm
Qv1bq5Vzc2La8TnwdOUnldvquB5jdGq9UOp/g80HqVNJsi8OTp3q/75ngYnr
VNtnr4dOrSPvEPcsdI960jdL7fWkeJZrXyk5p3Gp7s1H6J+8XpkPYB6zxGI9
6dFmt3rSe2qcx9uVb1Euk0LLOMnjPPG99I/+xMOFLhacnTsyyqv/MYD7ToZJ
+Mbe1leWeBgA1gbO5MVawZrB2rFr6PYa1+Jd0kf/Eqx59oRqBFysQsxauuu8
8n2l9pp21Nq/QdC/BDHXxl7EYMTipIGa/RYZp9d4gPJPif/9JDFY8wD1gNO9
q0y7DDH7e7h/v9G/ebJyhXIq6kxGWU1Su+6O0an1Ru9c1GD0Q+pUkixy8OlU
//c8a0QupeE6tbvPXrdObSBRQ41a6u56UvjSe5SPVDj+Huc0DovOaUR946XK
VwKYuywT9aRXKdca+7lM64hd9aQvVDiPT8tu5zROEFd37OsCb5Xi2bl4dv69
AdxvMky+1/oIfOVWjwPBWsGawdrBGrI1+udEa6sSe0F29S/BmrafuWKNX+X7
rcWggItd+5qazyt/JIqpK2yMNT36l3jCVeJyYXptBs99E0RfwOevOZlpRqiv
PODRX3HWOT7TRz/ePVrUb8coj5LKdXeMTm0kBnsuqgjqVJIcPDqV/aAbTeRW
GqJTG95nry8W60lHSUk96d7iekkNpJ50vbia/o62guRmRec0nqN8MoC5GkxE
Dy7Uk66uvJ4UZyhfotxHY+lcybd3uFr7M5Qv+78wc5Tg7NyO6Oxc5tnJ3rzV
uLNxOwrr/A/GrhmsHawhrCWsKawtu8bKnVfe4P4lxMDhYhhiWcl55XtEMa+c
vRTF0L1t/xLEVhtjEWtDwN46jjYZapxv3ed7OERgELlWudx0SKs7rzkA4P0T
ekktUA7r0LU1Xnm6DKznaYxOTQLMRTkghlGnkoOTg0Onsh900qybTrV99oo6
tZF99uL4lLga693qSa9S7ujjGn4mqM820tlUck4jzjW9M4C5Gcz8vfIdxtXo
T3P1pHvqPH2/jznMK68V9xljdE4j5h/nND7g/0K6iZ67owU9d/V67Fmg230P
iQyG8IU3qW9MzcNHnvE/oG5iDWEtYU1hbWGN2bV2bbT2etv3lFirtn8JfB2a
9h0Ga5rwBxfTENui88oR8xZGMbC37Yhiputfglhqiv1LEGNDwT06luGCz/H3
1Os6xfdwiMAg8jrTLBPtZ+ch4UkdzznKVcrZObe+7J752cp1apJgLqonqFPJ
wcXBoVMDuJxBzKp1ar60z95T/i/E8qfK+dKrnvR4He+vomt4VLlWSmrtlxRE
DjY8pzEk9q4nHbernvS+aB7xv3iWb7kUmse7Wvs5+ss/8j/4Pok8bafo3mfr
kL/pezhkMLzKwCfgG2f7H0yf/KESZ1BhjWGtYc3ZtVe6Frv7l4xraP8Sonq4
GHewsTGvWKO/NoqJJoqRiJXLbOy0841YipgaIk7ScXVIm3Hvz+lrhIPIF5SL
bT/miwP13Tt1XCeK6yU1pUnf/+PMJpwNfUN5neoDzEX1DepUcnAw2zqV/aBD
IXIwA9ap3X32unVqYMR5fRcoxyk7m6N60lXi6kLHSsk5jXwmL2zifNnPGNdP
cUHe9khA/883Ot3WNMOd04g8/YeU2/0PuF/iecEpgp67e+RdPTLPBiXhA2ut
T6C22dczpQMh1hbWGNYa1hzWnn3vhD6BWJO2f4muUVmjP/5Z328RiH7Qs8Yk
Oq98bBQbV9n+JYiZNnYihoYMnFeGM3qbZLKBpiQIkY3KfUyrjLI9bkPHN3SM
ByrRB3hcq7iakf3E9ZTqpVN91jgzFxUP6lQyu8yuTnXvMb0Pm9yNpT17+tSp
XcjtFHXqTv8DjuUmcef44Vn+ljYpSHuzkaapUT30acrf+R4iOSDi7Ab0U8Tz
0NN1HltMc7sU8Ewe6pZDeSavHC+T4tm5C3Uv/AffwyG9Ez6wMA+fuNz/YAZE
rDWsOaw9rEGsRWmaEe2pZxmsVSJ8uNiHGIg9dapBbNQYaWMlntd45YorfA9x
QPiE4HP8Jr2OJcqv+h4O4RkiHzQ5mWv3J/QMTwOQU71Qx7paOVfZnlONkEMv
tOWmqFN9g7mo8qBOJbPJbOrUAIZJlmUPnVqIdGqhqFM3+R9gRfwPQZ9TxNE9
S57JK/geFlkxbzHunM15plX8njtSLXG+ZJsMj87O/YPv4ZDeiLnf2/rCcv+D
qZhfFrFrEGtR5Bjlz32/FSCqgMh/GhcTZ9oYiVjpdzyVv+edJfgcf4xx57Ek
08uZCA8ivzJRb11zmGc/rgbf1zGvFOQBOvQ6lhrWnaYT1Klkdpg9nRrAsMiK
iFxNt04tdOvUFPIAwb46LHrW+be+h0PWxMcMnq9slZH5hf4HUzHvkmLP3dnq
j+80zIkORmLO36k+MCs/PPKJAAZVEbH2WmVU9KzzY77lP1EDRO4xOMNEY6St
Fxr470ksqxtL5b9/rRTPI99Lf+/cqv4ukX6IHGuaZLo97/HRKv3PJ/A57572
eZTxyl/7Hg5RA6hTyfQzezo1gCGRVbNbp+YP9D+Yinm1OJ3qakT/j+/hkHUh
6nwXF/DM6Bf9D6ZiHifoudtecD13f+p7OGTivMFg7uEDx/sfTMX8ghSf4V+s
Pvw537KfqAOQw9EYaWMlYmb5n4/PQyWZiwJwjk67DDHurPs7qvrbRHoh8u/K
ZaZTWsx7qvQ9n/iBuD7mLTJcr+NU38Mh6gDqVDLdzJZODWBIZM20OjXfrVNT
QvSzmimI7ziH5AD91vO+h0TWhZuVh5lmmZCfqN941f+AKiJqXNFzrUmmdIms
02/91feQyMSIuV5n536cpK/eGWsNa65ZJnZhDRLZgMizyv0QK23MLP/z5XNR
1eSjqv1dnOs8UvA5/kyDc4GJwYMbbtiic36Q7knjzeQqfC4EHGr3VfQ9m27X
IpENUKeS6WS2dKp7z+h9WGTN7NapeejU0HuWF+n6muJ8Upzd+C++h0PWld81
6O3ZIa2FM/wPpmJ+TIo9d+GbX/c9HDIxfs3OOeb+fP+DqZjvErFrzvXV/Z5v
qU/UEej9jT41GjPLnqHXX87JVy4KeIfzTeN885qKf59IJ0QuUi60n4F/pQq/
8Y1/1jEvEuRRR+l1fMr3cIg6gjqVTCezpVMDGBJZN1qdWkBu5wL/gynL55Xu
vGfk9N+o39rqe0hkXdmlfKvO74w8Pg/f4H9AFRH5XNdzF8/s7W9cvtf7sMiG
EnO8v53zWZKenH6RD4l79gRrDmuPyB4QK5tkso2dON+r8t/3l4sCJoj9LFR/
/9Cqfp9IF0QeNFFvXbOsSp/xicd0zGvsvooc6lLfwyEaAOpUMl3Mlk4Vyfse
EllXIpdjdWoXdOoL/gcUyxOkWOuMMxx/4ns4ZEN4p0F/kHYZkj/U/2Aq5jVS
7GU2X/fM830Ph2w4P2bnemg09wEMqCIeIjgDYmje9eS5y7fEJxoAFyttjwjb
S7m61/CXi7pEuntEKD9f1WsQ6YHI6SYnc8wwnfdfVukzPnGWjnmu9fexhs+Z
ZhPUqWS6mC2dGsCQyLqzW6cWTvQ/mH55hxLaBP3/Rd5leAZElvlhnJ9k980f
+R9MxdxPSvfN3/geDtkwYm5X2bne3/9gKibWVnRWmfrqR3zLe6KBQMzU2Glj
KGLpwH/PX7+oUiwQe3aOcWfnPFr16xBhQ+Qmg88akTd9Uw3+4gvIna0UfGba
qdfxet/DIRoI6lQyHcyWTg1gSGRDiJyO1an5bp0aIFcJtOiIPJ7dFnnI93DI
hvJp43qZjc7j88W8/wFVRPTcHSHYO/fUoZ9s+DxpFok5PdnO8YhozgMY1ICJ
NTVH8Jz+mDzWmsgzvqU90UCU1j2thg8M6Hf89i4vxa1S1KNz9XXOqvp1iLAh
8gbTJFPNGJ3r52rwF184Vsc83T7Dh5rS+30Ph2ggqFPJ8Jk9nRrAsMiGsVun
5lf7H8xuvFyKz+gvLIh80vdwyET4ZeUS22fvU/4HUzFPkWKfPZyd+x++h0PW
ndca9zxpa+EU/4OpmJ+UYv/SJeqjl/qW9UQCEFlviv2gEVPjf7Yx5+jVck7f
kfpv7dJhXI3+bRWPgwgbIv9qin32P1qFn/nGt3XMywW9zUbodbzX93CIBECd
SobNbOnUAIZENpzrlQvz3To1EG5VThXkRffI44xfkRd9D4lMhDjT+SjVdZO6
9tBvvOh/QBVxs9L13J3UJXKEfusV30Mi60bM5evs3E6I5jqAQQ2YOMsXa8r5
5lG+5TyREO6+e5tBDNVYamNqHOqRg4p7rWpyUs/o90YL+pdO139/c9XjIcKD
yJ+M6607zsyowdd8YcsNN5i1Ou7x0qzXsae54opXfA+JSAjUqWSYzJZOde8J
vQ+LbDiR47E6tQs6dav/AVl+SJAXbSmILFNe6Xs4ZKL8kXE5/bbCyf4HUzEv
ktKc/hd9D4esG79gip+FXux/MBXzbSJ2TbnPQn/sW8oTCULkG8pl9tmTc+AP
/f5cfZ5lqua14l73/WL1gL0GkW/WfD+IMCBygXKBGaLz+60y/hQi/lHHvEhQ
7zTasL/+4AJ1Khkms6VTAxgSmRitTlXfbS6c438wZqMUPwed1iVynH5rh+8h
kYkStc6n2lrn4fqNe/0PqGLOF/Q5G50X2Ue/3Oh7OGTNxBzuY+d0vv/BVEys
Iawl1yPiNN8ynvAAxFL05EFsRYzt+2eqzx/1ziHV8jN95aPwWVmzjNd/W8vn
TzIAkXuVq02bDDNr+vHHkIEeLHvbfbXNoNcFMfhAnUqGxWzpVPYyG2xErsfq
1Hy3TvXINwj6Q3QWXH+Inwdwf8jkeb+JdGp+X/+DqZg/lWLP3Xm6p37I93DI
mvlBO5dDo7kNYEAVcR8Ru5awpthbd3BC5BaDmIreS4ix8T+bTC4q7md740rp
7h+p/FT1N4IIAiJvt2c8dr+PTxneKeivC38cp/xP38MhPIA6lQyL2dKpAQyJ
TJzdOrXwBo8D2XVuzhz1x/cHcF9If/y4ckEez+9/z/9gKmLxHIgmGWJcTvUS
5WbfwyIrJubsn+wcYi7nSPrOzblaxNbAYC2JfMK3fCc8AjFVY6uNsYi11b1G
9bmoSl63L6D/RU6GG3eu7r9UNX7CL264Af0/LjSowWiSNntWctpwi455heAz
U8R39jAbzKBOJf0zezo1gCGR3mh1ar5bp3rgYsEzoyPVF9fol48FcE9If3xB
eaBpkbH5mfqNnf4HNCBep8RZv505fd/Uqntry+iCyBL9p8OV1xg+d5oG5qO5
OszYudM5xFxiTudGcxzAIMsSawZrB2sIa2nduk2+pTvhES6mrkGMtbG2tteq
vv6ur9+Ley30Epqu7Ggq7ql4FgW9o9Ypb6jpOojkIHKVQY2lyCIjrSPsXOL9
xxKpPjfqA2/SsU6zz0RNUj7seziERyCmUqeSfphNnere+3kfFumN3To1v9jD
AC6V4jP4i3VP/FwA94P0z8uUS20vs4/5H0wsNygPEfdcX8tYycsSKci+GuNn
K4eoXzeP1312ufr22/TH7/I9XLJfYm7eauxcYc4wd5hDzKXOKeZ2aDTXG/wP
NpZYM1g7WEMil/uW7UQAEPmsQS4AsfYr8JOKf7/6urtK81Oo3UIvIeQrWsbp
95cqD1BOV3Y26Z462bgep+9UPlDTfSEaB5FbDZ4fsvnDlrEaD3X+Fij3Vi4S
0zrSxc2jlc9U4ZNJArWiywTPkozU6/mw7+EQAYA6lUye2dWpAQyJ9E6rUwvd
OjUhvqqcKOhNOqHL5Xj5nCgJ4jzyY1T3Tekao994zv+AdiPOID1BXM+99k4p
5OZpfN9P48Flyr8qYZcqJyo7WgvSNENj/Sr91bOUj/oePtnNR6M5WWnsHGGu
JkZzZ6K5xJzq3GKOMdfDo7nf5H/wuxFrBWsGawdriCCKQIxFH3DE3Mp/t7ba
u4EQPSuPUA5Ttg2L8hYHKa8Wc95551nK5/Tr8dhT24zkZhq3p56jfLba20LU
GSK/M64HLfbUKUY6m10e8aqSebxEv16je+ocMR3tYkbqnJ9ShV8mAeyp+yvH
2TMd5/keDhEQqFPJZJhtnere83kfFumdyAFZnZqHTn01oT/8LsE5jrqmbD7+
ewHcBzIc3miw73ZIe+HN/gfTTdRjr1fuoexs0dg+U2P7Ko0BFyqfj+JCqW1R
fkA5Utk+JC+5vaLzSy5Svuz7cgYxX47mYI2xc4K5GRnN1ZY+5vH5aI51rjHn
mPs9Il8IqUYfdSRYM64PxM98S3UiIIh8V7ncdOp76jPgLxX9bmW5qEpfC8QZ
Kh1tur5mRc/OXLQrd9Gbcor++3BlG/pIoa/5/spLqx4TUTt29YRarXvqHI13
HUbG6Byd2/c8yhP6b2crV+p7kmkaT5vFTFYf+FwNvtUIfELHs8D66BiDZ2EI
ogjqVLKxHBw6NYAhkcHQ6tSC6tTCGQn8wYfEfRbWJNPz7plD1imTvXmmycns
PD4nv93/YMw1ylnKITkxzROlS5ZLQd6m+/7dfcSE3rZBeYRyqLIV5+ku0X34
UH3Zqw19P0nmo3uOe69zgLkYGs3NhgHMI+Yac65zDx+AL8yOfMP3xe06A2J2
HmuHIHpD5CTEXBt77TP8A/692nNQfeFyfb2pys4m3VMn6+uvUJ6ufLD/PFR3
LuP3+nNrxdV+oQasu5fU9XUdI1Eerl4JPT9cTyi7px6tfGYA83ib/tybxdZi
oiYTe+oi9Ymf19nXqgHqRVfbfbXdXh9B9AZ1Kll/Dh6dGsCQyKDYZSKdmu/W
qQ0k6lnbpTPKi94ZwPWT4fFhg7OTWmVEfpnHgTyiXCtu/2wdKXlZpLEdMeF6
ZX4AcaHU8DvzpNj3JO/6npyg/J8A7nfW+T/RvV7h7j3mYF40J5VYPvqd1wn6
nhTgE0MjH3nE4wXi/RvWijtvbINviU4ECBdrcXZupzkUfjPg36tvLuoecWeS
2Z5QYwW9Loy8UXlT+dzFbrmMb0nUS6rZ1YRZTXGqwfnQRGMhcpPyWIPn7aR5
vOs9s0zn4vYq5vFqcTWZC1yNJvZU1GxurJPPVYO/EbyHQz/TPZS3eRsHES6o
U8n6cnDpVP/3mwyP3Tq1cGgD/9CPpJgXxXOgHw7guslw+WlT7GX2tYT/OGpV
0cNihLK9Qwq5ubq7o0cgarQ3VxgXescI9D2ZIOh7UpDczPyuvifPBHDPs8Zn
onu7yth7jXs+IZqDSjVaqW2OfEF9Ar4BHxkR+UxSdc5FflWKZ0AsKoj8o295
TgQMxNyczLMxGLF4YL8jph65qFeuuML2qsYzBO1DbG8LU+xfUmnuYrdcxnp9
HeS1UBuGGjHUismFtnaMqC9E/qh8r3H9S6bpe9YWI1P13l9Zh3m8SGyNJmo1
UbOJ2s0P1Oh31eDH4vKlrTLMoKczQfQH6lSydg4+ner/npPh0urUfLdOrTNR
szpHEN/x/Od++q2nA7hmMly+qDzYtMgeefSS2JrQH0bPiklie1gUmqZJF3pa
yAeVG2uICb3tZSnte6LrYYFyX/3zlyi3BHDv084t0b3EPZ2fl7aheXuvT4nu
fb1sY+Qbru9JF3xmUuRDSVzoq5GvYo2IHGLuvnubb2lOBAwXc/fTGDzKngE9
sN8RU2su6lxB/2cxHa22l4WR1WJ7W6x5eE3N+YvuPMYz+ponKNH7HLViqBmz
tWPs81MPPP74TlPSvwS9ZUyxf0m95tDO44PiajVX6J46xdVwopbz8hr8r1Lg
mazJ0qTXOk25MbG/S6QPiLnUqWR1HJw61b23833vyXDZrVPz0Kn17nf2KcE5
jojviwsiXw7gesnw+S3lMtvL7P0N/mM3KxdKVGs/XvKyTApyou7fd9YxJvS2
B8T1PUE9eMvYvDvj9PU6nGsNa/SrYT66d7iHei9xT4dG9/iBBs4jfAS+oj4D
34EPLYx8qpEXfJZgT20pYI2IfNu3LCdSABd7F9tY/Gn4UdmfF1NtLqpX/xL0
sDBysvKe+uYveuQybhdXK+bOKze2hszWkt1Uze0iDHygu3+JkdaRu3pCbWzg
PN4U/Y0lrpYTNZ14VumeKvywEnxZX3+JoJ+pXqdc0NC/RWQD1Km+dV/aOLh1
qv/7T4ZPq1ML3Tq1TnxR3LkOzTKpS+Qow5w6OTDuUB6vunBaF3qZNaLW+XFx
vSnwPGDbMI3tC5QHi+thsbOBcaHUvq2cIeh7UpAmnHW6q++J/zlIC++P7tnK
XbX2uKffSWgOd0Y+A99RH4IvFfuePN6AC8ZacGdATOvCGiGIgQIxuFkm2pi8
7e67y/ysmEpzUffrz+4r3f1LjCwWU+xf0qjcxW65jCvF1Y6hhgy1ZHZPRW3Z
I7XevkEDkduVbzGuf8lE10NmL72nP0lwHnFe+f7K+Rqfh7oaT9R6blq3ru7X
+2Tkt2NEfUYW1/31ieyCOtW3/ksLB7dOFdkZwByQ4RM5IqtTu6BTX6zTC58s
OMexteD64P04gOsk08NfmGIvsyPq+MLbxfWiiM4TL+TmaGzHeeKXKP+SUFzo
HSPWi+t70tFekNycvOt7onpc/hTAPITKP0X3COeJz8rbezc2updJabRS+0vk
Q+h7oj4F3yr2PdlexwvHWth1BsQvfUtxIkUQ+ZFBLNaYbN4Of+r358RUmovq
7l/SaXtUuJ5QlyaXu9gtl4EzsEeJqylDbRlqzOQiW3NG9A33jHx3/xKNR62u
d4yneUQtpz2vfLWr8UStJ2o+zx2gTw4UH9bX28v6Os5m/Pe6vjaRbVCnUqdS
p5bXqf7ngUwPu3Vq4e11eEGcjTtc0K8c/e9OM3ymk6ycZ6v/zLX5++vr8IJf
F/SDiGrtp0iXPU/8DOVDHmJCb3tOXN8T1I234syJhYVi3xOR7QHMRSjcHt2T
A4y9R7hXw6N795z3WXS+BJ9yfU+60PdkSuR7tV78dVI8A2JeHmuDICoFPpvV
mGxjM2J03z8jZqC5qPXinn3WPRU9KWxvCjlH+aS/PFR3PuopcfVe9rxy1F4t
NsXzyomecP1L9lHON9I21PWEOsP/HNp5/I24Gk/dU5snuzol1IB+v4xvDgS3
62usFNQCdui1H16HO0kMNlCnUqdSp/avU/3PBZkuIldkdWq+W6fWQDzz3CZD
o9w5n+Ukq+ETBvq4VUbm50n1vczukh7niedlqRTkGN2Hb/MeEXa3O1x8sH1P
WsblXa31G/Qyrg9gPnwT9wD3Qu8J7g3u0YronoVm8C34mPoafK7Y9+SuKi8e
vo81gLXg3jM+4VuCEymEi8WrEZttjO77Z8SUy0X9THr0L3G9mqL+Jb5zF7vl
Mn4irsbMnlc+0bheUqgb+FUjb3Uq4PqXoH/CUvSEMaX9S3zP227ziPPKUfO5
WPfB0e79Dnz4/n58dCA4QX93T3vO0wTlXXW8s8RgAXUqdSp1av861f98kOlj
t07N71vDC31b3H5qzwiQjwdwXWR6+XmDXmY4F7TS8x9eEOk+T7xtqMb2+Uro
7KuU27xHgXjb1fekIE3Tohr99xj0PfE/J0lzg/LdJjpPvMvek+g88aBtqzhf
g8+p78EHi31PXqjwJnxWimfj4gyIf/Ytv4kUQ+R8g+dfEKO/A//a7d/F9JeH
elS/t1ainlAj9GcWiSn2L/Gdqyiby8A51/a88lZXg9Z9XvnTSdz2oCByn/IU
E/UvcXm6OXpvfpSSedxPTG6eqwktnldeKb4r7n1XiwzX+3B6A+4yMVhAnUqd
Sp26u071Pydkeml1ar5bp1bIncoZgviOcxfw7OYLAVwTmV5uNnh2vlkm2F5m
Lw/gl+CDJeeJF3IzNbZH54nLC953/spiRHffk46C5ObqmtpbL/FCMzjOR30x
ula9Zlw77sGo6J5s9T47Azf43K6+J3n4ZLHvyc4B3Aj4vDsDYoJqvdf5lt1E
yrFu3SaD2NwiY2ys7o3+clFnSNS/pN32mjDF/iW+cxMV5zJQm4AaNNSioSbN
fn57SVK33ytEnjMl/UvQ+8UU+5f4npeK5vBJcbWgOK98hpjOFrdHru/Dn/tC
/uWXzaH6sxPtGc8zDfq6EEQtoE4V6lTq1G6dKvJKAHNDppfIHVmdmp8hu/vg
18q8APy208Z3nP95WQDXQ6af1xjUVaCX2Wllfvh7yplK1D83T9bYjmdj/1b5
B+87ffXWs+9J3n3mcIhe7lXGnTnoe37qzR3RteEa9VpxzcXzxJ/xPhvVG3wQ
vuj6ntizdfeMfDbuhpwqxTMgUFv0A9+Sm8gAXGxeamN1717QvXNRX5Xu/iW7
ekKdqXw4XfmLHrmMnueV23vhatWu9TEdiaCkf4mRtuGu58sp6Z1DO4+7ziu3
taLYUxeor97Yy6d7A8+uLBL0NBml9+PihGaAyDKoU4U6lTq1W6f6nx8y/bQ6
tdCtU0uI56UQw2/t4xefE5yLi3McJ3eJHKPf2hbAtZDpJ3qZnax+NcP2Mru/
jx+6T3bV2reO1ti+WApypLgeEwXvu3t97EaxZ1zb+vPm8Xm35x9nsnVOxS+j
a1rurhHXOj+69ixYXpxPwjfVR+Grxb4n9/VxQ+Dr8Hn4PtYAQdQLIkcjVtuY
jdjdG4jxi6I9tWWcoKeEKfYv8Z2DqFsu40fiatNsL6nJxp35+3aDGraswPUv
Wadcht4uLn7sK7Z/ie/7X7d5xHnlh4itGUXtKPZU1JI+2odf47zxvQVnjrca
1NMQRL1AnSrUqVmwGnUqzyoj60PkkKxO7fr/7L0LvB1VeTb+7nM/J3cSkpAL
CSH3ewLEgKICAgbxgqJUJagIIj9B8ENK+xWMvWCl+GmlWkuNlGLls1r+XkCt
ogileAFF8YZYQEVAbKr5AKlSzp71f5+1Zp+zzz5n79mXmVkzs59n/Z6fkuTs
s2bWu9b7zLNnvWtMp4a0+0mnj+8nfazq714q8EUHAqfnvpiB6yCLw7sM6nsM
ykj56Kq/2KdE/dHwPPGgtFpXUZwnfrXyv72v6Mm08bongfRg7Ufdk3OVD2Rg
nNrlA+E16LXgmnBt4XnihWyITcSoq3tSRuxW6p48XnVjnoO41ph3Z0AU5/mY
8A+Xo3F27oB5GeItBHL6WP2S6Rqj68RU6pf49hwS8zL2SOW8crd3bayW1KMe
R6gzuPolZ5uwfglquhjBe23XFHgcx88rt3tJZ2sMn1UV28CbxdXXFcH7cMV9
D45IH9SpVY06Nf+tTZ3qf5zI4nBMpwYvq/qLsf2kK6Q8NCAB6kecJ+49KWjX
kqwoO/3ju/9k8Xixxtca689fLzJ+nnifBD3LNLdj78gl4t4VLnp7XMbrngxq
DiitKVfqnog8mYGxapZPmrHzxHENuJbwPHF7jUVviFXErKt7UkYsV+qeoF6f
OxsXY/uHvmU2UUAgV2vOtrkbORy53NaEGrA53lTql+z+zG7vPkMqXsbp4vau
YQ8b9rLZPW1X+R6mlnDXXfgucax+CWq4GDlAr+ni4npQE8bwQXG1Wra7PaXY
W4o9pthreotyO+JbhvX+vMj3UBEFBHVqVaNOLUZrQaf6HyuyeLQ6tVytU227
U3majO0nxZ5n+86pzAhr1t2Xgb6TxeMjyiNNn8wpD8vYeeJl2SqBvEzj8Vbv
K3b67VvKHcoRZf8cnX+bArcf4xPKmzPOfzaur9pn9H0kvJa7vd/V9NtXlS9V
aiwjphHbiHHEunsefsy3xCYKCJEfG+Rszd02h4f1S9wZ1Mjxd3aHfzHBy0Ae
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
Z2VT4ObwTb4vgTCIM+Q25DjNdch5M8Ic+GjNOH47zJnbbA61uRQ59RbJ3jP9
EsHe+wP1mp5vHnzwGd+3mMgIRH5k8J7cgEw3OzMYt1/TPp2q3KZc0Kea+gCd
b89W/lvNXGygUwn/aKRTJ4xjI52aMVCnElOhVqdm7Tv/Rjp1QmugU1lLyjfh
vdTXqRPaRJ1artapPi8Ce1jxXik82/45UpaNEsjx2s+blOWaa6huX3fXIiMl
I73zy65O36n6kV/LwLh0I+9R7ja2plfvwlEZ7jGyRsfncw3GEO025YuVmyXo
myvWu8eZND/xf0GW75bKeeOqWeT9vtMKkTEgJhAbeMfD+vsZwE/COYS5hDmF
uWXn2G2Nn+3sXMWcxdzFHLb1+XbbuU2kD5E7jMtpWwLpm1e2uW6by30NxxG5
Ezl0o82pNg6QY38m2Xi2P9+uqThzbIvyn3zfZiJjcPul1pkRjZOPZSRmUd8C
ewpQE+pgfWbqmxWulddFzMUGOpVIH410asNxbKRTMwDqVKIRJunUDLCRTm3Y
GujUDFxWF7K+Tq3bylKtUwN4P9U6Nc0LwD7B88TVtxgclqC0Wnt3pPbrauVT
EbFY3a5RLkFc9gXSs3TU7ZO+0LCWVFp8TKm5Wg43UlpelqH+QBboeFzVwhj+
Tnmt8mjlWrefdKZ++Onit5bUfiXey+4VrHcn+k4nREaB2ECMIFbK+/d77Qvm
DOaOrbOnc8nOqWtbe56zcxdzGHMZcxpzWy4zn//8U16vrVvgchdyGPbaa05D
blvicl3L46g5VXMrcqzNtci5Pp/poTPQjx5Zqtf3ct+3msgg7rrr9xobzzV9
Mtcs8xyv4JXaB7yjtUY5MqJzapHyHS3OxQY6lUgejXRqS+NYR6f6BDQHdSoR
hWqdut/jc9WT4ZyZSqfK71t4bqyjU0X+KwPPxd3A+jq16faEVOvUMrygik5N
o5YUakUsVg73SdCzTONwu/blQuXPW7iGWi9jbD/pkMblKo3LnfqrrlT+NgNj
VkQ+rbxa+Rzl2rIMTHM15vBu5eNtjuOvJFP7Sc8QnCnaH57h8BnfqYTIKEQ+
bfDdDGLldYgdD8AcWSiT6+wtfXhp289gdi5jTmNuY47buX61l+vrFricpbkL
OQy5LKxf0vYY/jzMrZpjNdci59rcixzs47l+l9jausY9i/+779tNZBQiHzE4
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
0oeXete+qWttrEFYi/pn6tzbELg16iMZWC+j+MNw7d9pbC5ATkBuuKD7np3k
Ib3utym3i+ldpHHdI+ZAje8h66usVf6x76mXadCLah8ip5oeWWZm6T07RrkF
a2uf3sO5ylOV93fhfCygTvV9T9MmtAB1KuEDUTrVPkN1U3tSCqlTrafBlq92
hbi92kP9gZSWaywebrCfNo/f94pcaeB5S0nz2dBgIPP0ui5WPuP9Lifbfqu8
UrlTc/kqKQ8OSTBb19nzQt3/EvvspPdDtuv9udnzKBFFg8iXDGILMYZYg95E
7CEGB0ekbOsL7nQx6lsHp/K8hDUHaw/WIKxFWJN0bcobkANsbQXkBOQG5IiD
XM7wfY+T5jnXnWPrJuA9lNIKXT8H3TkZe8I19Uj93wGZZtx3c9/2PFJE0SDy
ceVWfT7vM28MY+5a/d+jleuU04Y0NhcozxXzitte4X2+JL6mdoFO9X2PUxnH
OjoVf0edSiSJWp0K1NOp8pT3p7pk2zNSGJ26d+/jdXVqodr1ylHvvYi/fUm5
XjncY6R3kcbhNh3L1yt/4Du0OoLIj5VnG3s9PYtHZbg3EH2WkE96v+Pxt7K4
/b0vVG6UoH+WlKfpunqy8qGq758f1f9/AN7xlyWjIid5HB2iiEBMIbbwrP7w
0vH3nx4KYxExidhEjNpYLWi9DLvGYK3BmtOzdNRp6rPtmpRnICe43LDN5Qq8
x43c8eWCjiNy/jEuPw7McHWHT1c+sXfv2D35of73TPs9/iF6X17tcXSIomH/
/rLG1DGmVxaaRTXvke3btctcpn92uHJFSdfVGeGa89cFnYtdqFN93/NExrGB
Tq38G+pUIklU61SsoxU00qn2GatorQt1aiHaFo3LV+j/3uG9J/E07Kc8Xtxe
+/45mts3BiIn6Pjd5DuUYoXIbcoXKzcH0jevbK8Xnvc93kcgnob9vbsFe+1N
73wpj6guXatr6Rfr7IF4u30Hujew90P2TvlvCKJViHzYzjHE1sUytY7+grjY
RIwiVhGzNnbvKYbutmvKznBNxVpj59iL7RpUJCBHiBxvbM5A7pgW5pKC1JKy
OR65fouYvnkuXndq3H69zpp6uv0ev99pH/lUyqNBFBUiVyg3mBEpmffVib0f
6J+/XrlNubhHn9+xN+EI5b8WZC5Sp3ofg1jGsYFOnerfU6cSSaBWp06FRjq1
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
tRYBepn9dQLrJHpPoAeFrbVfqf79mHRqtFv2Eeh7Mt/2PQmlsixg35MD+eY3
f2tq9hMP7FhhzK7O0Tyi18Ixtu9J0D8gYbXvSbuf+yWp7gGxLhS5yvdUkAIi
8iH4ZOubk9hbZ0f07nMfnvOuUTkunf4lLdviTj0f5MdQY4ZaM+5XfgCj+5cs
0XvNHiOLdcxuzMc8orZzeL/yFa72M6n9yr8h7n2rPpms1392AqNJOo36OLVd
fWecWnyKHKe2C+NU0i5RnBoMx6ktii5OZhXy+TJD//dY/av9vi+NFBD4NvT8
6JG5Q4vbWCNv0d9dKrb3RNi1RIbsfuKXqDydH79QlUs+c0lN35PJaj9r7F6o
ItcnOLLFBGPgxkLHBGMT7SeOMfM9bwf4+af03D443PdkCLqHvie3tBGrwgbU
FgLYxL59L/ueDlJARH5p4JPVN1sf3SpXi+tfMtBre1AY2ep6UizZv8S77R1g
i89FNWaoNUPNme0ldZLhfuXV/iXHoX8JesIYmZF+/5KW5/Gnem7vc7WfXYtc
LShqQm9vQ4+36+8usvs8LVF5OsGRJZ1CfZzaqn4zTi0HZYlTW6U2TiWkFWri
1GBVlFNqJRe1S6r7OG4I2eeOtIPIl1U2hYPSHX6oyfWxdj/x7nkSyCYJ5Sxd
d+/Pn28/wEc8FvU9mWz7ngRuT1T0Pem8HoC4ZpE3GTsGGIvJ0dg8VoB5VF2z
Oqe6Bx2s7XvSzOdcKtU9IDap/L3vKSEFRuSz8M3WR1/T5Jr6PanpX1LtCXW2
ykMFsMX7bK+M6n7lrhZNzra1aZ1GTf8SI73TnZ9BXeUzBZjHu6Nz3ehqQqv7
lTfbAw37Rm8U9DOdbt9hIKRV6uPUZvSZcWo5KGuc2gyMU0lSRHFqOBynNikv
iXt/ultQT3yq78shJUDkLRovLg7wDukzMdbG6n7i6C3RN0V9+1qVEyWV/cRT
9xG36HkvrdboLwxG+p48mcHI+0XkP83wfuK4dowBxuKWAs4j+p6caPueBNDJ
at+TPdsa7y32TPTOfpcsGYItENIu8M3qo838mLHmU+L6P+K+v3em6vGGqOeE
x74XLdvijeJq0FCLhpq0DtqvXOQRlXNM1L/E+ZXVOhbfKOA8Xh/VhK5xNaLT
VDd3xNTnZ/XnjhXsOd5j87KEtEt9nBpHhxmnFp9OiFPj9OdjnEqSJopThxCn
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
pj7gDTo+9/ieppbBubtr0GvBNU2KrvHhEs+j6qjVVdVZ6C50+HiVR7GeRkDX
ofMix+rYPOtxhkjZcDmLI+GzzdE1ayp8Onw7fHz3POvzjbxT7LqTmO6PkYPy
mYuS7+t3r4/W1O4Feh6bVd6u8oDvaWoZkbtVXo97BPUTs41M1us7vty9pORO
vb7tKht13Zzp8qqnqOyt0au36v8vFZ1nwTw/7HuaSImoj1OrME5lnFpUmShO
rf4M41SSFjVxanB0Tb5poFfCBfrfa2v+rip7VKaqoM4Wz+UISQqRy1SvVtn3
8O4a437lJv27g5Gf75awa5EMyeGuX4b8vDw+YtuebUbOHK61D9w7iCeYMvVo
w7W4a9JrwzXiWvWace2+xz8x3/7zSDdVR6Gr0Fno7s01sWuVb0XvqUD3Rf7I
w4yQsgIfjR5D0+riyqrAxy9wPt/WONk19VKVZ9tfU3OTg0JPqNOqPaGm63ms
V3mNyu2+pycxRK439h4BtYbVXlLnlccv2nl8VK/p3e6+sHuhxgFdYlapTn1t
DL26X//ucPssX8dCXut7ekiJqI9T62GcWg46PU6t/1nGqSQtojg1qMap1XzT
RSr/NUYeqipvQ+wqfexlRhJD5Ef23dh+GQxPbnDPslP/fZa4elL0MrM1+ruK
7+dlZ7XWXm2rsjx69/CqUvZmcz1sropq9PVacc249p0lmMddUa191GcPurpz
jJi1lldDn1X33bvtD2Y0C6TMwDfDR6uvtj57Ip2Fz0efHdQ6oebJ9pK6tjlb
nOg9KF+5KLlIv3cmekIN6Dqz0rieULt8T00qiLygcqWrOUTtIWoQUYt4XbHX
VNsT6krXE6qyzPbmMfNUl65uoE+X6r+vtno3u1R5R+KP+jh1IhinFp9OjFMn
+h3GqSRpauLU8G0T5J3GkhdV5gh6mS0cYi8zkgQiZ6k+HRzMUL16MsY9y379
mdOiPH3vNPXz6yW0Pc5S7HuSmk+4XdxeFej50b0wcDne96r81Pe0pA6u0V3r
FnftGAOMxT8XcB6rffZUF6GTqLU/U2V/g5gVQOdn2DV1aQBbIKRd4JvVR9v7
9s9c0nhfoL1RrZNdU2e6GihbC3VnPFvMVQ7qluH+Jej9YVzs/EGVp3xPS+qI
7I5qDze7WkTUz6A28fsFXFOvj2oO19pePPad/B0x9emX+nPHqsyUXtTb+J4W
UgLq49RGME4tB50Spzb6XcapJGmiOHUIcepLTeaiTJQ/Helldr3vyyEFRuQ2
xM3hoPSEFzR533KvjOp7EqDXmbxD19mH8u8j0NPDxtno8dEzO3C2dJpBD5BO
o6bvSWjHokB9T6BrVufq+uzdGyNWreV8u6Zi79zNKv+U0kiTTsDVbG20Pvpj
Ta6pd4qrfUINFGqhbK+Md6n8x8Sfk4dc1Kj+Jd3zjN0fWM5Uud/3lGSOyJ0G
e33ZmkTUJk6JahVfKMCaenfUv+Qw23vHjNW/JI58Rn9+g6CuZIaOwyd9Twkp
MPVxajMwTi0HZY1Tm/kcxqkkKaI4NazGqc3moSC6IJlDBXuVzNL/PU7/6jnf
l0UKishJplvmDy1s457lRv3dxVgjeyTsWhLV6CfU9yQVv7BDzw37WPVPCqSy
KrIh5nRr+p4EdmwwRjtyOofPRjqGWnvVOegedPDGJuPUWmADsAXYBCGtAF+M
9UR9s80ptarfqIGaL64mCrVRqJFCrRRqpnzbXr0M9y+ZavuXGOwbWLb+Ja0i
cq1Br2Vbo4heUnjn7aKcrqlPjupfgp47Zqnq4Jfb0GPsx3OQfW56sMp+39NB
CkptnNoqjFPLQVni1FY/k3EqaZeaODVYFeWUWslFQW6Xai+z1foxf+z70kgB
EblGZV04SSq2j267625N35OgsloCOa75viep+oWrxfXwGOgNpbJM7WarQY+P
7dtf9D0VuQFj4fqebDV2jDBWGLOrczSP2E/8ONtbJ4Cu4b3li9qIUavABibZ
/Z/WhyKfTmA0Sach8lH4ZOub72xzTUVtH2qiUBvVh2fAa6LnwNfnyBZH+pfo
erHCuP4lu8xLLwW+pyI3oDbR1Sge7moWUbuI/OIt+ZjHSz5ziZGrhvuXmIF+
MbOlcf+SOII4dQtqpGSKrbMhpFnq49R2YZxafIocp7b7uYxTSbtEcWpQjVNb
zUNVBe9N98ukwPbLlId8Xx4pECJPGvSS7ZVpwaYE6ziekpoa/enq5zdK2Ezf
k1R8wvekZj/xaq392bSZCUBvRDdGm0PpXjA03Pfkex7ncWQ/8RC6NTnStWcS
iE+rHGbvm6YHrs/yk4l9Lik/WE/gi9UnW9+clN4/Fvl66DtqplA7ZWuo7vZo
i7fp9y+P+pd0LTJuTT1P5XHf05BbUKuIPh+2dhE1jFhTUdO4x+M8on/JSSrr
bE8dU+1f8lyC+nuOftYh9t4JdZv3+p4GUiDq49SkYJxaDooWpyb1HYxTSavU
xKnB8QnkoSCPRfn9iiB3/g7fl0gKhMiFqjcrbO+8exJcI6vyDXH76Ni+Jwtk
yMbc56g8kmH/kqf0+06Jau17Z6qNbAhdD487fQ9/YRjpe6Jj1zvd1ehjTJ/K
cB4fiXRni9Ml6BR06xsJxqZVYAtT7Jq6IoCNEBIX+OAuWWp98mMprKm3iKuZ
Gu4lVd2vPMN+GfLEqP4lBn2pRU5Xucf38BcGt1/5ia6WETWNqG3MeL9y+Xf3
nbLZ9tCxvXTw/tJ9Kejtj/Uzt9r7/n695lf5Hn5SIOrj1KRhnFoO8h6nJv1d
jFNJq0RxalCNU5PIRUHerTIgvVEvs3/xfZmkAIj8m60XGJD+8LQU1slawfuk
tu9Jr4SVZRLIVtf35Ix7zkjXLwzvJz4YSmVlYOvL5VrfQ19YXN8T1OjrWGJM
M+h7Ah2x+4lvtT1zAugQdCmJ9/Qn4vV2Te2P9s79QarfRcqByB14Nou+oubc
lNdU1E6hhgq1VBW8m3SU2Bor1Fqluqaif8k09ISarNe6RuV4lZt8D31hQS2j
2698hZGBfiNzJPX9ymX/qP4l6J1j2u1fEkv089cKeunPUvmy76EnBaA+Tk0T
xqnlIG9xaprfyziVNEsUp9o9IM5NMA8F+U20hnbLgiHkhQlphMgbTZcsHpol
8fYSbVfQ9+S86B2+vsnq59eovDKdvifyRf3cRagd6QmlC3ufYp2+VOVp38Ne
eDCGbixt35MhGewOZbGO9ZdSmEfsJ/5K2yMngM5Ad85LOR6tApuAbcBGRN6U
yXeSYgPfqz7Y+uK011MIaqhQS4VeUqitQo2VrbVKYb9y27/kINu/BL05DPuX
JAdqGl1t4xZX64heUsgv3pbCPO7Szz1G75dW2V45Jqn+JXHkBf2eV9gcao99
H4yQRtTHqVnAOLX45CFOzWJNZZxKmiWKU4fmR7mjJHNREOy5M9LL7LO+L5fk
GJGbUVcRDkp3eGlGa2ZV6vqeBHKYhPKmZPqeyINSu5+4+vZNoevN0Xn7iadN
Td+T0I51te/JgwnMI/YTf6PtiRNCRyZHOvNYRrFoFdgGbAS2wuf4ZCLgc9X3
Wh+8K+M1FTVVqK1CjVUP3qvZpHKGyr0J2OJ3ohyX61/i8iXyHpWf+B7y0oEa
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
qH0W+TvfQ0uaQOSf7HNPkfU6j5NDzOdSndcvF2h9/JFU93Y8NBA53/eQEs9A
B6AL0In7CxSvwuaWDq+pk0Nrk9Y2b/d9aqQJ4AOdL1wL32jnc2XkM32vlXHl
dnF75ji//lHfQ0o8I/I20yVLTdH6SN6j5/pmlc2IESq4d0Kt3isZpxaMieLU
osA4ldRSH6f6XivjCuPUclAXp4a1carv/FIceUIFvfQn63l3z5NA1ksoC1Qn
J6n0ol4P/aPebLAnMMkvIrtV3m5szW/P7MDO3zwVnc/uBTI0Sef3aCnG/uPY
u7lXpqnuHaXX83PfQ0s8I7LXYJ9k6MTWAsSqsLGjVGBzsD27ps6L1lTYpq3L
P1uv6UHfp0omAD4PdRfWB8IXYv4W2DUVvtL6zJMiH+p7zWwkeFe7x+4/9krb
b5V0NiIPqBxh+mWSOaUA+vtzPccPiHsfalG3mK7paoeDKgOMU4tEM3Fq3mGc
Smqpj1N9r5mNhHFqOZggTg2R06mNU33nm8YS9FU/M8rr902RQNaqHKvnf73K
/6dyk8rB8PddRroXBq7X6btV/sP30JMa4ANFLjT2HeGuRUMy2O1yide6tVBu
1f8/well73QJpuh8nyb5rWn+ItZG+67oel0Hr/I9vCQnQBegE9CNL+Y0Tn0u
si3YGGzN+nbY3q2RLV4b+QjYKGzVvtd/IePYnAEfJ/IuY31e94Ih6wMPdj7R
ziN8JHzlWus7rQ+FL83rnnpuX5JuvZ7DVK73PbwkJ4h82FRktX1fLs/v+F2p
53akynKNqfumqt0tUvlYZIuMUwtBO3FqHmGcSsaiPk71vXaOJYxTy8FEcarN
4YzEqQFyPNU4NS976qGP1U4V7Os80CdhZYXq4hF6vleqvKBSe/xe5TKVWXj+
1BdKZVmAvK/IlazRzwEiuwz2aJbKikD6B0LBs8KLDlz/tu3ZZuQq/bcjxVRW
StA/IOFMnf+LcrhWLpJqD71XmX37XvY9xCQnQBegE9CNxTmMT2FLsKn+QV1T
1cZga7A52F69jsNGra3CZmG7sGG1ZeIX+DT4Nuvj4Ovg8+D7dh64TlpfCZ+p
vlN9KHyp9ak7c7am7l+ypNpbV6/rNN9DTHKEyH5T7cW/Mmd6C7lez+l4lXV4
Zop3oOaovEvlmTHskXFqbkkiTs0bjFPJWNTHqb7X0HphnFoOxotT5eW6HM7o
ODVAzqcap/rsaY6eEXhXf7BLY9NFMiRb9BzPVtldd/71x36VM1WmqPRN1UtY
q3I8n7F6QuRWg/0ORNaF0jstkMk6L6eo7J147ZOf6s+8V+Vwnf8lMjTYLeEy
yU8f3ovs8/ueUGSzyi2+h5nkDJG/N9AN6MjFOYlPYTtLobdqS7Ap2Ja8T6yt
TWiLeyObhe3ChmHL1qZv9X1JHQl8mes7syaQvsmB9XVnOt834TzujnzoFutT
rW89NPK1vtdTyFvxzEn63fsI8m3fw0xyhsi1KhsN9n7+ZE509m5xPaE2qczp
iXJMr1D5fgNbZJyaK9KIU/MA41QyEfVxqu/1FMI4tRxMFKdOeIyOU4dq49Qs
c1BPRM+X8C52z2wJ5DAJrX7dqRI0uIba416VzVJTT3pYVKN/t+8p6ghE/t1g
3xjrA7vnBTKpYmS1zsU3mlvv5G79ndNUNrl6UtQLow+Dz15ST0X5+i45WPXq
LN9DTXKKyFugI0PQlac8xqawFdjMpGqfPbUla1N3N2mLWINXYU1VW4ZN2/gW
NfoPebu2TgK+y/mww0b6l2x2vq7peYRP3Wh9rPW1x4vfXlL3iXsPvyKH6vWd
53uoSU4ROdV0y0H2vT5fugpBD3Xs63e4yiI8L50hLr65uUlbZJzqlSziVF8w
TiVxqI9Tfa2pjFPLwURxauwjkNo4NUQuqDZOTTMH9RuVHSrTVPom65msiXpC
oR70101cQ/1xo8piqanRr9aTPul7ykqJyLMql7pn211LhmSwJ5T5Mlxr36rY
utLj5YB6Uh99T04V7Ck6GO2N+0PfQ05yisgPjNs7dzDc7iEm/fUNNxzYZw82
dFObtog1GTYN24aNWzu41No+SR74quH+JfBh8GWLnW9rex7hY9dYn2t97w5P
sSh67PTKNOPqlX7me8hJThH5F4OeEwPS501XrxLXR3el3jP141nvQpWPtGmL
jFMzJes41QeMU0kc6uPUrNdT3MMxTi0+E8WpLR+/lto4NUBuqBqn/iaFPNTV
KgepDPRKWFkW9YS6VOXpNq6h9vgvcfWkeHY10B9KZXm0n8RV5qWXAt9TWBpc
rf0xRiqrA+mfFNj63fPEXPKZSxJZs5bsX+LqSbdG9aT9Es6RbPue3BW9s1eR
VapDF/secpJzoCPQFejMv2YYk16m3wXbgI3YPntqM7Ad2FASdgCbhm27Gn21
ddi8HGdQR0OSAb7J9RdVXwWfBd81Q8bsX9JyvPZ05GtRo7/M+mDri6/OcE39
a6n21l2n8me+h53kHJFzdE09xN67PJyhnt4qbo+f9Xhm2i+uJxRqDv4zQXtk
nJo6PuPUrGCcSpqhPk7Nak1lnFoOxotTbe4liWN0nBogV1SNU5PIQX1HXK9H
+07eQtVD9IR6q8r9CZ1//fGMuPdoWU+aKCK3q7xWZUMovdNdrT3y2o+ls6bJ
T/Sz3yMj9aTdEi5XPbotgzV0nX1+PyPqjfcL30NPcg50BLoCnVmXQSwKG4At
2Fr7ap892MpPUrLFxyJbt2uq2j7WALsW3Jn6tZaZUf1L0E9mcuS7xuiFnMg8
3h/53i3WF1ufvD7y0Wmvqeib2iNz9VpPZP9m0hCRR1S2mj6ZYo7LQD/v1e84
Q2WzytwejYXRE+ooabp2JLYtMk5NhTzFqWnDOJU0Q32cmvaayji1HEwUp6Zy
jI5Tg9o4tZUc1D6VU6K8fe9MCWSDhHKyfv7tKkMpXUPtcZfYugRbT9ozR/Vy
k+rlGXpq9/qe2kLhYsJzVDaP7NO4Usf1a9nk1W096TaVww6sJ03j+67B2ild
LpaRT/seflIQoCvQGejONSnFoY/q5x4jdX32YBt3ZmSLd4izfVtjomsB1gS7
NjySyvWWFfgg54vUJ8E3wUcdpuN6T0bzCB8MX7zB+marT6dEPjuN77vUrqk9
uF6Vm3wPPykIIn+sstZMkvT2M9mvnwv9RE+og7t0XcWz9UPF7j+diS0yTk2E
PMepacA4lbRCfZyahi0wTi0HE8WpqR8vS22cGiKHVBunxslB/V5k9D6Nq1QX
8Xxpl8r/yeAa6g/UIS6QMepJ9/ue6lwj8rzK5fbZpNunsTeU2TLmfuKZrC8a
G45VT5r098wX7I2L9es1vqeAFAyRk63uzE8h/hyzz15G90sH2KKuAXYtwJpg
9yvfGq0VLyR+3WXC7Vlf179kgbTdv6TleYRPVt+sPhq+2lT3K0/yO56Ram/d
JQa9LgmJy/btLxrs0dMjs82yFHz9ruieaVVFzACe9aLvyIeTq+NqyhYZp7ZE
UeLUpGGcSlqlNk5NWv8ZpxafieLUzA/kjEbi1AA5pWqc+vsJ8lBfVFmEfH2P
hF1LVQ+xT+PFKr/wcA21x2/F1TXaetIB1cuVga0ll12+pz2XHLBP41Qdtx1i
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
RWsO1p7emYFdi+yadKfvaWoJ+ALnE9Q3wEdMdT4D9Wq+xzrVeXxEr/McsXFN
9wLVY11TV6s+fyPKjbxO/zsg/cbFbt/zPEvlo9NzUSLXq2xUv91lPhKNwf36
37Oie6j53WIqs3R8TlC5r9xrqq2NZZxaeGGcSnzCOLXGFjskTrU5jrIcV6r8
P97PItkDdZU7VeaoDPSHUlmhunikzuMu3yqVCCLXqhxrpLIykP5BV6N/UfnW
lks+c4mRq/TajtK4dLkEA/0S4hnqTjnwWufr33ULniWe5Ht6SMmATkG3DhpD
76CL0EnoZmWFrjyqq9BZ6K5v+0ncv+saY9carDlYe7AG6VpUBuAbrI+Arxjo
C63v2Fm+NfWMe85wPn+rrqnLVG97xa6d19blRPbrn2fZ5/iLdFze4GlWyksn
56JEnlU5zvTILLN8jOu/Vf/uRJV1KlP6dYzmqbxH5YXy2SPj1OIL41SSBxin
RmtqB8appegltUav4pVi946V33s/m/aP21SWS1Rrv2jIPdc9T+Vx32qUKCJP
q1xarScdste7WK/7S+Xw9Xg/X05SWSdh7zSx75yeqfLcGOssZJd9H7Wi47Eu
FLnG9/SQkuDW/nUhdOuacXTvuUg3oaPQVeis1d2S1JjIF/VaFmFN7QndvtSH
R2vP076nJ1HgI5yvUJ8B34E1dbnzKb7nIJF5hI9/pfX5pm+ymOmqr+epBC+9
NOZ4XGqf43freBymcmPGs1FuOjsX9VFTkdW2DvS2Ca4fPv1IlZUVMf3op48e
RB8viS0yTvU+B4nMI+NUkgMYpzJOtT6lwMfk2nrSN4mrdS7isVds71X7Tl7P
bNXDw3StP13n6x7fqpMq49aTPljM9UXu1XM/Q2WThD1zJJikcegW1dH7xllf
a2Ut1liZpnN/lI7Hk76nhhQckf800CXo1IYY+gcdha5CZ6G70GH7Hu29BbVF
XUOK3L+kVeAznO9QHwJfMjnyLU8UdB7h0+HbD7O+3vr841Uei5EHORjxgczW
sTjeXHHFrzIYfVJmXG/dI0y/TDLHxtC/n0X5Uqyri7vEdGM/ss1S2Pww41TG
qYxTSZIwTmWcWh+nFvG4Q3Vyhbh+EahxtvWk71f5T99nFvP4jcoOlWkqfZNV
D9cEiJtFbvKtKpkyUk+6PpRe9XN4jniamCX7l3hfK2KtJ/v1fC8VW2vftUSG
BnskXKx6eWOMtbUq3x/uuYt33S/0PSWk4ECHoEvQqe83oYfQWegudBi6bNdU
6Pb+Yvh6rBlYO+wagrUEa4q8qrD9S1oFPsT5EvUp8C3TnK/xPT+x19QnIl/u
+pdYHw9ff0cT7+LcFPU/1TFQ2ZneYJOOAH1ju2SpmRYzF1rlHv3Z01U2qczp
UX2crfJalf8okD0yTmWcejnjVJIsjFMZp44Vp9rcSBGOKE7VCzAvR7XNw/Wk
y0fqSeVX3s90/GOnylyp7tOourhVL+fKjn5+O7qetN/Vk16W77VFduk5HqO+
eaUE/QMSzlA9vKiJNbVWTnE9d6N9kMv9rJGkh3vmcLjVpW0t6iJ0GLoMnYZu
Q8eh677tbUJb1LWirP1LWmH79hetT7G+BT4GvmaBjs/V+Z3HC26+oLZ/CXy6
qfYvaYUj9Pf6ZLIbA3k04REmnYLI/1TZjP7NZkeLunhT9E4f3i2ZPKA6Pl9s
L170QfNtd+OuqYxTD4BxKuNU0j6MUxmnAviS8eLU3B7ILdX02UMuqiovquyI
6kn7po6uJ5Uh72c+cvyroD7byGBXzT6N71H5iW+VyAUiP1P5g9E1+jnseyK3
6zmdKti/OeydLjavf5rK/hbXVMi+aF3tksVDIm/0PRWkoEB3oEMz29TH/ZFO
Q7eh49B1q/O358wWvyo1/Ut0zbAxMtaQvb6nIhfAtzgfs8X5HPiedc4X+Z67
UfM40r8EPtz6cvj03+3e3fK1PxjFBBU5xI4BIa2AfYy6Zb7t39wOv7riCnOl
fsZWleUVXVexp9AhKn+VM1tknDohjFMZp5L2YJzKOLWWieLU3BzIJdX02UOu
aWpNHqpWUE96TH09KWqj7/V8DftkpNZ+eJ/Gbaao+zSmzeh60jmunhQ570f8
ri/yY3HvEG4W0z3P1dqvUX27q421tFY+ILbnbuh6Mfyd72kgBQM6A92BDn0g
IZ2Ebq+J1lTovO15co5YW/Bqi49Ea4LtXzKnY/qXtIrbrxw+B/uVzxyp0d/n
eR5/qOfwFkH/Evhsq2fw4T9q876/ypn2OX6vi3HkG4l8JukcRD6Duizbt/mq
hHTyJ/o574l6nyzq0vt67J20VeXbnm2RcWpTME5lnEqah3Eq49TxmChO9XqM
xKnDffaG49QJBPWkS8aqJ/1lxuf/W5XzpGafxlXRPo3X+57yQjBST7o2kL4p
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
fBD5nspbzH446ZwdFbF/ScvzOHReuakZnay6em5CPuoik1tFP9NZKvflNAuk
zDBOZZzKOJVxKkmPmjg1PHVErqlnogToE3GByn+O+G/3xTFrRVYE7ANJ0kTk
/aipML3MPlNnPayeJ25q7Zerf9+i6+j1Em1/bLvzdT1VHzHU9ySUyhK1s82m
78m99/7a9RSNGzyDPU98c2Sera87dHGeeNZi+p5cH9foL7c1+tW+JyP/LHTd
ngGxOhTZ43qKSImAj1ZfbXz2fXXe3eHjp1ifH8lKlYL3L2l5TUVtgj2v3Nas
mfPKr4/+7d8CB7OSLiP6l6C3SySz9VlvKNc8ys9l6LzyZbaGtHpe+UjuFbt/
qkcm6ric42BWSFlpNU51bT+p2yPjVO+FcSopAnGcGgzGqbFU60n7um096Q3x
v9fFJlph8qLTAhvL/dT1I5CSIXJi1CWHBAtq1sJP6//G/+/vlLBjoQyY88Qv
Fqdnpmbu54f1PZmo9rZS5QQdn1tdT1HL4N7tM+iz4JkKcJ545vP4VKyrtu/J
AHR4serynTX6Dd2GzkP327nPMkkfkedN3kV9drS65p0dPv1QFfXx8PXRYP+S
F0psi8/EtWrmvPIpcS+pkyKfzyuv6V+CXi5RtX/Jrpt2OR/vzObxUX3GP7A1
pKglRU0pakv31ej3DkF/ng4dG5yr+GOHM0TKCOPU2BYZp5ZCmo1TCUmTmjg1
WF2bi0I96Rusr++cJwHqSXEmru1XDv++NhT5iOvbJyVE5LPo7WF6mV2o+nZ0
tdZ+tgSyQUJ5verl/eX1CQf5iP3D+p4E9gzVs3SM7nc9VQ2De7X3rPeOZ5gQ
P9P+NppH1Vmju6rD0GXoNHT7QqmeAbEhhO4Tkja2h/Va47vhwzdU19R5cU+o
N/jZv6RlW0QPohVSPa/c1rTJuSr/4nqqGsb2L3mdmVfpnmr9wzaVJ9tsHlFL
ut7WluKb6mtUrldZJ+hnquMiu11PFSkhjFNH2CLj1FII41TiijhODWvjVHP9
RuUWleNU1krYPV2CTuPf54b4lkhIVoicFlVkodE31IvKKpWjVQ8/2j4+4SAf
8WF9/kOqNfrzAtv35DKVawoul9raEdwz7h21Ix9u43n8S33+o03fkwC63Wnq
nRcGPBuXZAXq0OCz1XdH0Df15fDpkRwvpg+Pa5twZouoMbHnldvaNjlK5V0F
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
nIZc1BTmokadx8Fc1AzGqSRzGKcm2CPjVO+FuSiSF4m5qN+rXCE2jjW5qGdc
3zIpObGPj+Q8+oeDfMOn1BanS1TpkKhH/eiEggruDfeIe8U9ux63ogl02+i4
6vq99/7atcmREgOfPZiLusLfXFRm9/hB/flTJeqo6HtJAdbOMdfUTr3XWSp3
cU09aB6v1nFZAV3pZ5xKModx6hi2yDi1FFIbpxKSJSPj1GHXfpVzVZZLWOmq
hCJr9c/e5PqWSYkR+bzKeo25O0I5TEI5Q/XvfvoIeUjHYZPKhEoknbN1jNao
rA2LLWvsveKejxTzDK7H0bVAl+V0FdXtSmenjtEGo/OEZIXIR816oT4cvtz6
9H/JxxaLnIuS+/TnrsR3tg5dp+ZGNr4puqyOpGtmJBP1vo9XeYprqnxFx+EU
lbUSdaGGUTpV/sS12ZESwzh1FFtknFoKYZxK8qYmTg2RczI5qJ+p7LJrSuc8
Cfrj3HaXTFGd3Kp//jnXt01KiMgvVY6POmVmYL6lVFT/ZksgG1UXL1V5pv18
hLysz322yiSV7umB9Z0n6Dh9UmVfweUTkb1XvWfcO57hjRItPLDQ+bjmPo/P
xDq80eo0dBs6Dl0X2RZde+2vXJsfKSEiP47gs9V3mz0/8OXq0+37wtXW12eq
9znsa2r6np6PcxfI53TNMu+UIiepfKYAa2aS/KXKMfYdr3tKJKjZu7A4Y5vr
PD6uz36BygaNTWfZeGGm6tkc0XdKmafyI9fmR0oI49Q6tsg4tRSSFKc++uhv
XJsfKSE1cWpYjVPlOpUtElWWStDXK+E0/fdXqtynMhH7GWWZ6uQVrm+dlBCR
61RWBtg7+zmVPWJjy75uCTsWq6/frLp5jcov28PXyyXx3uHe/lAqK9Tutuj4
3Oh6mpoG92zuHc+AZ8EzXdkmc/jLWGdVd6HD0OWZsW5/Lt4nDp0Xeb/raSIl
BL5afbbx3ffFvhw+XX07fLzx9fD5l99xeTb6X7BclMldIH/TM0nvaZXKsSq3
up6mptix45XYV27WNXVZJH29tm5vdzHGOPM5/HmcRz1S19SFGrd2Iv8k0c0q
96ocKai1nKDjc5brqSIlhHHqCHtknOq9ME4lLonj1KA2TpXVEvRMFvPvTlc5
oBLFsh3rrfSGIkfq/33Q9e2TEiHyuImte2RisLXmveWx7dujC/T/TxZ73kXl
CPX1qE24tbw+wtTaY+8Cerh1LA6svV3q9Xde3Lt9Bn0WPBOebV65a/RNL13V
VegsdBc6DF2GTlf/zBbTs2BiYN4r5UnX00RKBHw07E19dnRqzZr6Yuzb4ePV
18PnR3KSyu0ltsU9+nyHqPT16LvG0sj2vkSu7Geup6llRH6g8vZ4TV2o/qIT
NRWRfKHE83ijPt/RuqYu03igT6KpqsOXjMhz4v8vM+9O2PN2r+tpIiWCcWqN
LTJOLYUwTiUuqYlTw1Nr8k3If65XebDm31UFeanpKh2yYEDkDa4fgZQIkQui
ihxm1sHH6nxDf0j/3TGxfnZPVz+/TkI5TdfQe8rjI+QBfZ41g7X2uu5vDEXO
LFXe1647Z0Tm2fCMeFY884MlmkfVSdmhojoKXZ0Q6+7DdfT6u3H8Ct2HDRCS
FvDR6quNzz5QR/cejH099uGjxgm1TqhNkH8ukS2iJ9Sqak8o1G1tUnmzyndc
T09qiNyjsj0ytYaoOUTt4TFiathcj39q87hXn+c1tidU91SbRz1F5ek6eo1/
h3enKdJt8gaEpAXjVMaprsc/tXlknEoKQBynDlTj1Gq+6eY6OahaeRdq+QS9
zNaH7GVG0kDkbvOO0Cfd4ZsTajmwX3TRUN+TwPQ9uczvGn1Ta396tdZ+qq71
a9S2TtQx2et6ajIDz4b6c/OseOZJdgx8rtE3tfaXDe+zB129PUGn32T2m3aH
9j35HtdTQ0pAtbeu+mqz33ks/YPPnyu21gk1T6Z/K84x+YnHa+pzev/bqj2h
ZupYrFN5rekPUlZQa2hrDlfZGsQptp+S67kY1zyiJ9RbB/uXmLzpctXVrybo
9Af0v68x707TIp63Q9KAcSrjVMapjFNJesRxaoic0pUJuaeR8juVBYI+5rNM
LzNCxovIKVGnHDowa8S+0LFkt/7ZGVgbeySsLFFfH/c92Xn3TudrfVN+4cq4
1r6vN5TKsrjW/vq26GWNZ8Sz2hp9fXaMwQz/avShc4N99lQXoZPQzd0Jvr0q
0HnoPmwAtkDIeLjttv8w8bP66GhhgzoIQSyAmifUPqEGCrVQqIlybV9Nr6no
XzLN9C9B74/InrfiX/+SVhD5eVx7eJStRURNImoT9/g1j/JSTU+oxaYXTzRb
dfOGBvX57p07o1cJ/g7O1DusLfwpyZY041TX9tW0PTJOZZzKOJWkTBynBgvj
3FIzuSjIUC+zVbomfdD14xCPsWdYrAv7pSN6fxPvTRDs56vpexKg15m82o++
J6bmYAlqRzpD6Vg4YGvtL1Z5yvWU5A6e2T676XsyYMYEY7PXg3lUXTM6F/fZ
m6S6eO4oNVFjybVmv2mHsQWcPUNIq4h8wOyNqfbWbUYPn4lrn7CmohYKNVFy
sie2+MnB/iX6zrDE5mPkD1VecD0luSPyqMof2JpE1CaiRnGlmJpF1/OUOI83
D/YvQe+dqNq/5KZdu5r6OfjOv9F8N52s4/Au11NCPIZxKuNUxqmMU0l6xHHq
4BkQzeahqgIf3yOT4vx4+61LZPygbyzOp+6W6cHhTa6JtbJf/+6GOD/aNVP9
/AYJzfmy3y6ej5DH7N5YU3/ehb2FqHU9XcfhftfT4RyMgR0LHROMDcYIY/VY
AedRdcvomOoadG5CrIP7x6HHsAHYgj2z3d+eysQdtp/1FvjmaNM4dPEe/bsr
ZPC8clMjZWqlimiLD9T2L5mrz79R5byoTD2hWsX2kjrF1iiiVnFiXLv4XAHn
cah/CXrtmHf3bSpPjkOPz9a/u1hULwR68bjr6SAewjiVcWotjFMZp5LxUROn
BpvGkYeCoL+Z7WW2VHXyItePRjxE5D2qPyvMmY37xrE2VgW5VdSP9ndK2DFf
BorU92T7Y9sjOVeq54kHdk/hcZFv54nnge17cpzdd4mxwpjp2GEMXc8jdMno
FGpHVMegawta2H9ST/bF305hEyK7XU8D8RD4YvXJxjc/koJOoiZqjtgaKdRK
mTUVtVO/cL+mjuhfos++RuVVUZn7l7SKyM3mfdrULKJ2ETWMl7ifQzOPT+q9
vG2wf4npsbNYde7OFPT3f+rPONJ8y9dnllNdTwPxkHaKU409Mk5tCMapjFNJ
a8RxalCNU8eTi4KchRhVeuJeZve5fjziESIPmb2uvTIh2JbC+lgr6HsyTUzf
k7CyTALXfU9qzhOPa+1xLup10Y4dr7iehsKCscEYmbGqLA3M2Dnue1JznngA
3YKOJfWFblZgC7AJuxf+YdfTQDxC5BuR7a3bY/aDpKWTqI26ROJeUhNs7ZQ5
r/xmh7ZY7V/S26frw/LI7s9uj55QrWL3d1xtaxcrS2wtI2oaP+FmHkf0L0FP
nWim6tieDOKBIwQ9JdDD/n+4ngbiEYxTGaeOBeNUxqmkOWri1PDsFPJQkFfE
xg4dMm9AZIfrRyQegRqKDlkc4P3mqZTXSciLMlSj3z1F/fwaCfPueyL79Pcd
LrZXR8f8AZuzfbvKk66H3xswVnbMTN+TwIwlxnRfjvO4N+6Zs1pC6NLEWLde
zEBvn4rf+WEbsBFCGgU+WH1x1Exv3WZ1c5vU9JJaF9dU5Xheudw52L8EPTsi
GwtfqvIj18PvDahdtDWMG21NY/W88gdynMdb41rBVaaHzmBPqCz09if6c482
62o36mpcDz/xCMappBEYpxLSGHGcas6AeCWlXBTkGqntZcZ9nCQZkS8iDg77
pSu8KIN1sla+rj9/pQz2PQlko/r6t+h6/b3sfu+I88QDaxvbI56D2jq278l2
u85gTHPoewIdkfNNr5wQugMdgi7dl7HOvs2sqV0hbETkLtdDTzzA1gusM774
vRnr51f05y+T+LzyuXFfkQtVvp+hLdb2L+mcrc+6QeUMlQddD723iOxTeY2t
bUSNY3xeOc6wy2we74/7l6w3PXNM75xjVB7KWGdRa7rW1JVM0+f9sOuhJx7A
OJU0C+NUQkYnjlPDapyaVh4K8nuVpYKzSmbGdcUvuX5cUnBEToo6Zc7AoRmv
lbVys9i+J/1dEnYsjGv0M+h7IhdUa+0nqj2sVDk2Yo42PexahjHVscUYY3/G
BSnP4S9k6Dxx1RXozFzVnZtz1FfoKmwEtkLIWIj8IoLv7ZIZxhfnpaN74n3R
qK1CjVX1vPJzHjwntd8x2GdvsulfEuF8QJwDLHK762EvDahttOeVL7e9pFD7
mPJ55ea9N+5fUu0JtUjS6V/SqLxGf9dc8910kcoB18NOCg7jVNIqjFMJGU5N
nBosjXNHaeaiIHfFe0ztmvY+149MCoyNe9eEE6QSfSTHNbMqV8pg35OgcoQE
clw6fU/kBv05h6LWvjuUypLAnieu/15edD3kpQNjasfW9D0JzJij78kNKcwj
zhM/zvTECaAj0JW0a+0bkRvxjdSc/7QmFPmI6yEnBQY+tyJHGB98V866evfO
naa2CjVWPfgGvFLlBDE1WOO2xaH+JWrny2y+RK6Prr32V66HvHSIPK9yVRSf
V25rINGr/s7xzeOum3ZFcr3+nK2mf0nU1yvRDNWV3Q7W1L/T34kze7oFOU2e
t0NGh3EqGS+MUwkZIo5Tg2qcmnYeqirYZ217mWFt+57rxyYFROTHKls1Fpwa
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
unX+ZqgsUZnEONUnGKeSssI4lbggIU4dQG6nGqe6zjfVkweq35awns5SPVwv
oZyh9/+gCq6nVLbFetmF9Xa96uXJ+lf3uh56UoPIPSo7VDaE0jUrkAmVSI7R
OXvYroXyHf3fbzJrTNg5W4IJFTG1GvcVda3E2iidodU3xpXEAl2onk/63oLq
Lmxqpfler+/9amuwOWN734lt8SGxtgkbha3CZo3t3uN6eEkN8HHW160LpXu6
fV/aZn2imUf4SPjK9cZ3Gh+6JvaprnWwnlwo6K3brc+zUeV/uB5ep9Tmoto9
JyXyYZU1Zr/czQXVXfReQW/oTSrzOzS2nha/L301tkXGqV7AOJW0A4xTSV6M
FaeaayhODZHjqY1TXeefIC+rnK6Cvdk9k1QPV6ng/m9X+W38DLWX+nxZrtLf
EUnnvMCeFfHWiDX6bhF5RuXSyOxP71g4IP3qFxfqPH2u/von+/S/vUZljYTd
UyRAD9ttKs8VaL18SWztS4fMHxA53fUQk4IBneiQeQMz43XMtb5W5bnYlmBT
sC3YmLG1faPYotqosdX+rtDYrqkxudTYNHGHrbWHb9tkfR183vKh996D5vH2
2PevMr7U+NTTC6abT4jtrdshi/W5znc9xM5hLmo4iGU7ZXY0t0A6C/mF3s/V
KkepHK7vTL3Y/7RI5S9GsUXGqYWEcSppNxinkiwZK0496Pqt1MapAXI+tXGq
ixwU6gWvVMHZKX09ElaWqi5u0fu7XuX/qvMMtVegskdlpkof6kmXqq8/Sn/s
1Sq/cD01bYc9rxG19ssC6e0LzX713Y2teXKj/lmd98oyCfp6JUSd8CUFWS/P
gm6K6pdZ8+5zPcykYIh8w8S00JGzC6KzsB3YEGwJNiVbxdhYQ7a4O641gQ1X
lge2Rv869pLKGfgw68vUp1WWBNLXExpftyd5Hrc+szWS6/TPbtY1danxrcbH
XlkQ/TwB35xkYmR7Pz7ueqidw1zUcETujLBfrl+6ossKorPYo1XtCTW5T+do
tsoVKi8l3x/j1OLAOJW0I+0Sp5J8GStONTmasS7keIbi1AA5oGqcmmcvKdQJ
ol6wv0Oiznl616glvKhmL1ej1/+jcoHEvaRMPanK8forbnY9TW2B3f+Jc2PW
htI91e7JO13lQHPrnTyvf+dKMX3BqvWkqBt2eY7JfrH7CipyeIDcOyH1ELlE
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
LSrLK6qHE+N47T1tZouMU0shjFOJKxinjrDFEseppbsC53eQ3fWAyhqVCZVI
OmerHm4IsSdc5EHXKtYS+EYt8maVjaF0zh0wz3W4Pt++cq8vco8+4w6VDRJ2
zbR9PI9ReVjsc+/Rf/ZLh47LOp3fT7ieJlIyRD5udAs69qexzj0c6yB0EToJ
3TQ6ek/JbVHXGrPmmDVV1yCsRWZN8nP/DHyB9QnrQ+maFZjnWmN9h+uxznQe
9+oznqyyTqLu6RJNVD0+ReXpWL8vM2tqF3yNyl7X0+Q9zEUNR+QDKqt1/axE
n4t17qf6z6tUjlRZ1CFRJ75jL1P5eMltkXFqKYRxKnEJ49QaW2yjOLU011tU
vuf8LtK9UFd5utg6y55J6ttXqZxYmphaZJ/Ka1XWhNI9NTD1r9ukdDX68n19
pgtVjpSoY74M9HdKuEjX1Nvl4Oc8HGutzNR5PkbH5Weup4iUBOgSdKpLZgQr
6ugddBE6Cd2EjkJXjc5+v2S2+Gy8xmCtwZqDtcesQftcT1EqwDdgn4bxFfAZ
k2IfUrJeUsbXw+dv0nf9uaq3+s6/XPX3q3V0e57+u06Zo2NyUvRv/xa4niKv
YS5qCJEfRKg765HJJu80Uu8e1H93pspGlTmdElVQm4B9JiXLDzNOLYcwTiWu
YZwa22Ibx6m+X6hlRp8IuVps3wifL9RRXqkyXaWvB7X2ga21vz669tpfuVaj
1BG5MbI1+ssDUweL848u8H9tMbX21+mzbFb9XCZBb5+EM3Qd3V1nja3KPrHf
9ityhM75e1xPDSkJIn9kdAq6dc8Y+gfdhI5CV6GzpkZfdXjn3Tud29O4/buu
KWZtMbX2utaYWvsbXU9N6sBHwFcYnwHfAR8y3foU13Mw7jn8RezjjzI+P+rr
kWi26usNY+j0x8z31AreJVX+3PX0eA1zUUOIXKRr6uHRZB2LR8bQv736305U
WY1ak16xvaTOVXmhBPY4Spz66KO/cT09qcM4dUgYp5IsYJzKONX4FI97SSEe
6JmoOrlSBd+eUOv8a9d31cL1aZUFEtfazx+wPQIvVnnKtepkishP454CI+pJ
b/DT18uteu8nCGrtw+4pYtbW01UOjLG+VmUb1liZENcEP+R6aojniPyL6X0B
nTqxAf07EOsqdBa6Cx02unyrp7aoa4gcKrbWvmNxMNS/5AXXU5Mp8Bl4XzY+
BL6kvyOSxToOd3o6j9X+JSuNrzc+/4IG9Bmy3pwtPNXGPfKM66nxFuaiLLa3
7pFRn/RGb2xABx/bvj26vraXFL4Dz1d5r6e2yDiVcSrjVJIijFMZp46MU727
fi3Rk6qP22rrSdcP1ZPq/3J9h8nXY2LqDWSCShf2vq4PRV6v83O/a1XJFVtP
+obI9BpAz4FqPek/+rG+yP16r2eJrbWfJcEEjTs3qE7ub/CdCfJU3HO3IuhR
d57rKSGeAx2CLkGnnmtCD/9JrO5Ch6HLpkYfun2/J7aoa8bB/Uve4G3/klaB
D7G+BDX66lsmxL7mMU/mET78dSrrjW83Ph6+/skmdPnBuP9pRZbrOFzuekq8
hbkoi8iOqEPmR+itizxTM779YpVNKgvQS2qajuUqlc97YouMUw2MUxmnknRh
nMo4dbQ4tfAXckxxnBqJlTuq9aTw8/NUL/EsO1WecH639a9XZESt/UqVY/VR
bnWtGk6x9aQnxjX6U2yN/ilS2H3t8mO9tyvE1tovlIH+Lgnnqh7e3MSaWisX
6d/rk+7Q9qr7ouvpIJ4i8nem9yp06aIWdRE6DF2GTkO3TY0+dL2g/TKwRpi1
wtTaT4lr7cvTv6RV4FOsb1Ef0zMxkMliaoW2P9b4u3Su8/hE7Ls3GV9ufPqi
2Me38vNeb77j99k9DfIPrqfDS5iLwhjcgng56pfO6H0t6uL9+vdeH79DHdKl
44leUieqPFTMNRVrBOPUg2GcyjiVjB/GqYxTq4wWp5pcSRGv4XFqUM1FQX6v
skfs2aN9vRJWlkqAWmhTE/1/O79ze6EecrfY3gGm1n5pvNf1OpWXXatDIbDn
JdfWk/YWru/J5XdcHsn1ek9bh2rtkde/ssX1tFYOFfTcxdkJJ7meCuIp0B3o
0LwU9PHK+DuoqdFfrmuq6jx0f9dNu5zb4aB/H+xf0jusfwnWEhIZ32J9DM4r
X2pr9GdZX+R67qoyrH/JUuPDjS/fM04dPhD3mOiQhfr8Z7ieCi9p91yUyC9U
jkPf5mhpCmvqrfozjlVZhX17fWLP7UYv3peLY4+MU5NhnMo4lbQO41TGqbWM
FacWppcUcklDcWqAXNPMmjxUrSD2PDfem98z2dSTBtV6Uvmdw2e4S0VjbFMX
2TkvsLX256t817UKFBKRH6q8Y3iNPnot3OLW15vzxE9SWSth91Rba4/zxJ9J
YT2FfESqPXfXhmXsXUeyReS/Gd2BDn0kJZ18JtZxU6OvOg/dNzaw17Et6lpg
1gTTv0TXCLP3BWvG066noZDA11ifs8n6IPiipdY3OZ3Hof4l8NnGd8OHv5SS
/l6N76bSidoalc+6ngbvYC7qvfhea9a/u1LSyZf151ynslnl8IrVe1mk8qeO
bZFxalMwTmWcSpqHcSrj1NEYK051diF3NBSnBsgt1cap9XJRVdlfrSeVuJdU
TT1prhf2ch0jdk+eqbVfp2v3KXqL97ieci+w9aSnx/Wks2yNPmowv5vv+iL7
9Xeeo7JRws7ZttYe549+LaV1tFbWYi2VafFZCj92PQXEE6Ar+NYC3VmXgV5C
11fENfqwAdiCsYn9Odui2r7tX6JrAdYE07/k9LbrX9Iq8D3WB62zNfoTYx/1
ZM7zCF/8BkH/ksGeUBtVHspAd1Hn1yWHRDhTuIzn0mZJO+eiRL5nvtP2yMTo
uAz08rv6M88X20tqfodEHdNNjJF7fphx6vhgnMo4lTQG41TGqY0wVpya6zUU
p4bIJdXGqWPloEbK51QW4Ltop4Qd8+N60neqPJvx/f+njDincYXq4jF6Sze7
nmIvsfWkx6msCkzvAvQwOF2ihQcWZrue/FzseeI1tfZzxlFr34g8INWzc3G2
5xWuh554gsg7jc5Adx7IUD9v0J8NG+jr1jV1sfr6I2MbOZCtr4etD+9fomuB
bNPnvt310HsJfJHxSfBNOZ5Xbnzv5fGaOt/4ZuOjP5ehzt4++B1/tcr7XQ+9
V7R3Lup8XVMPi6bosz+VoX7eE3/Tx7vZLPSSmim2d/8TOdgj49TUYJxKyNgw
TiXNMFqcanIsWV7D49QB5JCqcWozOaha+Y3YGulpEteTLhuqJ5VfZfAMe8T2
AOjrVt++JK61v1rlZ66n1Wt27HglrifdnEvfE7lRf/bR6muPkKB3gpizHi5R
uWlX9jXI28X03A3tfs72OluBNI/IA6ZOADpzaob+vSqwAdiCqdFX24CNmG8W
N2Zki8P6l6DWfrNZC7AmkNaBTxLZFdkaffVV8FmHWB+W9hya/iWotd9i+pfA
FxufnEb/kkYE9VA9Mtn6D3nS9dB7Q7vmokT2mTqBPumOLshJR5E7QC+pI5A7
7dcxnyOmFy/6qaW+pjJOzQTsu2ScSsjBME4lrTBWnJr6hZzQUJxq+uxV49Tf
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
WtYVk7owQnpZlK9R8QyIRQWxIQCKSIxN0Vwdc++KkO7+cNMm9XW+n3kZtq3J
np2dxfKLCj61NO+eyXqek/0JU1g+6Xp4Wx6ip1k+pahziaJ5OfO9/jp+J3py
4Fl5dD//t+O8dRkTOZamTS54VYT0slc/+Z5W6Pcm6Vl2puthBhECeSoIE+Sp
oNXw8tR8MU8Nuw6VZ5mj4/uIvFkb+prrIQARYteuP7NOHK6yNCY/KSK+9Cdk
9tq3jWRfv5jl8L7vvdVE3qn0u5XEiMnsfzOyR38Wyw2uh7nlMHvt/4nn4Gie
i6Fm78gg770D5pHnWn/jX8IyhnM8zvPGsD7cGhH9FDFnQIzJi+2IDQFQRGKs
xFqOuTr2utZVkXv4Pt7Fkh3t7cE7mmVnDbbI71R0uudTJ6W8XlILWL7uephb
DqK9LF9RlF2vaHq3WfP0QZZna5jH4rqMRSwjpFcDKenB+4OI6KfI0XwvEynt
1Txfdj3cIGIgTwVBgzwVtColeWp+jlcrCrMW9Vkifa4v0eIC0U2uHx9EEN2f
j5bpXmYfcehHnyaz1354J6nUPG9/9pb670fesfS7Vm/fkxFKzjEhutv1ULcE
RPewvI/HfiLPQbrm995S2XzjZj33Wgfm9/U9mcfyhONYfwmVntWM/s5gIERf
lpirY+/nHOrrLv7d57P0FPuXyN67rQ341B3eu5a8c42U882KvaQedT3ULQHR
XYpSpykaN8b0L5G1TvfXN4/yjV+vy1jl9ZLqMj71AHLf20zOl5b+K2mSWufV
rocbRBDkqSBIkKeCVsfLUwvFPDWsOtR/kqnTZmjCftmbDMBgEJ3MeeCU/cNZ
X/ZY9qFy9u3fs8zMsi+f7vW4uKC2771VY/2gfU+edz3ciYRoF8vHFfXM5zHP
me/wDbz39pvDZ71v/6ITs0zfE9mjfyyLnP1tO773nQExZb/oEgCDITE3Q+N1
DLatp1Jb+DTLpNL+JZtZXmnSHot5t7yDdUl/6bEsZ+s1OyB4TP+SSxQNnalo
Ucb0lr+1yTl8omRdxjTWD9aRNtaV0xy9O73Cv/cglpEkNc5FroccRBjkqaBZ
kKcC0IeXp+4f49WMwqhFnU2yjzVXIFqhv6sBMBjSJ7TYy2yDxRgv+1QPTpHK
jPN6WhxPej92UD9f3r30O1i/vieTlOyVffvtvOthTwTS05joekVtazkOd5ix
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
xIjeuHAfj8dClq6USqWGqwyNUDmWtgiK3Jvco9yrvucHMI+988g6rXV7XtGn
LmF5w7XpgYRC9BzLYn5v8mI56lF9tii59kypX6TZX42Ivk9NDzM+Vdap/xzz
2DuP3+XxWG9qipQRn5pl+bVr0wMJBXlqFVtEnpoIQZ4KbFIpT9XXbpaLzPq8
zARSnWlSHVofx7B80vVtg4RC9H2OEdNUV4pUdrRXk9/E8lTrxgh6mZ9/A0s3
S9soHqOlLAezrI+4HGzuNTvK3LvEtZdbeB6f8nSZfWp2DGkdb9M+dSLL37k2
PZBQiL7OsXusjuGZ8d6ae4ntz7ewLT5j9rrpd5DcWG+99yER8Jl+stbka7kR
Zi/aKaQ2PLnB+Xg6m8dHeQxON3lCdhT7VFnnwH41RfId//2uTQ8kFOSpFWwR
eWoiBHkqcEHFPPVKllUcz2eQ6siRGsN6eAbLconzJPtGF7A86vrWQcIgekWl
6UK1mDLqdNa1iSydWVLpKayPB7BczrK3tWIEncPPPFS+23crSs3nMVrHcqvr
qaoZuVdzz3zvbd3mWc5psTnc6+ku63B6qtFp0W3R8cUsGdZ3k7ftdj1dIGEQ
PauydDbH7rSO4RLLJaanppsYr2P9f7SOPU7ZO0XRcfzMPSwdso9rEcu7WHa4
nqqaIdpmalKpuYraOxWN4Ge5tHXmUPvU5/mZLza9IzKTzLfS6azbp7IskryB
ivv0HnI9XSBhIE+tYI/IU2MvyFOBKwbLU2kBqTbO1YbxP1/A8geW/2I5iWWa
jvE9BaJTXd8+SBhEW9UEmqqOpL4YcCn//+Es7R38/jSHde8gli3JjxF0LT/n
GPlun1OUnq70enC6Rm3c+JbraaobuWe5d/0MKX6Wjpx5tmtbYB63GJ1NzTU6
LLp8aYl+H+nlskTD2ad+yPVUgYRB9EU1lcaqk6mvf6zEdIntbfINeL63Pmhb
C9jiFfycsoahq5196mwem9UsWxzOTuPI+zCR9A0/gJ9lGr8DZhVN4me7Odnz
eNFtFym6hp9zNfvUWZyvtpMaxbp8raffb/L/HlLsraXXRq11PFMgaSBPLfGp
yFMTIchTgUtK89S/eDUnyVO7WdaxPCPxvUQeZDlA/3eJ8TNZJ293/QggIRA9
oXJ0ulrBunU79ff9e70+g6KXOTlHaLG3jvaO5MWI3r32nWlFWVkTu4LlPJWE
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
GxFb0TazI2BbZNvWNi62Ljav17Z8UPsC0DwSm0yMKp5XzrFrpollgc5jX/8S
icE6Fp/mxWYbPvVj+jt+hp9zKcs3XA87iDhEV6oUzdP+7XZLOrp3yhR1Df+u
VSxzUqTa5TvwVJZPB2yLyFNDJQp5qg2Qp4J6KM9TbfhU5KnJoFqeGtj1XzSg
z15pntpMDapcHvXWQvfbT3oimT3WzVyylusgKjmncSn75qP5V+50PYWJxOwn
PU4N2E/6i+b8Cz3CP+NUlmVUyI6mvJwnPo915V8s+c1SWUxydu4wr67+O9dD
DiKK6IboiOjKEks5aCliG3Imr9iK2IzYjrahR5q0xcepQv8SsXnstQ8DiVUm
Zi3tO6/8IBPbmppH2Wt/LEn/Eom5OvYu92KxbZ8qe/azNJqf8RCW/3A95CCi
mLx3pWqnLnWwAz19gn/nWSwrWCbLPpPhOidpuj6MPNUuLvJU2yBPBbVQnqfa
9qnIU5NBtTy1qasvT+3ts1fMU4OsQZWL7KGWvdS9+0lFly5ieb7O+/8/VHJO
Y493TqPsb9zqespaAqJbWdaZ7zK5ob37SafsnVKfP3mNBpzTOI71Y6sDn1mU
h6h4dq6snb/Y9VCDiCK6IToiuvKQg1y0iNiK2IzYjtiQ3qMvNvVafTYkttvb
v0RsWn9zXadtHYSPxC6ig1Sz55XrWHqRydM4xqqw++zVIrd636H42fS6bwAq
Id9fUzRdDWVdecahvu70vulLP94xWdbbkSzHNFYfRp7qDht5qiuQp4JaKM9T
XflU5KnJYLA8Vddk6rn656n9++xZkj+R2VM9nEr2k64m00vq9zU8w7Vk9vR3
tBUoNdM7p/FylldcT1NLIb0NzH7SVQ31PaEt/GcP5Fg6h/LtHWav/QUOfWWp
HENydm6Hd3Yu6uygP0QPKXM2bkdho8N8tEj+7be17YgNiS2JTYltiY3VZIvo
XxIJJIaZWFZyXvkYE/P85lD3L5EYulr3L5HYqmOsjT57tchqvo826jbxgn7p
eqhBxCC6g2W56qCcPq/Ztb6KyPuT9JJawNLTwbY1luV8Uqc+fKq/T0WeGgnC
ylMl5roGeSqoRnme6tqf3rh5M/LUBFAtT/W9fk+learus1fMU/9ksQ5VKq+S
2WM9YD/prSx/qfAM95Hsz1bUmS45p/F0lsdcT01LQ/Q0y/uV2aM/xewnncHz
9IPK/oXu8L4xeuc0yvyvc/wdtFyk5+4Ikp67/Dx0oushBhGD6ATWjcl50ZG9
EahFFXnGsyWxKbEtsTFta3cMYovf4/8mtqr7l4iuH+DZ8tOuH6WlkZhmYpt3
XrnEvIUmBlacR4mZpn+JxFJV7F/yaoR86i/4Xobo7/gz+LnOcT3EIGIQHaUy
NF5/O3etq6XyCt/P5SwrWWaljH1pn/nFQWwReWokCTJPjQrIU0E1yvNU1760
KMhTk0G1PHXA9RcqzVPzpX32XnVUgyqXH7PMp7L9pKfw/f679wwvsKyjkr32
SwpEhyuc0xgt+u8nHd23n/SXxr/I/+q1fMupkBlr9trP5nm/K0I+slSkTttJ
7Pv0PuRvuR5eEBHMuv9lBdGNyyKUl5Zyp7w3eT5VbE1sTtteqS329i8Zjf4l
EcWcVy6xbknfHv11JibqeZQYKbFymY6der7nezHVtf+sJGfwfXVQm8ldoGvA
g+jvWRbrfsyfj6juPsb3dTqZXlKT0vz+L2c2ydnQ93i2iDw1FjSTp0YR5Kmg
EuV5qmv/WUmQpyaDanmqvvry1N4+e8U81XX9qVzkvL6rWUaLX814+0lXktkX
OopKzmnEmryoQ/QFZfopLsjrHgnS//M9Jm9LTzPnNEqdfnNE/WOpTCLpuTsm
L/uRcTYoMGdHr9M6MTmiuWkpm73vpmJzYnv63Un6BIpN6v4lbKO0hp/pi65v
FQxC/z0m3nnlo7zYuFL3L5GYqWPn1RH3qXJe2Sj9HX+ifh8EgOhllgNVjobr
HreuddRPvsH3eCiL9AEenfP2jKwl01MKeWpsqCdPjTrIU0Ep5Xmqa5/pJ8hT
408Neep+qe0U89R9Eag7VZO3yJzjJ2v5s21UoPaMovRkbz/0uSy/dj3koAbM
2Q0XK7MeeirPY1Zl2qkga/Jk33KU9o5Uk21UPDt3IfvCz7geVuAY0QHRBdGJ
W2KQowqvejYntic2KLZI6WmeT71E4QyeeCCxz8RA8amTlcRGjpE6Vsp6jSc3
bHDuL2uRT+nv+Gn5hsbyVdfDChxD9FGVojnaP+2MSV4gNdVr+F5XscxhaU9x
jpCSXmjLkafGiFry1DiAPBWUUp6nuvaXtQjy1GRQlqcWvDy1UMxT34pAnake
+WeSPqfE/3cG1uTFGKIHlTlnc67Kkdvz8RqV5VoXh3hn5/7G9ZACR8jciw6I
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
lD6s/ah7cr7aj3wPU8fg2u096L3gnnBvHs8TdzKO14zXPQngu9W6J7U8DX6t
Pm/PgCjP8zHxD2K0PTt3KHphzZr6eBzbZ9tYH8nG+B2i60s8FyfOK7d718Zr
ST3me5g6xtYveX21fglqukQyWoz6JR2P48R55WYv6Xz14XPr9MIb9Z9RX1dk
UanfgyPuqdepVX5z7bXUqdSphbRGOrX2Z6hTSVbU6NTwhTX5JuhUs590jQQj
QxKifsQF8XtSs807z2sC6B9C0kbkEvWvw01+/kaRifPEByTsW6WxHXtH3i7m
XWHf67eTGFGtezKsMaByeFDUuifj54njHnAv8XnivvvXyRg+EvusrXsSwJer
dU9Qr8+ejYux/V++h4mUEMRqjdkmdt8Zx3JTE2rIxPioWr9k+77t3udK1nb2
rWebPWtm7xr2sGEvm9nTdrXvYWqLuvolqOESyUK9p0t6ZE19yNZqMWvqqN1b
ij2m2Gt6h9o2853pDO2f5/oeKlJCqFPr5iN1auGNOpX4JNapQb1OlXvUXj6x
nxR7ns07pzInrlm3z/elkxIi8qja8dGALAhmyPh54oEcJaG8UP3xzt6IC5Ni
xDf1vrfjfWjs0V+g829LaPdjfELt9pzbv8R7R/Sace0z43vZ24Pj+O963y9Q
U1+GT8O34ePwdfs8/Ljv6UdKiMgPTc5CY7eJ4XH9EnsG9cttrPc9N5zPxTvt
Xq/4vHK7t83sx/hUDtbMJPunCDWURTajZout3YK9a/t6cBw/q/f9HLu3FHtM
4d8r1VaYc56WqX3H9/QjJaRsOlXMO4TWOv4M6tRSGHUq8UGNTg1qdGqgnhjJ
mNon1J5h6i2ElX6sVRvVdvu+bFJiRN5vdHalT/XkquKcfZt5jNA+kENQ96Qf
Z+uG9vkJ+/SPCnNq9hkP14prxrXfwHEcP1tXfdv4OJ4p1ecJyQqRd0Q4T87E
cNROeqbazZyL8n7th4PNHhPsx6iupzk3rKnLbf2rdXrtn+E4ygfH95hEQzPw
/X2/9tMbfU87UmLKpFPTyEWNfxZ1aimMOpW4pk6nhkan1rZfi32vHbUIzH7g
H/i+ZFJikHc3foZ9B6dJ9JK7XuJ9Xc6Tmfdo56re7lPdHdfIzKPh2nCN5j3n
Sxnbaw3nWsG3jY+rr+NsU0KyQuT7dk1FDD+Lc7He5I12Te2roCaG/7Wz6ZoK
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
NkPwbtQW9ckP+L5sUkJEPg6dHc6QgfC56m9HqM2sqB8uUb88Sv3yheqXt/dO
jJC9dh7KTLWBRYGde8/VPrrd91C1DK7VXrNeO+5hZnxPe3toHNVnje+qD8OX
4dOb1LdPM2sq6vAdFcL3CUkbkb8zz+WI3S9Vf1sDn+szsd3OQ8T6r/bQXPyi
2PwN8jj9S7Rvtqq9QO0u30PVMvb7w2epbYpkcF4ks+J8zAM9NI574nzqVokG
FqlOUL8+Tu1itc3m2Wm+9s9f+B4qUkKoU+vmInVqKYw6lfgi1qlhvU6trJZg
ZEjCpfrPV6gFsa1XG5CF+n936O/9xPflkxLxuc89oT719Khflo6hZkeVq/X/
L4NfDkjYNypjsk3XyvPV/qu8MWLn3p2RnK73OBt7Y2cGUlmvc+547Z9rPI5Q
d+DazT3gXoZnhDLHPgfjXn33d2axXX1U3qimPgvfhQ+vVF++TiZ8F74Onxc5
OXrooSd9DxMpEYjRiNUas03srnJFXCcDtbo11psas2av2v7yrqnysN7fqWLz
NkOoJ7TRxBuRGz2OUHeIXG3GVyrrUNMjkrl6b2eVdwzNON6n93h2vKauUF3Q
L9Eq9eWP1fj3s41mwPemK9V+5HGESNmo16lVv6ROpU4tqjXTqVWoU0lW1OjU
YH1Nvgk6dY7aWWoH4Is1tkfsO9AVOVx/9G2+b4GUCJHL8T1vOFMq0Qdq1sAq
F+i/myf2zIvK4RLIdl07L5fooqsu8r6WpxoXLon32o8MhlJZrfPsWO2Xy9Qe
9zAq6YJ7sPdyTGTuDfeIe72kXHrtvBvOM74JH4WvwmfhuxfI1PuEhoXPw/dF
3ul7iEiJEHkrYrWJ2XumWVPPimM99jbJRrUdaleWay6aNfWCmppQlbXaL8eZ
eFMGRB5We3Nk9hhiryH2HB5cvvo18rje09vjmlBrVQeMSLRIfXf3NH79Kf13
R+M9f1PD/FUeRoWUlXqdWu+n1KnUqUWxZjq1HupUkhWxTg3GdWqNfb/un2vt
6VhnZWZga5l9zfdtkBIgss88HwzKvGDrNOtglX36306N86GD8+L9pNjXfGPx
Y4TcrPexprp3ZNmYfR/2TO2XbzocCTfgnuy96T3iXnHPuPebSzCON8Z77VFn
T30Uvnq62sPT6NaqbTXPTfMC+4y8z/fwkBKA2IwYrbE6OqnJmopYf2K8pmKv
kxwZ7336ZAnm4of1PlbE9Uv6VtiaIPI6tfsdjoQbRL4RoYaN2XOIvYdYU1H/
84slGMdr9D6eZmtCDc6VaHZcM+KxJn59tv63Q82z00FqdzgcCVJW6nVqI3+l
Ti0HvapTG0GdStKmRqcGJzXJO01nD8Z5/4ogF/5S37dCSoDIG9Sf1gbQmF9p
shZW+Wy8X9TUPVkmY2Zf90vU7i5ejDB7DnbEe0cGsc5v1th+atQL51Xauien
2u9acO+z4r64r4DjeHfsg0dbn4RvHq4++tkmmrVqd4l9vsIcEDnP97CQEmBr
6642sfrBFtZU7HHCXifsecLeJ7PH5OyCzsVvTqpfon1xpNrphapf0inYcyhy
kt2DiL2Is+K9iQ8VcBxRE+o0U78EtXhMTZ6j1Ee/1oI/36c/c6zJBwxrXzzV
Qc+TslOvU5P8lzq1HPSKTk2COpWkTaxTg3Gd2qa9VnBWyWBcy+xm37dDCozI
l8z+ghEZDp/fwnpYC94bRU2zkUEJUeOsaHVPUNvD1PjAvvTKuniv/dUZ9XR+
qal7YvfoF6juifw09rlj4jp7g7bO3tUtaNVae55533QktOd5fcn3kJACI/IJ
fJeLGB2d0+aaij1P2Ps0Mmz3QmFPlNkb9bP8z8fR/aMT9UuGZmkfbFA7Ue36
jHo6v4hcafciYk8i9iZij+IF+R9Ds6Y+oNd63nj9EtTgierrl7TCn+jPb1QT
Waj2kYx6mvQC9Tq1HX+mTi0HZdWp7UCdStIi1qkhcknndJCHgj2hZmuZ4R3N
U3zfEikwOKO6T1aOLUx4574RwYED0bnxu3pDszTOb1DLed0T2a3XdxD2jvSH
0jc6Ztf1i6NePg/A1q+7KIrrnoyZvkEf7c7xOKqPyVPU1Ofge/BB+OJVF7Vf
G2K//h7mgM6FAHOCkE5BTNbYHC3vYD0Fj8V7oFBLCnuizF4v7JG6JsdzcaJ+
CWp8RNX6Je9974GUe7c4YC+iyLl2byL2KGKvIt55+3A+x9HUL7lMr+84U78E
NXei+TJ9/ZJW+NWll0ZPM7nVAe2DddGBA0HKPUx6hXqd2ol/U6cWnzLpVDw7
tQt1KkmLWKeaMyCe6DAXBXuPVGuZ4V3N9/i+LVJARD6K/RPhDOkP39ah3qxS
V/ckkCMllGfnq+6JfCF+rrPnietavjW0NT6+kVKPFp+auieh6aNq3ZMv5Ggc
1aeMb6mPwddmxb73/Q41atXeivf5dS5gTohc53soSAGx78NsMrH5fV2uqdgL
hRrQ8XnlZq+U2TO1J0dz8RN6PYdW19TlNu8if6T23ZR6tPiI3GWepc1eRexZ
rJ5Xfk+OxvH6uH7JZlNjJ6rWL3mkSx++Rn9/i3l2mqf3/79S6lHSS9Tr1G78
nDq1HBRdp3YDdSrpllinhuM6tUtDjB+U+bpWbdd/fND37ZECcemlvzL7JwZk
cbCqy7WxFpyhc5jEe/SXa6zfZt+jlW/7ixHyoP79E6t77ecG9iwK1PQo7nni
WVNT9ySQoTl2jz768EGP4/jt2Je2Wd+Cj61VX7ulS31aa5gLA3LQGOYG5ggh
rYIYjFisMdnE5rTA3ijskcJeKeyZMmsq9lA94HkujtcvWYDvxKJeqV/SKdir
aPcsbrB7GLGX8XQxexu9jeN/6DW8OK4JtczG7Q3qa59P0X+R01ohfXrfB0dl
rFtPsqNep6bl99Sp5aBoOjUtqFNJp9To1GBLCnko2J1xfr8i2EN8vu9bJAVC
5B1m/Yb/3JTiGlllt4zXPQkrazTWV+uePOY2Rsi5Ep8nPhxKZW18BsWVqd9v
WampexKYPkRfnut4DB+TifPE1ZfgU9XzxNP+WzeMv296hPrKbt/dTwoEYrDG
YhOT78xgTcVeKeyZGh7RebDO7qXCnqqzbz3b7XycqF+i68L6yNYvuSb1+y0j
2LNozys/1u5lxJ5GD+eVy4/0b54/Xr8EtXSiTuqXtMK/xe/3DQlqiL0w9c8n
5aVep6Y9D6hTy0HedWraUKeSTol1ajCuU1OyZ0ttLbOv+L5NUgCwfwJaeEhm
B9szWCer/Obaa6OzxNY9GZqjcf4ICeWpbuqeyAf17yyv32v/erUfZna/ZQV9
ZvvO1D2xe/TRtx9yMI44T/yp5p31ED4EX4JP7d25M7O/ud08N80ObM2b7/nu
flIARL4cYY3RWBztynBNfSTeOxWfV272VJm9Vdc7mIvj9UsGdB1YFdk1Vf99
D9cv6RSsKyKvsWsq9jZijwn2Ot7kYBwn6pegdk5UrV+SJa8376Hg2Wmx2r9l
+rdIOajXqVnOCerU4pNHnYpnoKygTiXtUqNTw10p5qFgqGW2QLAf/5AxfudE
WgEauCJrzHq5N2MNClD3ZIfYuicDizXWb9VYvyubuidyp37uJonPE18c2D3V
qNVxV+b3WXZq6p6Epm9nxn19ZwbjiPPE4SPqK/AZ+A586GsZa1LY3liXYo5g
rhCShMgLNAaPmli838Gaij1UG6SultSL1L6SwVy8zeYt4voleq9b1V4WsX5J
99jzyndGZo8j9jpWzyvPYK+Q3Kif+wxTvwS1cqK06pe0wg/1bxwnOJN8yLy/
QEgS9To167hPnVoO8qJTs4Y6lbRLrFODcZ2asuHdfVvLDDXu/sn37ZIcI/JZ
873BiAyFL3ewXtaCuiejYuqehH2jMmb26L9ebV/3MUIel5rzxPFdwcagV88T
z5qauieB6eu47gnGoOtx3Bf7hD1PfAy+Ap+5zoEWrTXMDcwRW4v5c767nOQY
kY+Z/IzG4OhCx2tqzXnlUd8qu+fK7L36UQpzcXL9kgg12UWeqfZJp/fYC2CP
o9nriD2P2PuY4nnlslc/61W2Xnr/clsjZ536zGcc++pf6t87wjw7ob5Y751J
T1qnXqe6jP3UqeXAl051CXUqaZVYp5ozIC7MIA8F+0O8dvbLkjGRp0ef+9wT
vm+b5BSRXVGfLB9bIp2dKZoGl4g9l3R4RMLKOgm6rXsiF1T32uuaXFkTVM8T
Z02/7Ni16xfRRN0T7XP0Pcbggs7iPMZ+/DzxtRLAN+AjlzjWoVXDHsDF5n3T
5WOYM4RMB2It9K7G3ugQxzq0lup55cMzdf4cHu/B6uK8clO/ZL6pX4IaHBHr
l2SPyCPxnsdtdg8k9kJ2cV65PKq/e3FNTaghWxtnt0c/PUn/9kHSr/e4Jrr2
2t94uw6Sb2p1qo/4D3OlU++993e+u7u02Nr3bnSqD7AHkDqVJFGjU8cOiXNG
WeSiojgfG9cyC0Uu933rJIeI/L3alnCG9EV/7lGPArwfWFP3JJDNEsrJ7dU9
MXsOVmOvfR9qbgT2u4HXqn3f6731Euhr2+dH2zHAWGBMbmxjHHXMzdirD8AX
queJ7/eoQ2G7zfumfWbOiHzId1eTHCLy14i5Jva6/k60nvtl4rzyQejtLfGe
rHbm4gfG65dE0jdq8yJygdpDXu+tl7Dnlb9c7Si7JxJ7Iw/TMflUG+N4tf78
CaZ+CWrgRNX6Jb75R72Go8z3pnjP7s2+L4fkkHqd6lMDUKeWg6x1qk+oU0kS
sU4Nx3VqxrZNUMtsTnwGww983z7JESKPRtgDMCALg/Vtrp2iPz+dNfu5VrlL
f3arjNc9CeQojfWoe/LlxjHC7Dk4urrXflFg12DU3OB54r6YqHuiY4ExmRmP
0d4m43hXXONGxxxjDx+AL3zFs/6sNZz7jDljzwp71Hc3kxxh9e1xiLkm9uYF
7L3CHqz4vHI7D1+ZMBfvnFS/RO/rSLXnR6xf4g/shbR7IjdFMjgvauW88pr6
JaYm1Eyx9Uu+niP/fJFeyyHme9Nlav/p+3JIjqjXqb7jf9WoU8tB2jo1L1Cn
kkbU6NRgm4M8FOweqdYyO0x98hzfXUByBN79r8jhJpe/p401tFEeKq1cVBXU
PVkmpu5J2LdKY/00dU927tUYcob+uzmCmhqhVNYHPE88X9TUPQnMGGGsdMww
duOxveY8cYw1xhxjf3WOtGfV9sTfiWLuiPyx7+4lOQIxVmOtibn35EiXVsH3
pea88iG7R8usqdiz9ejEPDPnUE/UL9F72hhhn7/Ijb4vn8TY88q3272S2DM5
b2otKfmO/rtXx/VLVkg0o1/MntHrU/TLdrRAM+6KvzcdkRkR95WQWup1qu/4
X2/UqeWgW52aN6hTSSNinRqM61RH9mIT44dD+279F313A8kBIt9SOyYalpnB
SS2uo810Zyu5qE7yUeAc/b25YuqeBJXDNdYfL3bfyOVqS/Ge84DG9tUB7sfW
1vhpR3+HZMdE3RMdI4wVxmxpPIZ/p3a8qWkTYIwx1ufkUHPW2tPhjzp3rM99
y3f3khwgcnuEGKux1sTcvPK4XttLBOeX2b1a2LNl3q3532qXqC009UtQSyOy
71NfHv3sZ0/6vmxSh8iP1S6MbC2pUbuHcqWO3fvUrlDbbuqXoLaNOcuxlRr6
7eaU2tUDzcD1rTO/h3fwbmnrd0k5qdepvuN+M6NOLT6d6NQ8Q51K6qnRqeGL
HeahYI/H34X2yQr1ydN8dwXJASJnRhVZbdbTH3aoUV3logDOKjVn64qpexLI
YonPE1+mPn1UKPKiiHtH8o89WxdjpWOGscMYLrZjWt078u2ca07YD2PdiTmE
uUQIYqvGWBNrf3Xppb4vJxG8i3JkvKZi75bAbP2SyNYvOZP6tQCIfD7Cu0Rm
DyX2UmJNXaJr6lz7vfgz1B7s4vumdn++03j/gP78cYJ6+4OID239Likn9TrV
d9xPMurUctCqTs071KmknlinjkGn/txxLgr2dkEts35dC49Uu9Z3dxCP2JoT
R4UjMhj+UQpas9tcVDva9eP6M+aMiArq8m2I7N6RG1q4a5InRP4xHrsNOpYV
M6YfL4DWrLVXC943HQytxvz/fHcp8YjIR0wuQGNs9McF0Ki1fEDseXuVCs4y
26T2LBMjSLFAjVqREyKprFOtKdFKaW/vvf2M7vJJ3f7+u/TnN5lnp/kRz2js
bep1qu94345Rp5aDRjq1SFCnkiqxTg2RC/pjD3ko2JNqqwW1zBYHIk/Vf/Uz
391CPIFnjX5ZNrashTW1le87Xeaifn/vvdFBiPFysPrxs825lKSY2DNFd5qx
xJjeenZn5yL7NMwhzCWRU313J/EEYilyAAOyyMTYovFgNRclh+h9vMT35ZAu
sHtMcE7zYpOL6vxzOn+Xudt3oU/R31kqyIuujlhzt3ep1am+43wnVqtTSbGp
1al4Bika1KmkRqcGq+OckI9cFOxmse9si2zQ9fEy311DPCByldpmc47jezrM
RTX7maTfb+VvNOMMk+MfCu0eks8mXj/JNxhDjCXG9KUF1JyYQzPN+U+b1Sf/
1nd3Eg8gluJ701lxjC0aJwlqSqBmNOpJ3uP7ckiX4P0Lka3mHb03deiPaeai
2v2MT+jPH22+N52jv/v6tv8+KT71OtV3nG/XqFPLRb1OLRrUqSTWqcG4TvVs
x6sNyaxA5Fj9x2/77h7iEJGH1Z4SDcr8YEuL62kretJVLuprYuvtVuRQ9d/X
tXT9JP9gLDGmGNuvFVB3btZrxpwS2WHmGOkdEEMRSzWmRicUUKPeItWzdtbr
fbzV9+WQlBB5cdQnK6P5OrYPdZlP6uzvd/du1CsE7/Hj2WmJ2tc7ugZSTOp1
qu/43q5Rp5aTep1aNKhTe5canRqckIM8FOz7Uq1lhnXyLN9dRBwicpGO+zqT
F70zxbW003empvuZZj93rMmjzg7s2U73p3LtxD8iP4gwphjb4wqoPe8cf55f
p755se/uJA4ReRViqYmp3y+gPl1r9Wlkzxff7/tySEqIfDnCe27DMhLtLGAu
6l79nW2CGqcj+vvP6OgaSDGp16m+43u7Rp1aTup1atGgTu1dYp0ajOvUnNhZ
Uq1lhvdH9/juJuIAkbur2jTclfI62m4uqpV66PV8ROzZJCIbdR3981Svn/hH
ZLcZW4zxRwqoP58tYuaW3ed0t+/uJA4QuTWy7+0PmphaNP7SPOujtu5mtb/z
fTkkZUQuVP251jx/3Namf3abi0rjMy7R3zvc/P4itRs7vg5SHOp1qu+43q5R
p5abep1aNKhTe48anRqelYP8U639WlAbErXMDmYtsx4BNWn7ZDRYoOO+PyV9
2W4tqVZtOlCHFTXXcKbFvff+vuPrJ/kEY4qxxRivLKAGxZzC3OqTQ3RNPcN3
dxIHIHZqDDWxtIgcZDTAMr2P5/i+FJIBIj+O7F6nedERGeSikuJ3t7moR8XW
lFgoA3j+6+gzSLGo16m+43q7VqtTSTmp1alFgzq194h16tjSOPfjO/9Ub++U
6neiW0KRD/ruLpIh+E5RZKs5x/HCDtfPTvNIaeSiLja+2h/iLEqR/93R9ZP8
I3JdVD1v9C0F1KEXjPvpVrV/9t2dJEMQMzV2mhj6zgJq0jPFvBsd2XejP+P7
ckhGiLxXbVPU6lklE7/XXo3HTr5faoUP6O9uNs9O2Ef6Fx1/Dsk/9TrVdzxv
16hTe4N6nVo0qFN7h1inhuM6Nae2QZDDXxDYWhGP+O42kgEHDgQ6tqdE/bJk
7JAu1s2sclH1P1PPI1LN468YE3lRx9dPigHGGGONMX+kgHp0VMTMNcw5zD1S
PkR+EqH+56AsMDG0aOzVa54jqBuxWu/j1b4vh2SMyDN1TVra1vt7eclFgefo
7y8335uujPCuFykf9TrVdxxv16hTe4t6nVo0qFPLT41ODTbkIN/UzD4v42fo
BCKX+O46kgEi71I7wpyNe12OclGNfqae06V2f/MdHV8/KQYiX4ow1iMyHD6v
gJoUc8yenXuE+uy7fXcnyQDESpw710kdnjywQ8xZupE9S/c+35dDMkbkZrWj
zHtwr23RX13tvW+FW/V3jx73WZ63U0bqdarvON6uUaf2FvU6tWhQp5afWKcG
4zo15/YMs4bODOwa+k3f3UdSROSByJ77MCfY1uV62exdpm71ZqPfv2M8V3qY
+ueburp+Uhww1hhzjP0dBdSl9rlpTnyOzgO+u5OkCM6Xt7V1Z0bPLKAG/bhU
a+tuULvU9+UQR4iciRoh0Twd+/tb8Ntuvj/KIjf1R/rza8yz00FqX2nrd0m+
qdepvuN3u0ad2pvU69SiQZ1aXmp0avDMHOSZWrEH1eYL3i1dFUCvkPIgcp5Z
K7Ef454Uc1Fpf//Z6Hc3Cc4bn6t+uV3/24+6un5SHDDWGHOM/aYCalPMtTnj
2vSNvruTpIjISxErTcx8sID6c5WY2rp6H0+L3vveA74vhzhC5F61Y0wO9aQW
/bbTXNR0v9utTviO/vyxarNlOGJd6HJRr1N9x+92jTq1N6nXqUWDOrW8xDo1
GNepBbE3CGqZDYQiR6l90nc3khTAe8LVd0hfnMI6mVUuqtHvXi3Vd0g3qU9e
0fX1k2KB94Yx9vCBDxRQn75IxMw9+77pv/vuTpICIv8aYa+TxsrovAJqz7dL
9bySI9U+4vtyiGPsO/uHm3c4PtVBPqqVf1//39L8zuoy/Z0jzO8uVPto279P
8ke9TvUdt9s16tTepl6nFg3q1PIR69QQOZ3zcpBfaseeENSGRC2zpWMiz/Ld
lSQFRJ5vaust1nH9zbXXpvB5bnNRy6RaW+8ZXV87KSYYe/jAsgJq1L07d0aY
ezoHA8xFUnxsbd2lJlYWjcf1mhcZf1yu9/E835dDPCDyaIRzalBzf22Kuaik
vfutfF4r/OrSS6MT9fcWy4D+/uFt/z7JH7U61XfM7sSoU0mtTi0aeDakTi0X
sU4dWx7ndnznl9o1nPc7Mp7ff5fv7iRdIPL3Eb77HpH+8G0prY9Jeac0c1Hn
S+17ejelcv2keOC82Wp+/00F1KpvNWtqf2TfQ/mQ7+4kXSDyTsRGEyPfV0DN
+RLji9jfhO8/b/d9OcQT8RnP5v24v2rBj9vJRaX1/lMzrtHP22qe/+fqZ781
1c8mbqnXqb7jdbtGnUpAvU4tGtSp5SHWqeG4Ti2Y7Vc7TVBHQqJK31ysrfqv
X652j++uJW0g8j2116gdHUnfghDj+XS1fSmsj1npzPrPmqhfdkgAHyS9DXyg
T0bNvueHCqRX74/nXj98W+eimZNmbn7Pd5eSNhD5RhwLj0JsjAbjWLm/QJrz
61KtC7FG7+MNvi+HeEbkubouHRwd5CAXlSaYc29RQ33reWav6dIIdTGoU4tF
M53qO263atSppJZ6nVoUqFPLQZ1ODSfp1ALYH9QuVlugNjRLAjlMbYH65Ix+
9csV8dl6l6jt993VpAmXXvorHaN3RKhNKn2jgcwYiGSejuMaCYZmS4Czc17X
5froKhd1quBcxxnx/mVqzF7HrrHbjE/sLIhWPcc8K+maqnMPc9DMRcxJzE3M
Udlt5izJL4h5Im8zvmdiIWIiYuNhJlaamHlxQTTnMWLOy4nseTn7fF8O8YzI
Z00eYESGolcl+HBSrHeVh0ItluPV1lUkGpmhnz+oNtRHnVogWtWpvuN3K0ad
Smqp16lFgDq1+DTRqQFyOlWd+occ5Jsa2RVqB6uNDEpYWa1+eKxe/2Vqj6rt
VlukNjIcSmVtfD7E5dGBA4Hvrid1iFytdkIklcMDGZ4ZyHwdtwvUHle7Uu04
iSprJRgZkhDfg+7uYp3MOhf1Gamejbtefe4tXX82KQfwBfjErNhHfOvQRoa5
hb33mGuYc5h7Zg4+Hs9JzE3MUcxVzFmduyRfIMYh1pmYh9iHGLgojomPxjFS
Y6XGTMROE0OvyLH2/LBUa+seYe6LECByjq6ph5r35fY28d+sckutcqP+3VPU
cE7V3GG9joPUXqP2MHVqkehEp/qO542MOpVMR71OzSvUqcWnDZ0aIMczrlNz
ZF+M4/rMikT9y9UPj9ZrPlPtW2q17TG1M9Tm4DsonFd6RIiaWCI3+h4GEmEo
96g9R21zKIPzApml43S62iN143i/2rlqOs59K2RsRp9Ea3T8b+5grcw6F7VO
cDbu/AD1VUV+2vVnk3IAX7A1d+cH63OoUTGXMKcwtzDHzJp6rp17tT9n5ibm
KOYq5qxsCe0c3uO7i0kUmdhmY5zGOsS8OXEMfKxuHL8Vx8yjTQw1sRQx9Y4c
6s+Vgr33B+k9nez7UkiOEPlBhPfkhmR2tCOHuaiv6t87Q+1otaUDqqkX6jU8
Ve3LdXOROjXXNNOpk8axiU71Hd/rjTqVTEe9Ts0bzXTqpEadmmua6dRJbbJO
DSbpVI+GPaynxvn8wQUSyGYJ5VS9zj1qQd091Lav2XuRmZVI+pcEtk7fGfqR
X/U9JD2JyH1qZ0emplf/sjGZ0RfJ4To+n20yhmh3qT1P7UgJBxaJyd3jTJoH
2lgzs85F2fPGVbPI+7v+XFIu4BPwDbzjcUVO9OkD8RzCXMKcwtwyc+yu5tdn
5irmLOYu5rCpz3e2mdvEPSJ3RzambQ1lYHFgYt3RNvY1HUfETsTQzSamGj9A
jH04Jzr0QrOm4syxrWr/5PtySM6w+6U2RjPVTz7ewGdd56JQ3wJ7ClAT6hB9
ZhqYF6+VNyTMRerUXNFMpzYdxyY61Xe8h72bOpU0oV6n5oFmOrVpo07NFc10
asMWSK1ODZH7maRTHRr2CV4gtr7F8AwJK+v16o7X67pG7YkEX6xt16mthF8O
hNI3Omb3SV8ccY++G0QeV9NYLcdGUlkdyMhgKEt1PK5uYwx/p3a92olqG+x+
0rnqF2e1uGZmVQ8iOHDA1FHtF6x3z07tc0m5gG/AR+ArV110kVdNijmDuWPq
7OlcMnPq+vb0spm7mMOYy5jTmNtyWfS5zz3hu6t7ArvXHjEMe+01piG2rbSx
ru1x1JiqsRUx1sTaCzzr0IfjmN8no3p/L/Z6LSS/iDw9GpBF0aoc5KKu1L+B
d7QOV5s5U//mcrV3tDkXqVO90kyntjWODXSq71wUdSpJolan4tnGJ410qvy+
jedG6lSvNNOpLbffSK1ODZALqupUF7WkUCtiBfL4AxL2rVI/3KbXcrHaT9q4
h/pcxvh+0hH1y3Xqlzv0T13pe7hKjcg1ak9T2xDI0CxbYw7vVv66w3H8uTTe
T9r0OiTKQpu+WnCm6GB8hsOnU/tcUi5EbjHfs8JX/siTLsUcWSZT6+yN7h/t
+DPNXMacxtzGHDdz/Rrf3V1qELNM7EIMQyyL65d0PIY/iWOrxliNtYi5JvZ+
2FNOapeY2rpWv8h/eLkGkn9EPhrhLO8Z0h+9fRpfdZGL+qR+9nPUNqvNGxJb
Awp7Dv6ri/lIneqcRjq10zFETG2kU33EfupU0gr1OtUHjXSqefbrpP1aqFM9
0EinmlxMJ22yTg2QGxrXqRnYN8Xuszc1oZaoH26VUF6mf/8bHV5/fZuyn3Rz
vJ/0k76HrlTYvfanQSuGMrDI7rVHXvv7KY3j98TWAa3ZT3qE+s0XHK6f90n1
vHHk21/t7O+SYoJ3hOEr+K7nPoeaFHMCcwN77cfr7L3GzqE0Pt/M6RPjNRVz
HXNeXqD3e7vvLi8ViFH43nJK/ZL9KY0jYuxL1baa2Gti8NFxTHYFfNXW1l2n
9/lmZ3+XFBORF0V9siJapD7zWJ2fZpmLwvp9dqxVl/arv+L8n+1qt6c0F6lT
ndBMp6Yyjk10qqv4T51K2qFep7qimU5NpVGnOqGZTk2lTejUEDmiSTo1Bfu5
2ulqs9UG56ofbpJQnql/75NqT6Z0D7Xt84J3aGv36EfcT9o9Ig+onReZ71/6
lwdmv+5a7edbMhjDJvtJH3Kwhj5NcN74rPi9T/oNaY6tQ3Gs8ZkTHWhRzIHq
XvvxOns77ZzJ4u+ZOY65bvbo69w338G+0awJpHNE/jOaqF+yxO61R+y6LaNx
vFE/+2S1TSYWm5iM2PyrSy/N/F6hRQdlXmRr6z6S+d8jxUbkS+b9uREZjl7o
IOb/DOu22rFqh1bs/JDDxNSNyGQuUqdmQjOdmsk4NtGpWesA6lTSDvU6NWua
6VT9f+k/N1KnZkIznZp6Q05oQqeGyBlVderPO8xBPal2icTnNA7XndPY6T6u
dlrtftK+VfF6jT3jP/M9tIXioYeejLAPF+fbSGXN5HMam9WXT6P9j9gaYtPs
J82Km+K1077v+WeZ/R1SLkT+1PgMfOemDHXouTJ9nb2sda/R3Zjz4+eV61qA
NUHXBqwRpHUQg8brlyA2dVi/pONxnDivHLHZxOhLMlxTr8L70FLB92lq78vs
75ByIfKmqCKHmZzp3Rn65zX62U9V24DYPyPWjRdLdN4N52U/F6lTU6GZTnWy
pjbQqVn9PepU0gn1OjUrGulU80yXZQuEOjUlmunUzBtyRBM6NUAOqapTn2wj
D/UJfLeEd/L6JewblTFTEwr7CR9ycA/191PdTzo8M5DK4eqXT424n7Q1RK6P
4nMaAxmaY89pPEvtl47HEe+1v10m7Sddrv71oQzW0tWC88YXmn3Hu3b9IvXP
J+UEvgKfge8cmoEGha/D5yfV2Xu7TDmHOms7+9az7RqAtQBrAs8rbwtbv0Rj
EGIRYlKX9Us6fnZ6KI7JWFNHTaw2MfsTGaypqBHRL0v1vnem/tmkvIj8SG17
NChzzbv6abNHP/M0tS1qCwfFPr/gLKcfeJiP1Kkd00inIlY5HcMmOjXtv1Wr
Uy+99Fe+h4AUBPhKrU5Nm2Y61Wn7pVCndkEjnerkPaLaNlmnjiGnNK5Tm9i3
xZ45Ys5pXByf0/h8ST6nMet2v0zsJx1coH65JbR7yff4HvJcgrqyOOdo0jmN
O7Tvvu55HLGf9OVqR03eT3pPSmvqO6R6Ni72G/9DKp9Jege7fh8Zwod2p6Q/
79LP2SQ1dfbU980c+Ibf83vMWoA1AWsD1gisFWbNYE3q6ZioX6KxBzGoWr/k
fs/jOHFeOWK2id074lieBvh+dEQG7fvdrIlD2kTkXWqbzHt1adXc36ef8wax
2mFFn2pc1F7dqvYZz3OROrUtmulUr+PYRKem8fnUqaQb6nVqGjTTqV4bdWpb
NNOpXtuETg2RW5qkU2vs1yIT5zTOVj/cGJ/TiH1//8/zPdQ21RqyTur2k75B
bZ9vF8gF9nvI86OJcxr7QzlE7HmbeWljYmuNoeYY9pPOm9hP+otduzq+d/wu
6qT2yfIxkeel2KuklxA53fgQfGn/aOfn2D0uNXX25sV19p5lfd+nzp6iu3GG
K9YIrBXj55VjDXnI91DkAsQWG2Nq6pesE+/PvVPGEbEaMXujieFR9bzybsAz
/zyzpq7S+z8rpR4lvYbIM6J+OShamcJz02X6GceprdFnpqE58dr1vpzNRerU
pjTTqb7HbtI4NtCpP9y+vePPxO9Sp5JuqdWp3Tw3NdOp5lktL406tSnNdGpu
GnJJEzo1QK6pqlM1SJq86kH47nNIwsqauCbU5Wr/x/uVT98m7ScdCqWyenw/
6b33/t63S3jDntP4lEgqa+05jQu1fy5R+4P3EZu+VfeTbp/YT7qwi1pSLzPf
3w/FZ+PelnLvkl4BvgMfgi+9vMPvQS+I99qP19nbbn3dt7ZuqruxVmDNMOeV
6xqCtaSHzytHLJmoX6IxBrHmIO2fK/I7jtv3bbexG3v015iYbmJ7p9+dnoJ6
ETLT1huQ/0y5h0mvgH0VeK9uhgx0HN+v1987Of7ufs6I+vgStfPVHsvvfKRO
nUojnep7rJqOYwOd2slnUaeSNKjXqZ3QSKc638fVavuDUKfW0UynZl4PutOG
3NKETg2Qe0Ktx0nnNL5W7PmKRWhT95OqnWz2nvcSVuc9I8rsnMas24/VLpRJ
+0lXt1mX72txXr8iqHP3+gx7m/QC8CH4Enzq621ozhv1Z1fX19m70Pq4bz3d
kubeL9OcV/7Mntujb+uXnOy9fknH44gYjlhuzys3MX6j+uVtbaypt8R79Sty
uKl/SUg3iLws6pNR8+zzcBt++BX92RepHaW2eEDscwjeVbmnGGvqNPX5qFPr
dKrvMWppTW2iU1v9DOpUkib1OrVVmunUQjTqVEMjneq8HnSnrUanDiySQLZI
KM/Vf75dsjmnMev2XbHvfM1UG1gU7yd9kY7PV3y7SqaI7FV7Fb5vDMfPaUTN
hK94H5HOGvaTojZZvJ+0ukd/bwtr7HbsLZU58feOfA+edIfID833DPCp7S1o
zb1x7RL47HidvRdYn/atoTvS3VhDsJZMnFce2rVmr++hyRSRL0c2dqB+icaS
mXFs+W5BxxExHbF9i4n1JreEM5ofbGFNXWdq6y6w9S/lcQe9T8qMyDfMnqxh
mRHtasH/fqQ/c77aNrWV+L4UtVc3qf1LQecideoUnep7TDoaxyY6Nel3qVNJ
mtTr1CSa6dRCNurUKTq1cA05J+hUV+c0umg3SM1+0hU1+0l/5Nt1UkXkUbWL
47328TmNy8TNOY1Zt+p+0qfLpP2kZ6j95tprp+2Pj0r1vHF83/jXjkeDlBWR
v1LbGMC3PtpAZ+7dudP45qQ6e0+3PuxbM6eiu7GmYG0ZP698W7z2POp7eFJl
cv2SFRP1S24oyThOnFeOM5qj+eqv5zbRrpeP19bdovYhhyNByozIW6KKrDc5
0S808b8r9b89RW2dPjON4LvvFWp/WZK5SJ3qfQxSGccGOrXRz1Onkiyo16nT
gWenRjpVnvT+1Nd9o071PQLdt8e9X0G6DfNqt5R2P6nI1dGUcxpxXuLvvPd8
uu0XMmU/aaO6JyvN9/cHjeFdxV6uw0DSxe7DPkl9a3GwchqN2ajO3s69O73r
5NR1N9aYKeeVX+17iFJhSv2SRTaG+O7z1McQsf4ytWN0TV1tzmw2Zzd/YJo1
FX7dLwdrvzzXw4iQsiLyU7Xjo0GZHx0xjd9h78gz4ppQc4fVV1H34jVizhP3
PX9Sn489qFN993nahljfSKfW/2ytTiUkTWp1aj0N60H/wvtTXrrtd9KTOrUU
ucQyN+wnPUNtttrgXPXJTaHdq17M/aT2nMZdkT2nMd5rf6raPu89nW37gdo5
Uq17EqDuyWG6rn4yXnPfar6/7w/t++4f8zxKpGyI3GDeg4WPvS3Wl/C9w+I6
e30rZMzU2TvH+qpvbZzps9O+eM2ZdF75rqio55VP1C/R2IAYMTuOGQWpX9Lx
ON6r9/gKwXnlUf8y+74+nv3vjNfUs2xt3cjW1v2c51EiZUPk/agZZN4ReV/s
c9/S/31lvH9kab8+1y9Q/zxB7c6Sz8Ue0qm++zrTcWyiU/HfqVNJltTrVNBM
p5a69ZBOZStQu1um2U/6Sh3Xb/l2sZYQ+Y7aq+1zQf+yMXNO43q9nz3ee9Zd
q+4nRa26LRKixhne8T9J7F6TPlk5JvJi30NFSgp8Cz42P/Y5+N54nb3TrW/6
1sJOdTfWHqxBk84rf7VZq4oA1n4bA+rql9zdg+MIzbbJnOVsauruxBllprbu
odo/5/oeKlJSRJ4d9cuy6GD1tUvVjlU7BDVM5qo/rlW7tsfmYol1qu++dTqO
1KnEE63o1ELWg+60lVinshW04VzDd4o9A3jGQCh9o4E9o/qUApg5pzE05zTi
nbw/lt59J++3alep7TB1T4KBIQn7ZMTunZV/9710kJIicofxMfhav/qcbNAV
ZYf1Rd/a16vufrvUnlce2nqsvtfLVuyYyMQAxALEhHf37jiaM77+Wuwek3US
9Q/gmWl2ZOPjfb6nHikpIv8KjR2NyKDZJzoTtVcxF98o0fZ9273PC29raol0
qu++9DqO1KnEMc10qnl26sWGZ+US6VSTy2Arfvu12PMO8d3b4MyoIgvCAVkQ
5NVwfTIwOzTv5L1Qylfbq9P2E7WLxO4Lrozq2nKO7zBASg58zPgafO5i64O+
9W4ezKxJWJuwRulaVYg1Vdd+EwPO5hiOj+MPtT9eH49jZY36+yW+pxwpOfge
v4KaZBX1uWerfZvzcXw+Flyn+u6/PBh1KnHNdDqVTQqvU03ugq187W8kqhwk
4aBI9Kwc2wj2SiyUUC7x3mP5bDg3oW+VxvjLfIcAUnLgY8bXllFnT6u7L7Fr
1UgO1s1mhjUfa79cyXGcdhyhfSprI9T0ISRLRN6ktlKfDTgXp52LBdSpvvss
j0adSlxRq1PZpmkF1KlsJW7X2HdnZ+p4Rzm2RfDHQyUw722zTW02xgeM8SRr
4hgfMBfVQG+/065VWLN8X0szw5qPtR8xwPe15NGYiyKusLmoVZEMci5OOxdr
dKrva2lmtTrV97Xk0ahTiStqdSrbNK1Gp/p+vm9mtTqVrcSNuahyNMZ44gjm
ohL0NnNRpTDmoogrmItKmIvMRZXCqFOJK5iLSmjMRbHlqTEXVY7GGE8cwVxU
gt5mLqoUxlwUcQVzUQlzkbmoUhh1KnEFc1EJjbkotjw15qLK0RjjiSOYi0rQ
28xFlcKYiyKuYC4qYS4yF1UKo04lrmAuKqExF8WWp8ZcVDkaYzxxBHNRCXqb
uahSGHNRxBXMRSXMReaiSmHUqcQVzEUlNOai2PLUmIsqR2OMJ45wmYsSnfft
mne9zVxUKYy5KOIK5qIS5iJzUaUw6lTiCuaiEhpzUWx5asxFlaMxxhNHuMhF
dZKDyks+irmochhzUcQVzEUlzEXmokph1KnEFcxFJTTmotjy1JiLKkdjjCeO
yDIX1W0OKo1cVLefw1xUOYy5KOIK5qIS5iJzUaUw6lTiCuaiEhpzUWx5asxF
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
TiWOaaZTe7qVSKeyFbj9Qe1CtQVqQ7MCkQ1qx0fYgyDygwLYtRGeC0Q2BjI0
JzB7KF6r9lvvPeu2/VztMrVjVLeOytiMAQkXq4adgXcZZa2O6Tm+QwEpKfAt
+Bh8zfic+h58EL4InxzdP+pd+zrX2liDsBYNztW5tym0a9RHc7BeJtn347V/
R2RiAWICYsNFvffsJI/ofb9FbZtE/cvVr/skOkj9e0RN+0btT3xPPVJSRM6I
+mRVNE997RS1rVhbB9TvFqmdofZgD87HEupU333q2qAFqFOJD5J0qnmG6qX2
WymlTjU5DbZitSvE7tUeGQylslp98djI7KeVn6t5L0/Whv1ftSsj5LylovFs
ZDiUxXpfl6g96b2Xs23/rXal2g6N5eskGB6RcL52ygVqv1N7vnl20v6Qbdo/
t/sOB6RkiHwhgm/Bx+BrAL4HHxyeKYGpL7jD+qhvHezkeQlrDtYerEFYi7Am
6dpUNHbt+kUcCzQmIDYgRhxsY4bvPs7azrvhPFM3Ae+hVNbo+jlsz8nYLfbe
j9f/HZJZkf1u7lu+h4qUDJGb1I7S5/OB6HWxz12v/3ui2ka1WSPqm0vVzpfo
JXe9xPt8yXxNbaBTsUYVjUY61XcfOxnHBjoVUKeSLKnXqb+LfW86nSpPeH+q
y7Y9KQ11qn2W9v083479vKFOLV0b834F6bcvqB2hNqMvkv7l6odH61i+Ru17
OfCtbuyHaq+PzP30rRiTGf2h6LOE3Oy9x9Nvgdj9vc9R2yzh4DwJZmknnK72
SE2nPKa2UK1PVo6JnOY7JJCSAZ+Cb+FZ/VeXXjr+7x+JfRE+Cd+EjxpfLWm9
DLPGYK3BmtM3OmY19evNmlRkbEx4jV1TESvwHjdixxdLOo436r2dYuPj0Bxb
d/gstb07d47/zPf1n7FvqiKHar+c6XuISMkQOSXql2XRcpk8x/aPjkaX6b87
Vm1NRdfVOfGa87clnYtNdGqRaaZTffd5JuPYTKfGUKeSLKnVqT+veT5qplPN
M1bZWhOd6v/5vRtrrFNL016idrf3q0inYT/lqWL32g8u0Ni+ORTZqeO3Ry3M
gT+lZXepPU/tyFAGFgfmfpHzvs/7CKTTsL/3bMFe+6h/iQQzVZdu0Bu/rUGH
vE3wDnR/aPpDrvUdFkhJEPmImWPwrUtqdGUtnxfrm/BR+Cp81vjufeXQ3WZN
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
eeLhwCIJZordp9zNe6XN7M9lvOau+ssHfYcNUhBEPmB8Br4DH8qCe/Rzsbcf
cwBzAXPCzA1He0zMnB+vX6JrgalfgrUhPZ3dC9gY9Pxo/LzymXGs+rajcUQM
RizeYmKzidGI1fskm7//BrOmDiCGqN3ku/tJQRD5C7UjdL2rRNdn5Js/1s+9
UGwtqUOwz2RevMZ9zNFcbKJTSes006lOxrGZTs0A6lTSCVN0agbWTKc6aU10
qv/n6SJZY52aeUOOaEKnjtfZq+rUTm5o2v2kr5fs9pP+Qu0MqTun8el6KTeq
PZmD8S2iVfeTPiuasp/08YzG8Udq54s9T3yFjM3olxDfjd6Q8c3ifdP1grNz
F8bvcvbGWTWkc+yZFDuMz8B3sgZzAHMBcwJzA3PEzJUfZaO7zRyfUr8EawH3
B3SDjUmITRsnzivX2LVz785sxvG7+vl/JNX6JSYmr49jdNbPasv1b/TLUr3X
U3x3OykAtpbscdGQzImOceCfqHn6ArG1Jw4akKiCfXLPkszyw5jjjXQq6Zxm
OjWTNbWZTs0Y6lTSDvU6NY26Js2smU7NpDXRqTJR3prWlv2/hjrV5FqyaJN1
alCrU7u9Ifj8FWL3P2W2nxS11XdL3TmNx+mfv1ztFzkY0zJY7X7SdYEMj4SC
+p+ocZDWftLfysR54mslGB6REDVLd6s96ehG90i15u7h6kOX+A4hJOfAR+Ar
8JnPwoccgTmBuYE5grmCOYO5k6rWxtzGHMdcx5w3Z6Jd7ewey8611/4mjlHH
ZXZeeV39EsRgE4sRk7N+xq8a9vXj/RbVh2pX+O52knNwtlFFDjP7Pb7p0E9v
1L/1dLUj1GYP65xZovaadM8aaKRTsRaQdGikU1ONjQ10qiuoU0k7TNGpDuzJ
eE5Mp1PNs14arVoPehqdynrQadkvGupUk3tJo01TD7qqU9POm6IeT8P9pH/o
4h5wvt9hYs9p7FsxZmv6naP2gxyMYRntYbU3R1P2k368izGEP6NmwjME71eG
g3MlmK1/7AyxZ+e4vsmTxNTcjfcYf9N3GCE5ReTrEXwEvnIyfMcx++M5grmC
OYO5Y+bQjd3pbjOXMacn1S95s5n7JH1srELMqjmvHDHtU12OI/ba4/yYjSbm
RtX6JVdddJGz5/uq4Z2TQZkX2Wfv//Ld5SSniNwW2dq6w2Ztc+2ne3fujC7X
v3uc2mEVO2/MWvjuLudiE51K0qeZTu1qHJvpVMdQp5JWmKJTHVszndpVLqOJ
TvX/nFxGa6xTO27I/Uzo1El19g5kfEPYQ4291FP2k97V5j1Me07j6fonbo94
TqMLw35S1DbYGkr/ksDsz8UezL1tjuO31F4pU85pvNvjzaHmLmqkVQQ1717q
O5SQnALf6JNVpp4efMYXmCuYM5g7mEOYS2ZOfas93T2pfgnmNOa2nKH3+Q1v
99ZL2NiFGNbdeeVyu9j6JUeaGBvV1i9x/WxfNeyDmm3W1LV6f2/03dUkp4js
0jV1RYSzx5AX8uWvP9C/f47a0Wor+yTqWxCvjZ9ucy420akke5rp1LbGsZlO
9QR1KmmFKTrVkzXTqW21JjrV/3Nx2S2MmunUttqETnVSD7qRfUxtlXSwnxTv
9p0l8V77WeqHG9ROiOw5jb/LwVj1kqEGV91+UnyP2Mp+0kfVLha7135UxmYM
SLhSP/Q6/zdlDDp0RAZDW/vuk77DCckZIv8awTdmyED4OvhMDsDcwRzCXMKc
MmvqxXauNdPZ4/VLMHfH65ecFLF+iR8mn1c+M5B5Nua19Nw7Ub8EsdXEWMRa
X8/0tfY8wff4I5H9/vJO391Mcob1+yNNXeY/y4nP3q7XcbraFrXFAzq3Fqmd
pvaDFuZjA51K3NNIpybV52uqU3MAdSppxhSdmgNrplObtmo96Gl0KutBuzbk
WqbXqYn7LyfrVFNnb5VYnerrhqr7SRdJ3X7Sy9UOTHMPV4g9p3FkMD6n8Vj9
mMvUfp6DsellOxDZPfrYT7q2+X7SJ9SuVjth4pxGnPuNcxp/5/9Gxg1nRtqa
uziL4Vm+QwrJGajDDN+Aj+QNzCXMKcwtzDHMNcy5abU25uh4/ZK1cf2SK33f
Qs+zaxf26CO2HWvPK0fMW25jYP0YXnTVRTZm2voliKUmpu6WfDzPVw3v6qN2
RJ+MRjijhZAqIo9FyNUMyKLosJz5LewavaYT1DaqzZqhc22Z1dOoxzZlTW2g
UzGniT8OHAga6tRpY2MDnZo3qFNJI2p16hM5eK6q2u/iuTSdTjXPiLVtSj3o
CZ0q8n9930qPG3Iv0+vUKe2A1OpUU2evqlNd1YNOssekbj/pERLKKTKxn/QO
qTmncXlg99qfqfYt35dOm2T3q70uMuODmgjYT7pGx+1mmTin8Tliz2mcZ89p
xHeOj/i/8GntfVKtubs5FHmv77BCcgJ8Aed0wDeugq/kkEfiuYU5hrmGOWfO
SN1jdbeZk5ibk+qXnGvmMMkPNsadGY3v0a+eV35HPI6IkYiVR5jYGVXrlyCm
+n5+n87eKjiPvF/vZ6vaP/ruXpITRP5UbYNZr27Oqe/uHx2NLtNrO1ZtTUXn
G76fR72Mv43nYhOdSvJDM51qxrGZTs0h1KlkOqbo1BxaM51qnhmb6NQcXD5t
3Brr1PF60FanTqqz95j/C5/WblPbIDX7SY9Ub9wWv5M3uCCwa+0pEd/Jy7Ph
u6db1E5VO3JiP+lRYuqX9C+TMZzTuEZ/+BP+LzbRcKbOoMxX33tKxNrNRORH
Ec7ogU/AN/IO5tihaphzmHuYg7JVauqX6ByVnXpPn/Z9qaQJIh9XOzkyMRBn
FiMmHh2vqUtszETsRAz1/cyeZKOC88gP0ns50Xe3khwgsjfC96pDMis6vgD+
i7on0NGoJbWiX6LKfLE1dGdP1akkv7SlU3MOdSqpZYpOzbm1o1PtM6b3S6ZN
MeRkGurU8Tp7VZ2agwtONJzjt1RtoF/0fvCe82GRfSfvnZHdD+b9EmmJ9t9q
74/M+ZqVdarRhkMdT7N3BLUg8vJOXpKhXoQ9Oxdnhb7Zd4ghnhE53/gCfOKL
8JGCgDmHuYc5iLlo5qQ5+/b9vi+NtIjdY1I9W1dj4uCgGU/Eyisl/8/wVUO9
CPs9/hFqf+G7W4lnRF6pa+qh0Vz1i+8UyI9v1Gs9RW0T/LkCf54T2TPN3mnm
KikGzXRqUaBOJbVM0akFsCfjOddIp9pnSu+XSUs05Gj+f/beBN6yojoXX+fO
t0d6oGl6oJum57mhmQVEBG0FRxA1oKI48ARFfUiMkjYa/EvA5IXnhCGEmEhU
wov6cEQNPCUIDSgxiBBoAQEhLbZAWqa7d/3XV7XP6XOHPsO95+yqXef71u/7
QZ977zm1q1bV+vY6u1YN06lYU9OyTg2ggU3x68o+pQh88Y3Ke3w3iRwXHzDu
mcpVdjw/479BTfMEsTV3U1dz90bfYYbwBJEfG/gAfOEl8I2C4X9LeU1dpXy7
8kHfTSLGAZG7jXseepn6ophvSHHu38vcbH1xinHfMd3pu0sJT3Dfc29C/WXz
RwX0438R93xUv0zW6zjOQKcSxcOYOrVgoE4lgFE6tWAcS6cG0CyyaY7WqQE0
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
TPmA7+4kJgiRGwzuNwak37yigP54o7b5QMFekgG9ji2+u5PwgFE6tWCgTo0L
o3RqwThSpwbQJDJXItdjdWpS1qk+G3SYYH2cor54sP7zrgD6h8yfDykPx71H
skJfSP03qCneLuWzc10+lSg2yuvj1GxsiwbMIcwlzCnMLaLz4GLpwYitNsb6
vpdvlt+Usk5dZnDuClFsiJxsumSBmaFj+lAB/RHP7i+2z+rtY3AuNdF5GKlT
iwbq1LgwSqcWiLjHG6lTA2gWmTsrOjU5zGND/l7wLD6eG12l/vhnAfQL6Y+X
Ktemk6TLXOS/MU3xCeVSwZ7nPuP2mZ5r+F1+8YAxc2O3yY4lxrRo+KRgTe2y
c0nkf/tuDuERIh9VrrIx9otSrPt/1LlC3aiSTDLu+f0Pm099aqfvLiWahMjd
yrcb1Ffqkh77bJFv32qWX9E2bxLcN03V63iX7y4lPGKUTi0YqFOLj7F06hMB
3Ac1w5E6NYAmkd5odWpS1ql5N+A55X6CenqzE5Gj9aXHA+gT0h93KV+CmrVD
c/SF3/tvUF2q49ozAPZWDvRLKpOUA/1GSktSt7fkf/kOW0SDwFjZMcPYYQx1
LDGme2djXBRg7mAOYS4RnY1t23AGyNGoa2pjre97+kb5AUF9aDH9A2JkUNk/
oPMSz0e9QPk3vruVaBAiFxr7vHvXIiMDvUYma5zsded3X1Igf0R9oH2kW69l
f3P55U/67lbCM6p1alFAnRoH6unUJID7onrEvV21TnX3ft6bRXojcj9WpybQ
qc/l3IDzpHzO6Abl3wXQH6R/ft24Wma96Zv8N6Ymv61cqRzslrRroQzJgXrP
9EblS8RqbumbqmFhdYqzoET+xXcII/YAjI0bo9WJHbPJ2RhiLHVMMbYYY4z1
dzH2AQNzBnPHfef5dd/NIQKAyBXK9Yi15nwJ+/7/y4J9ULqm9ui8W+Tmn7xF
eXS2pvZON66e+YnK7/nuWmIPEPmS8oV6v7TCSP8kI1N17F6tfK1yk96DzNMx
7nLPGt0UuE/+hbZvjeD5vBl6TZf47loiAIzSqQGDOjUONK1TA+ZInRpAk0jv
tDo1RU7o/Bw/+EEl6gZ0yXxdB1+tLz0XQF+Q/onzPN+kum+x3QP9U/8NGkW0
CftaUcukZ7Yksl5SOUnjwQ3Ksv1EeZhyUslID577Q771NfrnP/Yd0ogMGAs3
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
oZYU9lZhj5Xda3VV63MZtgbHvoL6JajNYcr1S7Zs2ZHLtcYM7Gl0exs3ub2O
qCWF/OLVbRjHi/V9D9P7peW2Vo4p1y/JA4/q5xwpyKH2GDwPRhD1QJ1Kjo+d
qVPdvZ3vvifDJXJDVqcOQac+1YYPwZk7u2uZ/XUA10yGyy8q16eD0p2em/OH
j6h7ksh6SeVV4s6QnqjdKtXniWts35C62hw3B9DnsbFS9yS1fV2ue3JrC8YR
vvBKQU2cFD4yOfOZVj5L2ggxNzBHMFf4PT5RCy7mrrEx+GL4T47AnirsrcIe
qx48V7NB+VrljRPPZcj3xeW4XP0S4+qXvEX5H7leYycAexzdXsf1bu9j+bzy
e1owjtfo+7xUudbWxjHD6pdMqM0yJveEz4o7x7xLpuvvfWRCn03EDepUcuLs
PJ3qv8/JcGl1alrRqW0inn/ulb0Se34wc+vkmNxhsK+iR2Yn++kLz3tqyNeU
S6VS9ySxdU/epfzPccSEx5QnKqcoe6clLh/7QuNqcjwfQJ/HyufN7ron2ufo
+ynZWDw2jnG8J/OBTc4n4BtLM1/xcYGYG5gjmCuYM9/61i7f8pwIEC7WHobY
a2OwL1SdV273XlXOK3+o+VyGbJfq+iV6fWtNuX4J0V5gz6Pb+7jS7YXEM2+n
jS8fValfstHWL7HxdqX6yLdb5Kd7ykXVyk9hX8l86dLXFijva0k7iLhw+eVP
GupUsjXsLJ0q8tsA+pwMjxWdmqxq84d9V1wevyTYc/y+AK6dDI8fV65KJuk/
rvTcGKyhW6VS9yQtLdFYn9U9kd81EBOw//s8cTU2BvpTKaGGnztPXOSJAPq6
U/h7U1X3JLFjMTsbm0b26P8uG/NDbO2bBL5QPk888XxxmCOYK5gzIn/uW6IT
AQKxVmOujb2Iwb6BPVfYe9U/oPNpmdg9Wdib1XD+Ynf9Ep3Py42rX3KZ78vq
KGDvY9V55W5v5N7ScC0p+Y3+7vli65d0LbI1cEylfkkLMZ5cFOr44jm+PkHN
sde3tD1EHKBOJVvPztGp/vuaDI9WpyYVndpmHq/sl4GsltmNAVw/GQ7vNFiH
+2RKstl/Yyp8XHmauLonfVM1zq+WtFz3RIb2EBe+Ktl54t2p3Q9u/f3tyrt9
X04H85fZGFTt0c/qnoxpQ1J9nniKsZ+a+cLj/i+mwoNE7Jxx+vFO3zKdCAgu
xh6ImGtjbyhAHYmq88rt3ix5idi9WnvMX6B+Cc7mG+zR+bvIzWPR1+UB35fT
scBeSLcncpPbIznY5fZMfq/GOKJ+yZF6v7TC1rwx5folY7//2PmixtvXfC4K
eJv++wBbU2K28vvj6hsiTlCnku1lZ+jUAJpEBsOKTk2Pz+lDt4v7TrRLFqpP
nmz47CfpmCrPMCVZYtfRW/03aBRR9+QwqdQ9SWSDxvrX6Pr/46q4gD0H+J7f
nieOZ1KxR9qdJx7AJZCWlbonqR2jydmYVZ+RjDHF2OoYY6wx5hj7n/hv/Chi
rmDOYO5gDhFEGYixGmttzEXsDQ34/gt7sjC/uueI3atl92z9bHcuQ26R6vol
ek0blK8zqLVBhAF3XvkJxu6VxJ7Jci2p7VXjeK3++2XKdWJ6Z7g8JOqX3FXD
L1uZi2rm57/Qfx9s19U+g+fuCKIM6lQyH8atU909n/dmkd6JHJDVqUlFp+bE
d0m5lhlq4v1TAH1B+ud3Db5bHZC+9GT/janJzwnqSagPd0vatVCG5CCNBR9U
nqHEd/x9yP2vSsrniYs847vJ5Cg+Y3bXPdGxwphNz8YQY3mQrWkzhDGen415
AI3eI18jYueOq938Xd9ynQgArgbFBsRacxb8JGB8Uts3R9xeLezZkoPF7vey
Nc6nKntRS3qN8jjlNb6bS+wB2Cvpzitf7vZQzhRXu+RsKdcvsbVt9tex/koD
PtlM3fF6f9/sz7fqa6sF906oR/a5pj6XiBPUqWS+jFunBtAk0jutTrVnQJyV
84fvUu6r7JY5QyLH6ks7A+gP0h//oNxiumTeEPY3P+a/QXWJsybLZ+v2D0iq
90upDPSpBl+i6+xB+ivnKR/23UyyLh/KxuogN3YYQx1LjGl570g7zhVtNTFn
MHcwhzCXiM7Gzp2JQWztlr3NPPhIAfDk5ZebU8V9d9o/SVwN3YF+1M4w7rn+
j9qawUTYQL1vkbOM22OyyO2pnKr3IH1iZujYfqBJf/SVi3pUXztSubd068+X
m+3bn2/qs4n4QJ1K+mGcOtXd+3lvFumNyP1YnZpAp+7y0AjUqJxk9+OvTkQ+
GUCfkP6I71LXpYPSlf6x/8Y0xbuViwRrq+ptu3fk9cptvptFNs1blKfaMcRY
LtYX7/HfqKaIuYM5hLkk8gXfsp3wCJH/T7naxthPwz8KhNvFPSPVJf3GfX+K
5/lZB61oELle+SqDfXtd0mXW6Jg+NA5fbFUuaqy/rfe+X9DXNwi+N52mv/OB
pttOxAPqVNI/49OpATSJ9EarU5OKTvXEdYJaZlOzWmb3BNAvZP58RHmE6ZGZ
CZ7b93U27nhZrn9WkkWJq2Ey5LtJ5LiJfcun2LHE9/f3+29QU8TcgTbBXMKc
wtwiOg8ulqK27lQbY4uGW6RcVwLPQ73Td3OICSJ7lsTsrWOa7Nw5zvdoXS6q
kdrl1Xi54ExyfG+6r/IX42o/UWxQp5LhMD6dGkCzyNxZ0anJOs+N+ZFyimB9
PEB98l0B9A2ZP/9Ex3+FPcfxav+NaZovEpwLOSmxZ1vLz3w3h5wwf2owlhjT
4/w3pmliDmEuYU6JfNi3hCc8APkbjak2tiLGFg0btc299jmUQ5XbfTeHmCCq
auzYPZjje4/W5KIaPUevGj/Qnx0oqHMyqL/3inG1nyg2qFPJsBiXTg2gSWTu
tDo1qehUzzxJEOP7U3eW6A99N4fMlbcZ7H/GenqE/8Y0zW9I9Xp6vu/mkC3j
Byu68xv+G9M0D5dq3Xm7bxlP5AiRHxh3399vXgF/KBg+L+W9+6hT/he+m0O0
CDijvCRL7PNuPxmHX7bqLL3x1kL/H/p7y+zvz1Z+o+k2EMUFdSoZJuPSqQE0
icyNFZ2avsJ/YyxRP2CmYB/z/CF85yTyrO8mkbkQtXXfqGvp4mSavnCn/wY1
RV1ArTbtkRn6v0fqS4/6bhLZMqKW5+GmV8d2WTbWATSqYWIuYU5hbmGOEZ0D
nAGtsdTG1EfgDwUDzgLqljkG5+UR8UDkblPeN3rIOPzSdy7qPv09tHu69Bp8
b0p0DqhTyTAZl05194Tem0W2ncjxWJ06VNGpgRDnquA8P5H1yit8N4fMhV9T
bkwHpDc9zX9jmuaFYuvvGVd/77O+m0O2nJ8xWZ1S8wn/jWmamFOYW5hjIl/3
LeeJHCDyt8r1dl36n/CDguHdgjUVtXU3Kr/iuzlEiyHycVOup/+3TfpnO/bo
NQvEAdRfL8le+veXNP33RPFAnUqGzbh0agBNIttOq1PTik4NiKhltp8gdz8r
ETlKX/ov300i28qnlMebbpk7tI++8IT/BjXFx0VsHdZu2XdI5OX60tO+m0S2
nBjTl9sx3jsb8wAa1TAxpzC3MMcw14i48ZGP/M4gdmoMteclFQ04CwhnU3fJ
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
kRiMTk2RQxqmUxvgszLinMbl6ov4fuli5RM5XMNIwz7EuTLGftKHAhjrkPkb
5fkG3026cxp7U5kl7pzGZup2tsL+IE4btnk/Kd5rH8HZuFi/Xmx4VijZOOEr
x1nfgQ+12i/HrLN3WTY38rQkWwOwFmBNsOeV6xph14pHfd+SBA0Xc0bUL5kr
E6tfMl5DLEZM1tisMRqx2pTPK28lHpRybd2FBrUuCaJRbNmyw+CMnh6ZZRa3
2C+Bi8XdMy0viRnAd72oO/J+ad0+rmashk4l9gzqVOpUshlSp0Kn+h+HkBms
Tk2QUyrr1GdrXMTnlfOVgz2Sdi1Sb8A5jecof+XhGqptl7h9jXY/6YD65bLE
7iW3e8r/O4CxD4ljnNM4VfvtNOXjnscRzwSeL8P2k+Ksna0tuvgzBOeN67ol
m/Sf/xzAWJDF4tXG1dztTc9o0ZtuVcLHh9XZwxz4tee5iLUAawLWBqwRWCvs
msHzysfC7volGnsQgxCLEJN2eR7HX4mL0TivfJGN3TaGI5a3Ai8XW1vXuHvr
f23JexKdA6dF1ptB6TYfapFP4txo1Hxeq5zeJ+5+5VXKuzzPxRo6lRgN6lTq
VHI8pE51a8ezAYxFSEQupBA6NUGOqaJTq3iLjHFO4ysln2e5mrG7xZ0fOGw/
6UuM22OeBOALvol9tS8zw85pxP7bn3sfueG2Tfl6qewnHexye+cnUo/vLuV0
QR1I5M/fQH8gx0H4zOutD8GX7prAm8GX4dPw7Uqdvddnvh+SYW3AGjHsvHKs
IawlBbjYghhTVb8EMehu7yM33BCrEbM32BhuyueVI7aPF9jfn9XW1et/dwt7
legkiJxoumS+maW+9OgE/PFn+reni/PrfbrVL2eIO4c6j31czVgNnUoYQ51K
nUpOhNSp1TrV/3j4ZrkedKF0aopcU1mnPqY8UTlF2TtN/XCNpHK0/t5V4vb7
hWrYt7pc3B797jnJ7v2kPwvAL3zwHuU7jf2epXxO4yLtny96H6k9W5KNI+ZL
1X5S7NFvdD9pNY9W9gny5gfpP7cFMCZkMQnfOcj60jHjeIN7xfnwsDp7x2e+
nveeg2YMa8UiqTqvHN/ZYk25x/etixe4WHKacmNqYwxizfJsHEM1xGzEbsTw
NTam29iOGL9jy5am+wD1JntlunHnhN3Xhl4mOgEi3zHuPPIB8xqsk03iN/o3
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
SjbKYHSqrbM3UZ2a+37S65VrpOqcxo2pyKnalFsCGNsi807lGWbYftJV2s/f
bcMYpsprlVuU6yTtneH22qNu4105XOxGQc3dKdkadmcAfU+GTfjIwdZnNuXw
gZgDmAt2TdW5gTkiL8vmTDsMcxxzfVj9kjMM58ZEibODEZs27j6vHLHrhjaM
4fD6JYjFphX1Sxoh6p4fAF+VGcY97/Gw7zQHEThEbjTQwP0yYF6Uw2R8UHm+
8kDl/qgxofNDVii/INSphSJ1KkmOTepUcjz0plNbVmevmj8Sd65u1X7SVP5I
P++nLbqGR6XqnMbp2TmNL9aPvkY5FMB4xsDq/aTrUumZtXs/aauea79b+Q7l
JnueeILzxJfph3/j/2/vTMDsqKo8fnrvzr4npBPSZN8XkrBEAkQ22RRkUSTD
ooDDJ0HUQWBmMPohKh/ojAwo6Ojk00lUEOVTQAGZD8SoLAYVEYOQAEqWiQGR
iSHkVd05/3vrvX7d6X559bpenVuvT93v9+nrkM6tuufUOe9Wnf9J8URRg+o0
d7GnfqFRrQald2AbF1pbgc08nuI/Dp+Ab8BH4CvwGes7GxPyxeepU78Evg6f
p5P4n37QqE8kBWITYhRiFfqVD+3sV74toXVEjEWsdfolNgYjFj+a4oneSfl+
5NP548eltzr08PwgOsPU00Sr0/x8inaK+/d7yGlJjW1ge0VtAp7p/zQhX9Q8
NQU0T1WUrmieqvSFVPPUMK+zV808FfWk46iHetItFc4ffRovI1drX+jTeIjp
330aq00P9aTDqG/1pDuZa5mlHFs7KGhtpnAM/2M3MIHASZ4GG6Xm0O2t3+/B
NVf85McGNgJbOV1gAvAN+MhoBj4D34EPWV/aWaEv5vVL4NOqX5ISiFWIWYd0
9isfHsW2SvuVI6ai1mix1S9BzLWxN2n9knI5gmmhAcbVIT0pvd2hh6cH0Vpm
AfSZzSUCdppj7mKOZeYwQ5vJ1Xycw7ykeWp20DxVURyapypJUPU81erspZWn
ooYatdT71JPeHDNGoL9fB3Xr07iK2ezBmvUHthlXo7+Y7bKjs5701hhriPrh
NczRhD6NQXGfxr70E+8r0NwdSeidOz4HzV29tyn7Aps40doI9Jl3CE4GvgKf
ge/Ah+BL1qfWULwa/VuoU78EPg3ftj6+zYPr3R/YbFwMK+pX3hHFujg5GmKp
0y9BjDXV1i8ph2eYIYR76iT+eJb0loceHh6bNu1l2zjaNNJoM17YXqF7ciNz
CDO9jr9D4bn7BOZqiqd5qnmqMJqnKv0ZzVOVpNlsEs5TU9HZ642N1EM9KWqv
UU8aljiHDWTfje2stV8QEr3LaJ9GKZ5g3mtcPem4XKGe9OH92CLeez+dXJ/G
kWT19JYzT8ufkAX6EZHmbuj22sWnpHgFbGJeCBu5Wn4yFvgOfAi+BJ+Cb1kf
21+NycNUpF/CPmz1S+DTT0ifUj8FsQwxLepXjnVZFMW+3kZX/RLEVJPXL9ko
f0KW8wj31Eb+vwuZ70pvfejh2UH0GWY237/qxN7f685mZhU5LakDUWcyNLpX
flPz1GyhearSH9E8VakWfc5Tu+jsSeepqCedTt3qSc9nnu52DjuYM5nBVNSn
8Uj+FeuYvR6sS38mMK5Gv4x60heYS8n1aWx3fRoP5F/yDfmT6AI0dycTeueO
YDtbxj/aIj0lxRteMbAJ2AZsZK/8hLoAX4JPwbfgY/A163MvdPPFHvVLjjPO
lwPp0+jnIKYhtiHGFfUrPzOKhcXj6ShmOv0SG0sRU++RP4ku4F0T9HxuoLH8
cYX01oceHh1EG43T1h1sdSKkbbU7jzDvIqcZPbaRTN0I9rejmMc0T80Omqcq
/QnNU5VqU3GeGviYp+brSVF7vU89Kc5nNRX1aZxa1Kdxh/TUlS6gnvRm5jBD
ddMCamntrCd9lfbp04j3i1eTf/fIPHdQXnN3BtvcNdLTUbzhGmsTsI075SfT
I/Cp1eTe4Yevwefge9YHX6VO/RL4KHwVPmt9V/VL/AIxDrFu6b79yndQsX4J
Yqfd65HSLymHzxHZ9144n2Q+L70FoocnB9EH+J46xQwit+8jbac9gXvqOuZI
ZjYzqIV9bwxzAbNV89TsoHmq0h/QPFVJi7LzVKuz53ueuoXcsyfkI7aedBoz
jlyfxvr2nNPoO5fZID1VpSTPMheZonpSl7NNo7BpiHsnD9qgafbIqZRDyWru
RjXJv5KejiIObGCxtYnD5CezX+Bjx1BUC82+R9PJxQj4ZEG/BL76B+mpKiVB
zHufsTEQsRAxcZy9pyJW2piJ2LlNfqIlCck9C2uiocbpN78gvQ2ih/BB9JBx
2rot5iQPbHR/bGWuYZYw0+rY/6Al1YbvS5qnZgvNU5VaRfNURYJe81Srs5eV
PDXPenL9/JoYahjA6etc497J+77Rd/KyAvpporfHycw8XsfBYSPnbTP5D38k
P7myeYryvXMn5ZyPqf31X7D274MtWO3SX8tPqGzgczMY+CB80fqk9c0HjPa+
zQqwv+8ZFwvnIjbaGIm6ofXykyubeyn/HH8qf7xUeitED+GD6FRTT+1mONvE
yx7YZ7lsYM5lFhF0+fGu30jmGKN5apbQPFWpNTRPVSTZJ08Ns5in5llL6Fea
f5f/Y8wb0lNSKuJN5lMG95QWqre9aTyYVCzeS1ZzN3RaeXdLT0cRA98xFoaw
hXPkJxMb1Ee1OJ1T43zyTekpKRWBWIiYONvGyLXyE4oNnoG2UKtxzzsfld4O
0UPoIPoaM9/qL3/YA7uMy3fI5dgNNIQ/nmc0T80qmqcqtYLmqYoPZD9P3cNM
IOjxjQ7Q45foVekpKX0C95KTOV87IDeaZPvgVkKn5i56N2CvV/PN/gfW/Dhr
A2Mjm/BgUmUDn4PvNdB4vqeeYjS+Zx3ExKMRI22s3CM/oVhsYoYR+pFP4I+n
SW+J6CFwEG1l3sY2PNJq2Pqqx9MbfyGnHTWGGvgj3vHbKT0lpU9onqpkHc1T
FZ8o5KlBFvPUKyi/v48+uGulp6Mkwn3GaUI0hyvlJxOb66igucs2+UXp6Sip
8+927WED18tPJjaoJYHvOS2TH0lPR0mE/2YWIFaaj8hPJjaXEuI8vsfPZ74p
vTWiR8oH0bXMTNvb27f+ZOWAODCHUBc1nD/eIj0dJRE0T1WyjOapim/YPNW+
p5elPBV6AdANqCfolZ3FP8pJT0lJBNT6olfOQbaGeYP8hGIBvX/UMTfRsKiX
w0vSU1JS40WDNcfaz5SfTGzga05L4qDA6T9q3X1tgH6670aszJzWDtjNjCf7
/jN/XG7uu2+X9PaIHikdRE8xS0wzDTSHeGCLcfk9s5RwX23mj4cbzVNrBc1T
layieariI4U8NZelPPVkQq1oW+h0JH4mPR0lUdC3ZCnnn4OCw+UnExvo6jnN
XfQW/Yj0dJTUuMKu+UDKlp5pHvRRgc+5HuPPSk9HSZRHDWIlx0xzivxkYvNl
IvteDNEs5tPSWyR6pHQQreR7aofJ4vd99IJ8PzPFvn8yyjhdXfFpKYmheaqS
RTRPVXylkKeGWchTf0L5e+h0tsfLpaejVIVPMrMCfP/IopbZCrKau9Fe6Xrp
6ShVB2t8sF3zFfKTiQ18zL2zPytwOpDiU1ISZxVyUBs7fyI/mdigZy7noMbl
oM9Ib5PoUeWD6IfG1UE1mbM9sL+4PEiud14LDTTu3X3xKSmJo3mqkiU0T1V8
Z1Vhr9T3PHU24d3SoWyLhxr3vqH4lJTEgb7nkaaRRgWTKHt6pc9TXnN3Itvp
mca9fyg+LaUqYG3PsO+WDovW3oNJlQ18axKR9TX4nGrr1iqbDWImx06rX+PB
hGLxKDOI8AxqMn+8UHqrRI8qH05b9wAzitd8hwf2FwfUlZ7EtNs+T+OZ56Wn
pFQFzVOVrKB5qpIFNpsoTw18zlNvpvy+6NyQ6PPS01GqyteN0zJrCK+Wn0xs
LiKruRtp639LejpK1Vhn8nZ6ifxkYnMVFdvpf0lPR6kqiJlzbQy9WX4ysXkn
Wc1S4zRLH5DeLtGjSofT+HZ2+gkP7C4uX2XmEb7jD+WPV0lPR6kqmqcqWUDz
VCUr2Dw19DVPfYMZR+jjODYgOpZ/9DfpKSlV5S3mdPTzzo3kH2yTn1AsdpHT
3G2g0WyvK/hHr0lPSUkcrOkK24t0fLTmHkyqbLYw8C34GHzN+Zz4tJSqgZh5
DGKojaVvyE8oFtspb6941+Qk6S0TPapwOB1laOsON1PI6SxL210ctjLLmFHU
aND/j+h16SkpVUXzVMV3NE9VskQhT835mKdiL7eVmkKihfzxu9LTUVLhIZOv
bz5dfjKx+SLl3+ObzXb7OenpKInzWaxt4Ov+/f44jYr1Iv5HejpKKtxpEEOh
w5PF56NXEp6PovZpHvMV6a0TPRI+iK4s6Jrd5YG9xeVfGfSnIhrBfE16Okoq
aJ6q+IzmqUrWKOSpXr3Ht5EZStgXnRQQncM/CqSnpKTGhzg3nRJAK2S9/GRi
M5+guTs46vvwnPR0lMTYaFwfncHBAvnJxAa+5PR3pgbwMQ+mpKQCYuc5iKU2
pm6Un1AsoBtxEEE3At/1lzFbpLdP9EjoIPqFyfd7XO6BrcXlKWYJobdOi3Ga
Jpqn9h80T1V8RPNUJYsU8tTApzwVmv/NNJBtcTF/fFJ6OkqqvMAcYppoSLBI
fjKxeYTy99IpbL8flJ6OkhgfLOSej8hPJjYLiaxPwbecj4lPSUmNJwxiaQsN
MG+Xn0xs7qB8L90Z/PFfpLdQ9EjoQL+5ejrQ7pE+44GdxQG1hOcyk+37JWOY
n0lPSUkVzVMVH9E8VckqhTw18CFPvZsKeWeA97c9mJKSOnjHdI7VMrtNfjKx
OZlQX9oSOs3dh6Sno/QZrOEiu6anyE8mNvAh907+HH0nv99ypd3LQWz9gfxk
YnMYkd1LI1rCbJDeRtGjjwfRHcwC00aN5kIP7Csu8CHsQTTRIP64Uno6igia
pyo+oXmqknVsnhpI56lsgGY62ffxA6LD+UeveHBtlPSB/ufbTQONyU3gH7wp
P6FYbKJ879z2wGnvvSk9JaVisHan2bUczj94UX5CsYDvwIfYlwL4lGrr9lcQ
Sw/n2DrczCAXaz2YVNk8zgwmPKPq4I8XSG+l6NHHg+g43JPMaF7T1zywrzj8
nTmROcDqmE0wTn9dfFpK6mieqviC5qlKLVDIUwPJPPWzVNAp5Snc6sF1UeRY
yywM26gxvFx+MrH4JbleJfXUYJzm7qlGnztlkYeitZtn1xJr+rj8pGKxinBP
bUQPiND1+RWfkiLGLQa2jBj7OfnJxOIBZgThntps8D4N6ruIHpPeUtEj5kH0
A+YEZjavZZ2Zymv6rAf2FYcvMfOsLQ7jj6ulp6OIonmqIo3mqUotYfPUUCpP
xbOxMYR90fEB0Tv4R7s8uCaKHDnmbOhJ2H3+l+UntF92MGeSe37fNJwCGkaG
2uoNNYwLXD9I1OWrTqT/PBet1UK3dljDYW5NB0drvEN+kvvlJQa+Ax+CLzmf
Ep+WIgZi6js4xh5gY+1f5Se0X/B89wRydfuNI/h+OiR/Tx1vXJ+djzIvS2+x
6LGfg+g3zD8Yu4/YOMrQgDpDw8k0DyIzhNcWdXq+9XLuiVeYZYT7ahN/nGM0
T+3vaJ6qSKF5qlKLFPLUnESeupJQu9wc1S7f48H1UOR5zER9dsIT5CfTK28x
HyP33L6ljcK66Rzfl3B8v5r5KNmcm1qbQqrrCJzeyVXMNulpK/uwNVobXiOs
FdZseLSGWEteU6wt1hhr/U/R2nsw8R45nsj6jvvO/pj0dBQv+KFxmhLNNuZ6
MKEe2cVcRK6fbvNA9r2ZzFLmOuaiaE+qtYX9dLJxOqfXm02b9kpvuejR7SD6
M3OFsfeg+on8nbfR0Gheu39mLmcW8z11Kud+Le5Z5CfJ6YJL219vIM5DR4Jo
JPMt6ekoXqB5qpImmqcqtU4hTw3TzFM3UF4L4iC+B57PPwo9uBaKH3yY7WK6
1TK7X34y+wC9vXamrZHC+kkc2w/mWPAB5lkmP7YwZzKDmGb0h5zJHMF//XZm
j/QpKHYNsBZYE14brNGgaM22FK3js9Ha8hpjrbHm7ZENeHASXYCvuB4Q0wP3
XVB8SooXILaeh1hrY+5T8hPah9UMdIRam9h+O9x+BX2YeanIF19kTmGwT9U8
2KDmi2iFwfv9evhxEN3IHMbfl6YZamk1NJjXaiXzWtE6Psmcwyzie2o7x9EG
9KYjc6cHdtidnzMHwy6Jz4WONZqnKp1onqpUG81Tlf5CIU8N0sxTD2eaaVC0
F/9bD66D4g8vG2iZNdGwYLb8ZAqgHht9dAbUkWkYw7F9AYV0Kt//HymKCd3H
L5iFzACmcSTb+/yQ6CSj7wFKgmuPNeC1wJoMcN+L7Fr1NELmweh7MK851h42
AFt4Uv5kLHivAM/u4TOuB8SfpKekeAVi7BLEXBt7PZiQBZpQuMe31fM9dXzk
h2cxj5W4p97LzCBX84XaL6sldQazXnorpt8eRHcZpwk111DTULdfuJx5ppc1
DJh7mOOY+WQaR7rvJ+id+BsP7BLsZc5iOmyfp7HG9Z8Wn5biDZqnKtVE81Sl
v1HIU4M08tS1hD6O7C80i+3xWg/OX/GPLzBzrZbZTcKT2c6gX+ogpmkIx/Y5
fNdHnr2G2V0ivhePrzMTKK97Eri6VK3RT5d8rf0itwZYiwnR2pQzdkdrjrVn
G4AtDIpsY7vwyd1I+R4QczmH/DcPrrXiH//KzLKxd63wZNDPaTm5/Ycm1BrM
ZY5i1jF7y/THm5mx5GrAUAtm3/fHc9Y/SW/N9JuD6NfMSuP0S8a4/cEpvCbf
L3MN/xat4+FkazJRmwktKbyjL60l9R1mIaHHM97Bu9gD/1X8Q/NUJWk0T1X6
MzZPDaqdp+JZ0yRCfB/F97nl/KPtHpy74h//xxxvGmhcbizJ5KWw1SuZUWS1
LcK6qVGt/bXM9jLjQvcYcRlZrUFqbQmpbjL7wFLj9mNf9eCa1yo7o2u81Nhr
jms/LFqLcnO04rE9soElVvckgG2Mimxlr8AJogcE6pvgK/AZ1dZVegax9gjE
XtNBMraa14SCbmlLm9W4cJpQNzJ/rcAXUfsFLamh5GrCUBtGhxrUiulRvaOL
fkn9JGjOGBrJa7Cayt9LLB6oxbyCnJZUh6vVxD1ttZCz4J66ghlr+411ROcr
7b+Kf2ieqiSF5qmKUpSnBtXMU68i7Is2hEQLmP/04LwVf8F7/9AyawovTPkf
/zZzEFkti7B+IuVsrf0FzNMVxITu42Uq1j3hOD87cLona5i3PLjutcJb0TXF
teVrjGs9MLr2LyewjrCF88nV6LONwFZgM3ekfKLnE1kfcc8wv+fBdVf85asG
NW0cg83VKf/jXybXT7yt0WpaWL+hi5k/JOCLqAVbHt1TUSOGWjFbM3aX9LZN
zR1Ov+Rt/H1phqGWAZ2aUDsSWEfUZqJGc5Gr2UTtJuqfHkjZVm9g5hA0TYbz
xxs88FvFXzRPVfqC5qmK0hWbp4bYK6pGnrqFGUno4zghR3SqUW08pTSBwfv/
ddQR4L39NHQkoJcGzQrbT3wUBTSfQqtpAW2LIIG4UDx+RK5XlNM9Cdz+7Lt5
Gj/z4NpnHVxDXMsFnbX2M6NrnuToqnsSwmbyuidpaO/BJ+Ab8BHXPz3w4Nor
/vKmQeytp3Ybi7el8I8+TO57faRf4nRJ9qdfUum4m5ka3VNRM2b7laOG7Cnp
LZzMH06/5ERmnqGm4U5b5jDqXb+k0oH3qlCreRQzr1NLCjWdz6dgr39klhJ6
6zQbV/epeapSCs1TlUrRPFVR9qWQpwbVyFNPI/RxbI36OD7owfkq/gM9CmiZ
DQyWV/Efep2cRgXul82D+M49i4GGxe3MroTjQvdR0D1pCKl+Ys75x6XMCx5c
/6zxQnTt0E+8PWev6djoGldz7IpsBTbDtgMbyuuevF7FE4ZPwDdcD4hfe3D9
Ff95wLh+5K3m9Cr+Q8gfCvolqKGbQ6agX/JmFX0RexmrydWMoXYMNWSFfuVb
pLd0MncQbWQuMZF+idOSmUjl65dUOlCzidrNpa6WEzWdqO1EjeeuKtrtPzJT
rV45dPHv9sBfFf/RPFWJg+apilKaQp4aJpmnrieXk9bR1EB1IJV4fNygnyn2
8b+d8C9HX4fVFPUTb6awbjLHdvQTv4q69hOv9nidinVPQqqDnzjdE6I3PFgD
33kjulZ8zXDtcA2HRtf09RTX8aXIdqB7wrYEm8rrngQJnzR8AT7hekBc5cEa
KNnhYo7FU2xM/kXCvxz1/ZeR2zdobbFaFaZP+iWVjp3kasdQQ4ZaMtSUobaM
bpfe3snE8cQTeDaZ1y/pMNTabGgEX8srqTL9kkoHajgvpoKWFGo8Uet5axUc
A+/wHUx4Zsr2Qid74KdKdtA8VX4NfEfzVPk1ULKDzVODJPNU9JVsoiGRBt5G
D85RyQ7bDL5DNNLIAHXOSWmZ3c/MpEI/8cD2Sz2bSvcTr/boqnsSuH4Tb+fp
rjP6XmtPBNG1wTWaE1LTkGC//cTTGLAh2JLTPQlgYzMjm0vixOED8AX4hPt+
vc2DtVCyA2LwUsRk+907qV+8joHeZFuD1aZwmlAXCvsiashQS4b6B9SWocbM
1prdI73d4+3h9EuOZmZDK8YU9Ev+LLiOqOlEbedCvqeOczWfqP18OCHb3cO8
k5lo34kax/zOAz9VsoPmqZqn9obmqZqnKvEp5KlBEnnqbcwAG9/ZB+nTHpyf
kj1uZebb3rmr+/jLoDmR7yfeOJJj+zwK6Ri+H9/F5ATjQvH4ATON8ronfB9f
yL5zLk9/gwdr4Qu4FrgmfG1wjXCtpkXXzocBW4JNwbbYxmBrSemefILyPSDm
M1/yYC2U7HEdM8fG5tv6+Ms2kHvehP2BxlEETQpDx5PTqAjFPdEN1JRhf8z1
KzdOQxXvaG+U3vrx5iD6KXO6gb49NY50+3dYy2poe1UyUNu5hvL9ym3tZ75f
eV81JdYwCwh9nobwx1Ue+KeSPTRP1Ty1O5qnap6qVI7NU8O+5qm7mXZCfB+T
c8/Zdnpwbkr22G3wznw9jc9By2x7Bb8E/XahNTGMrPZEWDed4/sh5DQp0nw/
ttwBvcHV5HRP2hqLavSvYF7xYE2keCW6Bqi152uCa5PvJ560bmcSA7bVqXsS
wPaGRbZYSQ9o2L7rAdGec3Ukuz1YEyV7IBYfhdhsJpCL1XF/yQ7mTCrol0CD
whT0S/4u7nn7jj3kasxQa4aas7oOk+9Xjpq0/np00y+BJoyhcVR9/ZJKx/9S
Z79y/l7X0upqQlEbWsn7KLBjfPcaTXzeNJX5iwf+qWQPzVM1T82jearmqUrf
KeSpuUrzVPAhwr4o+6DdL/+mB+elZJd7jeud2xK+J+ZfvpkK/cTDuo6o1n4V
s1k8Aux/dNU9CahuRkC0jE/rZmaXB+uSFruic15m7DXAtcj3E98pvkr7H5uY
yyivexLAFmGTt8S8EGcTWR9w+d69HqyLkl2+YdBrjmO0/R5f7l/spl/iNKHy
+iVJ9KGu9kCtWWe/cmNr0eyzsjXS20KpH0X6JdCAcVowuE9VWws5iYH6FtSA
un7ltjYUNaLrYjrCp5hZDNEI5j888Eslu2ieqnmq5qmapyrJYfPUEHtJcfLU
PJvI7e3X04GB61u514NzUrJLyLzf1NHksrXMuvQTH0c5WkghvZP8qTmIM35J
RbonqNGfF+Z1T9y1kV6faq57oZ94aM8930/8cfFViT9ge7BBtkXYZBzdE9i8
6wExmdf/AzW+7kr1ecugJotjtH2v5MUy/tJdzBRy+iX17WS1Jug9GfXFR5kF
5O6pqElDbZqtUXtEeouo6keRfgnHkyFuXw49v58VX5V4AzWgqAU93q1lwxgX
71EzuqEMe/4ds5RQC9VinA6z5qlKX9A8VfNUzVM1T1WSo5Cn5nrLU0vVkx5P
6EfSFu2L/tSD81Gyz+8NaiqaaXBwSIn/cAt16Sce0ByO7UfyfXUd85b4Xb5v
Yw1zIEW6J+NyTvfkPOa3HqxP0vw2OrdF7lxxzgdG1yDLAzYIW4RNsm3CRvO6
J1tKXBB8Z+rsAfF7D9ZHyT6PGNc7t82cUOI/fI666JdAW8LQseSXfkmlA7Vo
qElDbRpq1Ar9yp+X3jJK/CD6FfM+g/fhqGGM8U6/pNKBmtDOfuW2ZnQwuRrS
Hb3YNCen5kLC3ir0TEcx93vgj0r20TxV81TSPFXzVCUxCnlq2FOeCp2IlbRv
PSl0+JGz1tH0QHUglWT5BDPbapl9tdsfFvcTt7X20zi+L+X76PXMDvE7e3Kj
q+5JSHUd7GdLjOvBXQtaF3+JzmWJsefW2hQW+onvEb/6yQ3onsA2l1rdE1uj
35vuCWzd9YCYzV+hVnuwRkrtsAqx2sbs7j10ENsR460mFN6dmcn4rF9S6UBN
GmoTXL9yV7Nm35O53rz2WiC9hdTno5t+CbRdDI3hc72B/NQvqXT8iTr7lU91
NaS99Su/j9z7U800kD+e4YEfKrWD5qmap9bI0DxV8QKbpwY95amoJ21tcvWk
N0Q/Q7yfTtgXHRa4XG6zB+eg1A7QMjvSNNLoAFpme6I/+AqDz20NFNZPpJzt
J/5+ku2ZWu3RRfdkIPvbTOYIvhy3M3s8WKu47InmjnPgc8E5+dBPvNoDNgpb
dbonOdjwJL4ga6MLsyeybdg8bF97QCjJsskgVnPMNrOL/gAx/QCGY7zhWG8K
+iUvintM9cZGcrVqtl85eqpBS2qFQU1bVo8i/RJouZiCfslr4le7euMJ5r1k
a0hRS4qaUtSW3hXZ9t+ZEwn6PPX8EX0V/+iBHyq1g+aphaF5am0MzVMVUQp5
atA9T6V3kY31DeMpQD0peuI6vXLE97kh0U0ezF+pPb7GLLBaZufxDw6lqNZ+
DAW0gEI6me3yQfKnn3i1x3oq1j0JXA/V0/gaPejBWpUL5oo589xxDgOic1ov
fnXTGbBV2OzJ9rxD2DJsGrYNG3c9IBaEzval10qpPaBhPdfGbsRwxHJ7Tx1P
ThMKsT6L+iWVDmgQTad8v3Jja9roTObn0ltLZR9Ov+Qddl2paaiLD8uZp8Wv
bjojiNYRtaTzXW0pnqkew1zPzCPomfJ1oSs98D+l9tA8tcvQPDX7Q/NURRSb
p4bd81TazdzGLGPmUtg0nIIGQnwfF7pnia95MHel9kB/0JNMHU209tY8kGP7
LOZQtsMvMH8Tv2OnP5B3f4YZTVGN/vjA6Z5cwlzlORcbO1fMGXMfE51LLdWO
lDtgu59nYMts07Bt2Dhs3fXGfdMD/1NqD8TqFYjdBvbGsRwx3dDbyOnw7Bb3
jPTHXnL1Fq5fuatto8XMh4z8PXN/XGCcJtQ4Fw+wp/hl8SsqM9C/6jqyNSao
MUWtKbSkBlIDX6NpzKse+J9Se2ieus/QPLU2huapigiFPDWM8tQAe08Fu9zK
XMPMYJrxThSeIa7zYN5K7fJjY+NCU1NIU9juLqfarh0pd6DuAvUXQ5iWNr5G
7WEdtQf11J7zEcwNc7RzHUK1XztS7oAtw6Zh27Bxm6+ptq5STdYaG7sRwxHL
EdO3inuC/NhG7r2wQYQaE75G7Zxzt3M+5CeYG9WNN9TaYmgYz/lS6p97id0H
egReRK7G5AD+X2pkvuSB3ym1i+apPQ7NU2tjwJY1T1VSpYc8tfu4ltzzQ/vs
8DkP5qzULqhFXgyd2ZAuFr8j+zd+xXC+3dBI4TC+YAd6CuaGOWKuds46ug7Y
Nmzc3lO1/l6pJojZi10Mv1bc8v0b9zFj+X5VT2YEyd87ewPv/NQ3kevl9Lz4
VfNr4AkqdHiRw9IAo3mqUl00Ty05NE+tjaF5qpIaZeSpNxH+PNS9KKX6FMX4
j4nfif0b6Au1mEzLAAo+KL9YvYK5YY5WF3mX+FXzb8C2NcYrqVAU428St3z/
Bnq0LXa92T4pv1i98m6yPeINHSF+xfwcqDm1e1EjjeapSnXRPLXk0Dy1Nobm
qUpqFPLUsNc8VfeilNTQGF9yaIyvjaExXkkN3YsqOXQvqjaG7kUpqaF5asmh
eWptDM1TldTQvSjFJzTGlxwa42tjaIxXUkP3okoO3YuqjaF7UUpqaJ5acmie
WhtD81QlNXQvSvEJjfElh8b42hga45XU0L2okkP3ompj6F6Ukhqap5YcmqfW
xtA8VUkN3YtSfEJjfMmhMb42hsZ4JTV0L6rk0L2o2hi6F6WkhuapJYfmqbUx
NE9VUkP3ohSf0BhfcmiMr42hMV5JDd2LKjl0L6o2hu5FKamheWrJoXlqbQzN
U5XU2Hcv6v8BpP1sAA==
    "], {{0, 1357}, {1187, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJx9kT1IHEEUx3/eKUpQTPAKCYGsYKwUxIhY6hkiQgTZO0GNhft168Ht3jG7
IoJlIO1Binw0uSRFmtSmTZE2IAgmgZAqZaqINkHWN3sHd4ScAzPzm/+8/2Pe
mzG7apYyQDQgi2ntLyplHRRuymE9jMp+6LkrYez5npq3e0Rs6FgyjYoTRL3T
EISxMpfzxsbmltH/i16GucUIdy0nqq0WHhbpOi5O0Qk5mdK5usf9dwy5XuRA
jyG84NRULLwjPLcf1zS/EM45u5Yr/EF4UskDhb9p3W7yb81+ymlROVU0l4Rz
wobfwXYHO7sqEJ4VHneDUPJnNprsaj7UHFT2nNY7dYWDXrhe0LrMOyyzwipr
GNjsUaZCzJTsoSgRptznu/hvp/41cdniKuOI4wFVAqzUj/6Df3sble7PNDMN
5qHvZ5Kc3YP+Z3BZT5K/b5Lk8i1kf8CnsO2vNmD+XPR6Wxt/DcNP4OhzW7Of
w8enMPq9ZikrlbIyM6US/Hkv37QJI8dw43Gzb6173n2FovTq0Rd4+QomfMm9
3aXugc6+XRvT6t8VyoV/mw==
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{465.70000000000005`, Automatic},
  ImageSizeRaw->{1187, 1357},
  PlotRange->{{0, 1187}, {0, 1357}}]], "Input",
 CellChangeTimes->{{3.796357203651661*^9, 3.796357208089761*^9}, {
  3.7983919870338573`*^9, 
  3.798391998803497*^9}},ExpressionUUID->"02c58cdd-025a-41d1-a5a8-\
6dc69f76870c"],

Cell[CellGroupData[{

Cell["surroundingDodec", "Section",
 CellChangeTimes->{{3.7952675896815453`*^9, 
  3.795267594306834*^9}},ExpressionUUID->"74a4afb2-5d7c-4eb0-8bff-\
dfc8afa494a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "gives", " ", "the", " ", "coordinates", " ", "of", " ", "all", " ", 
    "tiles", " ", "surrounding", " ", "a", " ", "given", " ", 
    RowBox[{"dodecagon", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"surroundingDodec", "[", "coord_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"coord", "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], ",", 
        RowBox[{"result", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "x"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "12"}], "}"}]}], "]"}]}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Handles", " ", "the", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], " ", "special", " ", 
          RowBox[{"case", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"coord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ",", 
             RowBox[{
              RowBox[{"coord", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{"result", "=", 
           RowBox[{"sDodecCorner", "@", "coord"}]}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Handles", " ", "the", " ", "case", " ", "in", " ", "which", " ", 
            "the", " ", "dodecagon", " ", "is", " ", "on", " ", "a", " ", 
            RowBox[{"corner", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"result", "=", 
           RowBox[{"sDodecSide", "@", "coord"}]}]}], "]"}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Handles", " ", "the", " ", "case", " ", "in", " ", "which", " ", 
         "the", " ", "dodecagon", " ", "is", " ", "on", " ", "a", " ", 
         "side"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.795261007611381*^9, 3.795261075599214*^9}, {
  3.795261129215301*^9, 3.7952613427511997`*^9}, {3.7952613812967176`*^9, 
  3.795261381485559*^9}, {3.7952621791249723`*^9, 3.7952621886626368`*^9}, {
  3.796356822291919*^9, 3.796356850606179*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"3f050696-bb12-4e4f-9118-42d70b892297"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "handles", " ", "the", " ", "case", " ", "in", " ", "which", " ", "the", 
    " ", "dodecagon", " ", "is", " ", "on", " ", "a", " ", 
    RowBox[{"corner", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"sDodecCorner", "[", "coord_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"innerCenter", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"coord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"Floor", "[", 
             FractionBox[
              RowBox[{"coord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              RowBox[{
               RowBox[{"coord", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"coord", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "2"}], ")"}]}], "+", 
           "1"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Finds", " ", "the", " ", "center", " ", "tile", " ", "on", " ", 
         "the", " ", "inner", " ", "edge", " ", "of", " ", "the", " ", 
         RowBox[{"dodecagon", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"outerCenter", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"coord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"Floor", "[", 
             FractionBox[
              RowBox[{"coord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              RowBox[{
               RowBox[{"coord", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]], "]"}], "*", 
            RowBox[{"coord", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "+", "1"}]}], "}"}]}]}], "}"}],
      ",", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Finds", " ", "the", " ", "center", " ", "tile", " ", "on", " ", "the", 
       " ", "outer", " ", "edge", " ", "of", " ", "the", " ", 
       RowBox[{"dodecagon", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "@", 
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"coord", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ",", 
               RowBox[{
                RowBox[{"6", "*", 
                 RowBox[{"coord", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "-", "6"}], ",", "1"}], 
              "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"outerCenter", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"outerCenter", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "n"}], ",", 
                RowBox[{
                 RowBox[{"12", "*", 
                  RowBox[{"outerCenter", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "-", "12"}], ",", "1"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "All", " ", "tiles", " ", "on", " ", "the", " ", "outer", " ", 
            RowBox[{"edge", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"coord", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{
                RowBox[{"6", "*", 
                 RowBox[{"coord", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "-", "6"}], ",", "1"}], 
              "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"innerCenter", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"innerCenter", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "n"}], ",", 
                RowBox[{
                 RowBox[{"12", "*", 
                  RowBox[{"innerCenter", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "-", "12"}], ",", "1"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "All", " ", "tiles", " ", "on", " ", "the", " ", "inner", " ", 
           RowBox[{"edge", "."}]}], " ", "*)"}], "\[IndentingNewLine]", "}"}],
         ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.795262508627404*^9, 3.795262515823947*^9}, {
  3.7952630342759*^9, 3.79526310401309*^9}, {3.795263213959169*^9, 
  3.795263219768422*^9}, {3.795263419891616*^9, 3.795263456624269*^9}, {
  3.795263558654559*^9, 3.7952635673115177`*^9}, {3.795263652630142*^9, 
  3.7952637410937366`*^9}, {3.795263780143148*^9, 3.795263924072174*^9}, {
  3.7952668468058987`*^9, 3.7952669208269653`*^9}, {3.7952669910043592`*^9, 
  3.7952670117848454`*^9}, {3.795267055820861*^9, 3.795267061365789*^9}, {
  3.795267394136241*^9, 3.795267411312204*^9}, {3.7963563678624144`*^9, 
  3.796356428889228*^9}, {3.796356506549611*^9, 3.7963565369493155`*^9}, {
  3.7963568538864083`*^9, 3.796356869321139*^9}, {3.797602009020119*^9, 
  3.7976021111636524`*^9}, {3.7976207801402984`*^9, 3.7976207843739767`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e1ede441-d5aa-434c-87bd-0d5511169b13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "handles", " ", "the", " ", "case", " ", "in", " ", "which", " ", "the", 
    " ", "dodecagon", " ", "is", " ", "on", " ", "a", " ", 
    RowBox[{"side", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"sDodecSide", "[", "coord_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"innerCenter", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"coord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Floor", "[", 
             FractionBox[
              RowBox[{"coord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              RowBox[{
               RowBox[{"coord", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]], "]"}], "*", "2", 
            "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"coord", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "2"}], ")"}]}], "+", 
           RowBox[{"2", "*", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"coord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"coord", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], "-", 
           "2"}]}], "}"}]}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Finds", " ", "the", " ", "center", " ", "tile", " ", "on", " ", 
         "the", " ", "inner", " ", "edge", " ", "of", " ", "the", " ", 
         RowBox[{"dodecagon", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"outerCenter", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"coord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Floor", "[", 
             FractionBox[
              RowBox[{"coord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              RowBox[{
               RowBox[{"coord", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]], "]"}], "*", "2", 
            "*", 
            RowBox[{"coord", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "+", 
           RowBox[{"2", "*", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"coord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"coord", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}]}]}], 
         "}"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Finds", " ", "the", " ", "center", " ", "tile", " ", "on", " ", "the",
         " ", "outer", " ", "edge", " ", "of", " ", "the", " ", 
        RowBox[{"dodecagon", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"coord", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ",", 
               RowBox[{
                RowBox[{"6", "*", 
                 RowBox[{"coord", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "-", "6"}], ",", "1"}], 
              "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"outerCenter", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"outerCenter", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "n"}], ",", 
                RowBox[{
                 RowBox[{"12", "*", 
                  RowBox[{"outerCenter", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "-", "12"}], ",", "1"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "All", " ", "tiles", " ", "on", " ", "the", " ", "outer", " ", 
            RowBox[{"edge", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"coord", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{
                RowBox[{"6", "*", 
                 RowBox[{"coord", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "-", "6"}], ",", "1"}], 
              "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"innerCenter", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"innerCenter", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "n"}], ",", 
                RowBox[{
                 RowBox[{"12", "*", 
                  RowBox[{"innerCenter", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "-", "12"}], ",", "1"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"-", "2"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "Both", " ", "tiles", " ", "adjacent", " ", "in", " ", "the", " ", 
           RowBox[{"row", "."}]}], " ", "*)"}], "\[IndentingNewLine]", "}"}], 
        ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.795265736019148*^9, 3.795265763548811*^9}, {
  3.7952658036412373`*^9, 3.79526580739015*^9}, {3.7952664209968357`*^9, 
  3.795266472383456*^9}, {3.795266517457286*^9, 3.79526660212049*^9}, {
  3.795266751372552*^9, 3.795266754450348*^9}, {3.795266787582415*^9, 
  3.795266866822218*^9}, {3.7952669261296167`*^9, 3.795266933926517*^9}, {
  3.795266979429358*^9, 3.795266982641205*^9}, {3.795267014726056*^9, 
  3.795267017655851*^9}, {3.7952673007728024`*^9, 3.795267301199709*^9}, {
  3.79635656710925*^9, 3.796356599153285*^9}, {3.7963568779725256`*^9, 
  3.7963568816167817`*^9}, {3.7976021262604103`*^9, 3.7976021892665987`*^9}, {
  3.797620796968299*^9, 3.797620801009528*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"196ade5b-9d79-4497-969a-87f4b4887885"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.795267357412238*^9, 
  3.795267366549059*^9}},ExpressionUUID->"5a70c52d-2cd4-48cf-9595-\
b24c3c098f78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surroundingDodec", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "7"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.795966608826027*^9, 3.7959666213507423`*^9}, {
  3.7976022282152987`*^9, 3.7976022297468095`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"6341551e-0b38-474a-9797-692f3fb488e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7959666219134827`*^9, 3.797602199044252*^9, 
  3.797602230301405*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"cb392302-90a5-4b74-a462-3e1f2d8283f8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["surroundingHex", "Section",
 CellChangeTimes->{{3.795277667024255*^9, 
  3.7952776704928303`*^9}},ExpressionUUID->"76851ccf-4ca2-4090-9108-\
37fd0ee21759"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "gives", " ", "all", " ", "coordinates", " ", "adjacent", " ", "to", " ", 
    "the", " ", "given", " ", "hexagon"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"surroundingHex", "[", "coord_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ",", 
            RowBox[{"rowLength", "[", 
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"outOrIn", "@", "coord"}], "\[Equal]", "1"}], ",", 
         RowBox[{"hexSquare", "@", "coord"}], ",", 
         RowBox[{"{", 
          RowBox[{"hexDodec", "@", "coord"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
            RowBox[{"rowLength", "[", 
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "}"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "both", " ", "tiles", " ", "adjacent", " ", "in", " ", "the", " ", 
         "row"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"outOrIn", "@", "coord"}], "\[Equal]", 
          RowBox[{"-", "1"}]}], ",", 
         RowBox[{"hexSquare", "@", "coord"}], ",", 
         RowBox[{"{", 
          RowBox[{"hexDodec", "@", "coord"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "1"}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7952788251652613`*^9, 3.795278850972344*^9}, {
  3.795279000614779*^9, 3.795279008996904*^9}, {3.795279043189479*^9, 
  3.795279107605838*^9}, {3.795279254241885*^9, 3.795279275314023*^9}, {
  3.795961760872017*^9, 3.795961771916294*^9}, {3.795964300396503*^9, 
  3.79596433365432*^9}, {3.795964416512081*^9, 3.7959644589359913`*^9}, {
  3.796297927846724*^9, 3.796297933958342*^9}, {3.7963042031490335`*^9, 
  3.7963042368223376`*^9}, {3.796342034582388*^9, 3.7963420424054356`*^9}, {
  3.7963517579515905`*^9, 3.7963517882675056`*^9}, {3.796356627018775*^9, 
  3.7963566922804947`*^9}, {3.796356753743156*^9, 3.7963567768693647`*^9}, {
  3.797602737822544*^9, 3.7976027395650578`*^9}, {3.7976027962110844`*^9, 
  3.7976028822799854`*^9}, {3.7976029296229687`*^9, 3.797602932223464*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"aef21e73-6757-4837-ac0b-01ffc453f42b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "finds", " ", "the", " ", "dodecagon", " ", "adjacent", " ", "in", " ", 
     "the", " ", "row", " ", "above", " ", "or", " ", "below"}], ",", " ", 
    RowBox[{"depending", " ", "on", " ", "the", " ", 
     RowBox[{"hex", "'"}], "s", " ", 
     RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hexDodec", "[", "coord_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"row", " ", "=", " ", 
        RowBox[{
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"outOrIn", "@", "coord"}]}]}], ",", "cnt"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cnt", "=", "1"}], ",", 
        RowBox[{"cnt", "<=", 
         RowBox[{"rowLength", "@", "row"}]}], ",", 
        RowBox[{"cnt", "+=", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"surroundingDodec", "@", 
               RowBox[{"{", 
                RowBox[{"row", ",", "cnt"}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "coord"}], "&"}]}], "]"}]}], 
           "\[Equal]", "1"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"row", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"cnt", ",", 
               RowBox[{"rowLength", "[", "row", "]"}], ",", "1"}], "]"}]}], 
            "}"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7959617802582583`*^9, 3.7959617861789074`*^9}, {
  3.7959642595459285`*^9, 3.795964344995366*^9}, {3.795964376977664*^9, 
  3.795964413345745*^9}, {3.7962978711391745`*^9, 3.796297908129423*^9}, {
  3.796341958027047*^9, 3.7963420182929087`*^9}, {3.796342054888093*^9, 
  3.7963420561506844`*^9}, {3.7963421587304173`*^9, 3.796342160226405*^9}, {
  3.796351345251083*^9, 3.796351475701248*^9}, {3.7963515257165165`*^9, 
  3.7963515838072214`*^9}, {3.7963517270412464`*^9, 3.796351738222351*^9}, {
  3.796352013627936*^9, 3.796352019974003*^9}, {3.796356699023465*^9, 
  3.7963567509665737`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a752dbb9-f1cc-429a-bb86-a66e8df8e3f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "finds", " ", "the", " ", "adjacent", " ", "set", " ", "of", " ", 
      "dodecagon"}], "-", "square", "-", 
     RowBox[{
     "dodecagon", " ", "in", " ", "the", " ", "row", " ", "above", " ", "or", 
      " ", "below"}]}], ",", " ", 
    RowBox[{"depending", " ", "on", " ", "the", " ", 
     RowBox[{"hex", "'"}], "s", " ", 
     RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hexSquare", "[", "coord_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"row", "=", 
        RowBox[{
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", 
         RowBox[{"outOrIn", "@", "coord"}]}]}], ",", "cnt"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cnt", "=", "1"}], ",", 
        RowBox[{"cnt", "<=", 
         RowBox[{"rowLength", "@", "row"}]}], ",", 
        RowBox[{"cnt", "+=", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"surroundingDodec", "@", 
                RowBox[{"{", 
                 RowBox[{"row", ",", "cnt"}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"#", "\[Equal]", "coord"}], "&"}]}], "]"}]}], 
            "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"surroundingDodec", "@", 
                RowBox[{"{", 
                 RowBox[{"row", ",", 
                  RowBox[{"cnt", "+", "2"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"#", "\[Equal]", "coord"}], "&"}]}], "]"}]}], 
            "\[Equal]", "1"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"row", ",", " ", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"cnt", "+", "a"}], ",", " ", 
                 RowBox[{"rowLength", "[", "row", "]"}], ",", "1"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7963420696406493`*^9, 3.7963421296661186`*^9}, {
  3.796342168505297*^9, 3.7963422135837703`*^9}, {3.796351600232276*^9, 
  3.7963516071278667`*^9}, {3.7963516516667833`*^9, 3.7963516734984093`*^9}, {
  3.7963518490599585`*^9, 3.796351876026888*^9}, {3.7963519976636543`*^9, 
  3.796351999929595*^9}, {3.796356888985112*^9, 3.7963569183795176`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"478d1908-609a-4772-a3c7-7d92bb190c3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"determines", " ", "the", " ", 
    RowBox[{"hex", "'"}], "s", " ", 
    RowBox[{"position", ":", " ", 
     RowBox[{
     "if", " ", "the", " ", "lone", " ", "dodecagon", " ", "is", " ", "in", 
      " ", "the", " ", "row", " ", "above", " ", 
      RowBox[{"(", "out", ")"}], " ", "or", " ", "the", " ", "row", " ", 
      "below", " ", 
      RowBox[{
       RowBox[{"(", "in", ")"}], "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"outOrIn", "[", "coord_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"OddQ", "[", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"coord", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "/", "2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}], ",", "1"}], 
       "]"}], "]"}], ",", "1", ",", 
     RowBox[{"-", "1"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7959618020061455`*^9, 3.7959618214701447`*^9}, {
  3.7959618579617004`*^9, 3.7959618673123484`*^9}, {3.7959619425858245`*^9, 
  3.7959619455541353`*^9}, {3.7959620000204673`*^9, 3.795962064704223*^9}, {
  3.7959621283346653`*^9, 3.795962136249014*^9}, {3.795962175787488*^9, 
  3.7959621832559247`*^9}, {3.7959622441944733`*^9, 3.79596226882541*^9}, {
  3.7959622999352446`*^9, 3.795962343448378*^9}, {3.7959624126924458`*^9, 
  3.795962431039833*^9}, {3.7959643599350557`*^9, 3.795964365753316*^9}, {
  3.7963569222451487`*^9, 3.7963569749741945`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6deafabe-ba94-4f7a-a756-09d402d5ab4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calculates", " ", "the", " ", "length", " ", "of", " ", "a", " ", "given",
     " ", 
    RowBox[{"row", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rowLength", "[", "row_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"row", "\[Equal]", "1"}], ",", "1", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "row", "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"row", "-", "1"}], ")"}], "*", "6"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"row", "-", "1"}], ")"}], "*", "12"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7963040176442337`*^9, 3.7963040624947753`*^9}, {
  3.796304129685831*^9, 3.796304178723132*^9}, {3.796356960803085*^9, 
  3.796356971841565*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"86d0a758-005f-452e-b1aa-c5e5e63458d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surroundingHex", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "10"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.796351680704143*^9, 3.7963516967971134`*^9}, {
  3.796351797569634*^9, 3.796351799087576*^9}, {3.7963518998890796`*^9, 
  3.796351901040007*^9}, {3.7963520431410236`*^9, 3.7963520437573752`*^9}, {
  3.7963525417452793`*^9, 3.796352551081285*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"c3294b48-3dd8-43a9-b346-d0a019ec2ded"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7963516973067183`*^9, {3.796351741559428*^9, 3.7963517994875393`*^9}, {
   3.796351880052126*^9, 3.7963519017091866`*^9}, {3.796352024671443*^9, 
   3.7963520442650557`*^9}, {3.7963525441987205`*^9, 3.796352552052722*^9}, {
   3.7976027463488064`*^9, 3.797602759443975*^9}, 3.797602887646163*^9, 
   3.797602935413109*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"27c4e8e0-c931-4d1a-95b6-cb6cee72250a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["surroundingSquare", "Section",
 CellChangeTimes->{{3.796342226593985*^9, 
  3.7963422310839796`*^9}},ExpressionUUID->"15239765-fee6-4505-91df-\
8705a20d6646"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "gives", " ", "all", " ", "coordinates", " ", "adjacent", " ", "to", " ", 
    "the", " ", "given", " ", "square"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"surroundingSquare", "[", "coord_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
            RowBox[{"rowLength", "[", 
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "[", 
            RowBox[{"coord", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"squareDodecs", "@", "coord"}], ",", 
           RowBox[{"squareHexes", "@", "coord"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"coord", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ",", 
            RowBox[{"rowLength", "[", 
             RowBox[{"coord", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "[", 
            RowBox[{"coord", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"squareDodecs", "@", "coord"}], ",", 
           RowBox[{"squareHexes", "@", "coord"}]}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}], ",", "1"}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7963424007632885`*^9, 3.7963424311270704`*^9}, {
  3.796342474934969*^9, 3.7963425530819845`*^9}, {3.7963527410463543`*^9, 
  3.7963527435456724`*^9}, {3.796356994617671*^9, 3.796356999215345*^9}, {
  3.7976023529059916`*^9, 3.7976023692501545`*^9}, {3.797602401756239*^9, 
  3.797602409523732*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c80b6eb6-2c1e-4916-b9cc-dadc83c04af0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surroundingSquare", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7976023742864037`*^9, 3.7976023903544235`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a825d9aa-7d36-4347-8aa6-103af8ddc3f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.797602390761372*^9, 3.79760241188326*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"5c75de00-9bde-4f80-a538-009b24c870e1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "handles", " ", "the", " ", "case", " ", "in", " ", "which", " ", "the", 
    " ", "bordering", " ", "tiles", " ", "in", " ", "the", " ", "adjacent", 
    " ", "rows", " ", "are", " ", 
    RowBox[{"dodecagons", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"squareDodecs", "[", "coord_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"row", "=", 
        RowBox[{"coord", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "cnt", ",", "coord1", ",", 
       "coord2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cnt", "=", "1"}], ",", 
        RowBox[{"cnt", "<=", 
         RowBox[{"rowLength", "@", 
          RowBox[{"(", 
           RowBox[{"row", "-", "1"}], ")"}]}]}], ",", 
        RowBox[{"cnt", "+=", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"surroundingDodec", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"row", "-", "1"}], ",", "cnt"}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "coord"}], "&"}]}], "]"}]}], 
           "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"coord1", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"row", "-", "1"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{"cnt", ",", 
                RowBox[{"rowLength", "[", 
                 RowBox[{"row", "-", "1"}], "]"}], ",", "1"}], "]"}]}], 
             "}"}]}], ";", "Break"}]}], "]"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cnt", "=", "1"}], ",", 
        RowBox[{"cnt", "<=", 
         RowBox[{"rowLength", "@", 
          RowBox[{"(", 
           RowBox[{"row", "+", "1"}], ")"}]}]}], ",", 
        RowBox[{"cnt", "+=", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"surroundingDodec", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"row", "+", "1"}], ",", "cnt"}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "coord"}], "&"}]}], "]"}]}], 
           "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"coord2", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"row", "+", "1"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{"cnt", ",", 
                RowBox[{"rowLength", "[", 
                 RowBox[{"row", "+", "1"}], "]"}], ",", "1"}], "]"}]}], 
             "}"}]}], ";", "Break"}]}], "]"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"coord1", ",", "coord2"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.79634257135413*^9, 3.7963427044348955`*^9}, 
   3.796342746728777*^9, {3.796352362413777*^9, 3.7963524160672874`*^9}, {
   3.7963524472439575`*^9, 3.7963525261679296`*^9}, {3.7963525842316794`*^9, 
   3.7963526883163776`*^9}, {3.7963570020178843`*^9, 3.7963570525298257`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"83ba4f6a-6ece-4ca8-96f1-cf3cb0e18393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "handles", " ", "the", " ", "case", " ", "in", " ", "which", " ", "the", 
    " ", "bordering", " ", "tiles", " ", "in", " ", "the", " ", "adjacent", 
    " ", "rows", " ", "are", " ", 
    RowBox[{"hexagons", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"squareHexes", "[", "coord_", "]"}], " ", ":=", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"row", "=", 
        RowBox[{"coord", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "cnt", ",", "coord1", ",", 
       "coord2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cnt", "=", "2"}], ",", 
        RowBox[{"cnt", "<=", 
         RowBox[{"rowLength", "@", 
          RowBox[{"(", 
           RowBox[{"row", "-", "1"}], ")"}]}]}], ",", 
        RowBox[{"cnt", "+=", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"surroundingHex", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"row", "-", "1"}], ",", "cnt"}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "coord"}], "&"}]}], "]"}]}], 
           "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"coord1", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"row", "-", "1"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{"cnt", ",", 
                RowBox[{"rowLength", "[", 
                 RowBox[{"row", "-", "1"}], "]"}], ",", "1"}], "]"}]}], 
             "}"}]}], ";", "Break"}]}], "]"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cnt", "=", "2"}], ",", 
        RowBox[{"cnt", "<=", 
         RowBox[{"rowLength", "@", 
          RowBox[{"(", 
           RowBox[{"row", "+", "1"}], ")"}]}]}], ",", 
        RowBox[{"cnt", "+=", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"surroundingHex", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"row", "+", "1"}], ",", "cnt"}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "coord"}], "&"}]}], "]"}]}], 
           "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"coord2", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"row", "+", "1"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{"cnt", ",", 
                RowBox[{"rowLength", "[", 
                 RowBox[{"row", "+", "1"}], "]"}], ",", "1"}], "]"}]}], 
             "}"}]}], ";", "Break"}]}], "]"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"coord1", ",", "coord2"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7963427651754537`*^9, 3.796342766030204*^9}, {
  3.7963526996470814`*^9, 3.796352719521908*^9}, {3.796357069699916*^9, 
  3.7963570753467846`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"576be61c-e56b-43a0-a7fe-0bc6e1e76e50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surroundingSquare", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "35"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.79635272281314*^9, 3.7963527348539453`*^9}, {
  3.7963527679354906`*^9, 3.796352768099022*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"322a029f-aa5c-49fe-829c-47970dd1a596"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "23"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.796352735210958*^9, 3.7963527688141437`*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"a54ee03d-6257-4d17-966d-dead0008cc77"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.796352787579965*^9, 
  3.796352792445923*^9}},ExpressionUUID->"200427e4-a694-4428-9c75-\
652e3143cca3"]
}, Closed]],

Cell[CellGroupData[{

Cell["testing", "Section",
 CellChangeTimes->{{3.7963527989934483`*^9, 
  3.796352800024691*^9}},ExpressionUUID->"999c6a4b-4f17-4e3f-8da1-\
2f5fdf2e94be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surrounding", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7963528616229877`*^9, 3.796352865159505*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"285d17bf-3ea6-474d-a775-8b351b2b33af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.796352865536492*^9, 3.8595020578793354`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"a1d63141-d15a-445b-bd19-b8b8b2fe955e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surrounding", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "7"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.796352867216998*^9, 3.7963528876852713`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"b07edf71-601f-410b-abff-8ddc01729f69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7963528742851005`*^9, 3.7963528880024223`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"8cc145d2-8c0f-4445-839e-d62137be0981"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surrounding", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7963528947673674`*^9, 3.7963529042141085`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"63976147-ddb7-48ae-abd1-f9c6fb0cac87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7963529053969126`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"d4a7c1c9-9034-4c1f-ba9d-15e0a291e199"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surrounding", "[", 
  RowBox[{"{", 
   RowBox[{"6", ",", "13"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7963529077605925`*^9, 3.7963529165451374`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e6f54c06-2a88-4dd7-81d1-4cc919f6ef74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7963529169889174`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"cf1fc59d-2b0e-40ac-8da5-065028882857"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surrounding", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7963529234426947`*^9, 3.7963529382331486`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"27574177-8e44-41a6-a04c-5794bb38f40c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7963529390419807`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"a37a6fb1-8b93-4bde-ab11-45c2d0bae798"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surrounding", "[", 
  RowBox[{"{", 
   RowBox[{"6", ",", "60"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.796352945416907*^9, 3.7963529526017294`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"efc11b47-fe2d-405c-a030-0133f9cef1db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7963529529727373`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"4362f099-18cb-45c1-8ec7-803edbda296e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Board Generation", "Chapter",
 CellChangeTimes->{{3.796593812076467*^9, 
  3.796593815394595*^9}},ExpressionUUID->"7c419d9f-bcd9-4146-9623-\
932748639d65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createTile", "[", 
   RowBox[{"mine_", ",", "num_", ",", "flag_", ",", "open_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"mine", ",", "num", ",", "flag", ",", "open"}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.796593820416169*^9, 3.796593832372488*^9}, {
  3.7965938866096296`*^9, 3.7965939144940715`*^9}, {3.796989855939044*^9, 
  3.796989869752106*^9}, {3.796991192126769*^9, 3.7969911958827558`*^9}, {
  3.7969918003763766`*^9, 3.796991808303212*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"d9fb3738-523c-4b95-92d9-bf0862523bc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getMine", "[", "tile_", "]"}], ":=", 
  RowBox[{"tile", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7969861749382243`*^9, 3.7969861867157555`*^9}, {
  3.796991202030284*^9, 3.796991202211799*^9}, {3.7969917866221867`*^9, 
  3.796991787257456*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"aaa9da1b-e9d6-44c6-acba-a615499917e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getNum", "[", "tile_", "]"}], ":=", 
  RowBox[{"tile", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7969861891155376`*^9, 3.796986201079171*^9}, {
   3.7969912059557867`*^9, 3.7969912060634995`*^9}, 3.796991796033021*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"26942549-1e64-4e0b-a603-ad007d8683ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getFlag", "[", "tile_", "]"}], ":=", 
  RowBox[{"tile", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.796991816199095*^9, 3.7969918184819927`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"cd8a08d9-4ac4-4947-b30e-2bb4812ceeb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getOpen", "[", "tile_", "]"}], ":=", 
  RowBox[{"tile", "[", 
   RowBox[{"[", "4", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7969918231534653`*^9, 3.7969918255530825`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"dfdb5e94-5c19-4ea4-975f-1e9f1a6987be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "creates", " ", "a", " ", "board", " ", "of", " ", "boardSize", " ", 
     "with", " ", "a", " ", "given", " ", "number", " ", "of", " ", "mines"}],
     ",", " ", 
    RowBox[{
    "and", " ", "an", " ", "initial", " ", "click", " ", "which", " ", "must",
      " ", "be", " ", 
     RowBox[{"zero", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"createBoard", "[", 
    RowBox[{"boardSize_", ",", "mines_", ",", "init_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cnt1", ",", "cnt2", ",", "minespots", ",", "numbers"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"showMines", "=", "False"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"minespots", "=", 
       RowBox[{"mineLocationGenerator", "[", 
        RowBox[{"boardSize", ",", "mines", ",", "init"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numbers", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"surrounding", "[", "minespot", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"minespot", ",", "minespots"}], "}"}]}], "]"}], ",", 
           "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
           RowBox[{"boardSize", "*", "2"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numbers", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"numbers", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"boardSize", "*", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"rowLength", "[", "x", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"board", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"createTile", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"minespots", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
           RowBox[{"numbers", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y"}], "]"}], "]"}], ",", "False", ",", 
           "False"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"boardSize", "*", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"rowLength", "[", "x", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "board", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.796593932247141*^9, 3.796594041921988*^9}, {
   3.7965941139065533`*^9, 3.796594118504261*^9}, {3.796594324968239*^9, 
   3.796594352448045*^9}, {3.796594526436563*^9, 3.796594591915532*^9}, {
   3.796594640559514*^9, 3.796594664469578*^9}, {3.7965947230683784`*^9, 
   3.796594918471922*^9}, {3.7965949956884527`*^9, 3.7965950079336834`*^9}, {
   3.796595050120884*^9, 3.7965950757683077`*^9}, {3.796595119493395*^9, 
   3.7965951756153355`*^9}, {3.79659524834735*^9, 3.7965954184994974`*^9}, 
   3.7965954758765664`*^9, {3.796595549431197*^9, 3.7965955695763254`*^9}, {
   3.7965958875067916`*^9, 3.79659588945759*^9}, {3.796595942454871*^9, 
   3.79659597075919*^9}, 3.796596239555481*^9, {3.7965962711320515`*^9, 
   3.796596316491773*^9}, {3.79659645607593*^9, 3.796596581600302*^9}, {
   3.7965966919193296`*^9, 3.796596704644306*^9}, {3.796596755638956*^9, 
   3.796596759593383*^9}, {3.7965967904588547`*^9, 3.7965967961606092`*^9}, {
   3.79659689858375*^9, 3.796596926658683*^9}, {3.79659710517518*^9, 
   3.796597105980029*^9}, {3.7965971648666105`*^9, 3.796597181336569*^9}, {
   3.7965972376689177`*^9, 3.796597238410967*^9}, {3.79659859993501*^9, 
   3.796598606505409*^9}, {3.7965986473119717`*^9, 3.796598731378132*^9}, {
   3.796598958733262*^9, 3.7965989865558577`*^9}, {3.7965996934854083`*^9, 
   3.7965997010548415`*^9}, {3.796599794733363*^9, 3.796599830315264*^9}, {
   3.7969899227693644`*^9, 3.796989929891287*^9}, {3.7969912115169153`*^9, 
   3.796991224501194*^9}, {3.7969935687959623`*^9, 3.796993596748905*^9}, 
   3.7976842622410975`*^9, {3.7977171788250656`*^9, 3.7977171873570185`*^9}, {
   3.797794012789712*^9, 3.797794016425988*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"345fe7a9-a75a-4078-a2f7-f7559027e548"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "generates", " ", "mine", " ", "locations", " ", "given", " ", "a", " ", 
     "number", " ", "of", " ", "mines"}], ",", " ", 
    RowBox[{"a", " ", "board", " ", "size"}], ",", " ", 
    RowBox[{
    "and", " ", "an", " ", "initial", " ", "click", " ", "which", " ", "must",
      " ", "be", " ", "a", " ", 
     RowBox[{"zero", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mineLocationGenerator", "[", 
    RowBox[{"boardSize_", ",", "mines_", ",", "init_"}], "]"}], ":=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"boardSize", "*", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"rowLength", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
         "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "init", "}"}], ",", 
               RowBox[{"surrounding", "[", "init", "]"}]}], "}"}], ",", "1"}],
             "]"}], ",", "#"}], "]"}]}], "&"}]}], "]"}], ",", "mines"}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7965981592509136`*^9, 3.7965981640563526`*^9}, {
  3.7965996658383303`*^9, 3.7965996842331486`*^9}, {3.7965997666245537`*^9, 
  3.7965997833039446`*^9}, {3.7965998134627814`*^9, 3.79659981686469*^9}, {
  3.796993540453022*^9, 3.7969935653108463`*^9}, {3.79768631705612*^9, 
  3.7976863185641165`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f98e963a-59fb-47a5-ac3d-974659cd05e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createBoard", "[", 
   RowBox[{"3", ",", "30", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7977141180294867`*^9, 3.797714146365744*^9}, {
  3.7977144694585*^9, 3.7977144713565574`*^9}},
 CellLabel->
  "In[494]:=",ExpressionUUID->"02079628-2525-468c-b9db-c7b7275e4404"]
}, Closed]],

Cell[CellGroupData[{

Cell["Board Processing", "Chapter",
 CellChangeTimes->{{3.796989815265808*^9, 
  3.79698981823088*^9}},ExpressionUUID->"baf5a4f4-0c5d-44c0-bbd4-\
c596435e8adf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "if", " ", "the", " ", "game", " ", "has", " ", "been", 
     " ", 
     RowBox[{"lost", ".", " ", "if"}], " ", "an", " ", "open", " ", "tile", 
     " ", "has", " ", "a", " ", "mine"}], ",", " ", 
    RowBox[{"returns", " ", "True"}], ",", " ", "otherwise", ",", " ", 
    RowBox[{"False", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"gameLost", "[", "board_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flatBoard", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"board", ",", "1"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"Select", "[", 
          RowBox[{"flatBoard", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"getMine", "@", "#"}], "&&", 
              RowBox[{"getOpen", "@", "#"}]}], ")"}], "&"}]}], "]"}]}], ">", 
        "0"}], ",", 
       RowBox[{"Return", "[", "True", "]"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.796992313036822*^9, 3.796992481218893*^9}, {
  3.7969934546850357`*^9, 3.7969934879814105`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7571ef94-8dac-4510-ba1c-509c59907ff7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "if", " ", "the", " ", "game", " ", "has", " ", "been", 
     " ", 
     RowBox[{"won", ".", " ", "if"}], " ", "there", " ", "exists", " ", "a", 
     " ", "closed", " ", "tile", " ", "without", " ", "a", " ", "mine"}], ",",
     " ", 
    RowBox[{"returns", " ", "False"}], ",", " ", "otherwise", ",", " ", 
    RowBox[{"True", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"gameWon", "[", "board_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flatBoard", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"board", ",", "1"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"Select", "[", 
          RowBox[{"flatBoard", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"getMine", "@", "#"}]}], "&&", 
              RowBox[{"!", 
               RowBox[{"getOpen", "@", "#"}]}]}], ")"}], "&"}]}], "]"}]}], 
        ">", "0"}], ",", 
       RowBox[{"Return", "[", "False", "]"}], ",", 
       RowBox[{"Return", "[", "True", "]"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7969925744921722`*^9, 3.796992670338238*^9}, {
  3.7969934926624603`*^9, 3.7969935316659107`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c5cb7d32-97ab-4539-91b0-e17726f16b21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "processes", " ", "a", " ", "click", " ", "in", " ", "a", " ", "given", 
    " ", 
    RowBox[{"location", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"processClick", "[", 
    RowBox[{
    "boardSize_", ",", "mines_", ",", "board_", ",", "coord_", ",", "type_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"current", ",", 
       RowBox[{"newBoard", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"board", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"createBoard", "[", 
           RowBox[{"boardSize", ",", "mines", ",", "coord"}], "]"}], ",", 
          "board"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gameLost", "[", "newBoard", "]"}], "||", 
         RowBox[{"gameWon", "[", "newBoard", "]"}]}], ",", 
        RowBox[{"Return", "[", "newBoard", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"current", "=", 
       RowBox[{"Part", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "newBoard", "}"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "coord", "}"}], "]"}]}], "}"}], ",", "1"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"getOpen", "@", "current"}], ",", 
        RowBox[{"Return", "[", "newBoard", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"type", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"newBoard", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"newBoard", ",", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"coord", ",", "3"}], "}"}], "]"}], "\[Rule]", 
            RowBox[{"!", 
             RowBox[{"getFlag", "@", "current"}]}]}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"getFlag", "@", "current"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newBoard", "=", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"newBoard", ",", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"coord", ",", "4"}], "}"}], "]"}], "\[Rule]", 
               "True"}]}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"getNum", "@", "current"}], "\[Equal]", " ", "0"}], ",", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"newBoard", "=", 
                RowBox[{"processClick", "[", 
                 RowBox[{
                 "boardSize", ",", "mines", ",", "newBoard", ",", "newCoord", 
                  ",", "type"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"newCoord", ",", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"surrounding", "[", "coord", "]"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
                    RowBox[{"boardSize", "*", "2"}]}], ")"}], "&"}]}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}],
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"gameLost", "[", "newBoard", "]"}], ",", 
        RowBox[{"newBoard", "=", 
         RowBox[{"endGame", "[", "newBoard", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "newBoard", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7969940511691055`*^9, 3.7969940680771914`*^9}, {
   3.796994159740099*^9, 3.79699417665913*^9}, 3.7969946706755557`*^9, {
   3.7969958801751523`*^9, 3.7969958900068617`*^9}, {3.796995951933263*^9, 
   3.79699618391568*^9}, {3.796996216245255*^9, 3.7969962973749046`*^9}, {
   3.7969963290701475`*^9, 3.796996339987952*^9}, {3.7969963907881064`*^9, 
   3.7969964672868624`*^9}, {3.796996536394519*^9, 3.7969965478728247`*^9}, {
   3.796996622460369*^9, 3.7969967686373615`*^9}, {3.797162710640666*^9, 
   3.7971627128228645`*^9}, {3.797163168200099*^9, 3.797163178560395*^9}, {
   3.7976038690429635`*^9, 3.797603870469122*^9}, {3.7976041527306194`*^9, 
   3.7976041721456685`*^9}, {3.797604202897434*^9, 3.7976042101370745`*^9}, {
   3.797604282584165*^9, 3.797604293413205*^9}, {3.7976044963714714`*^9, 
   3.7976044991690273`*^9}, {3.79760453204009*^9, 3.797604565282196*^9}, 
   3.797604968165848*^9, {3.7976050383860617`*^9, 3.7976052215682125`*^9}, {
   3.797605270150298*^9, 3.79760529909593*^9}, {3.797683642483697*^9, 
   3.797683666618409*^9}, {3.797684240598073*^9, 3.79768427150844*^9}, {
   3.7976856387272863`*^9, 3.7976856518472013`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"bef2c81c-0b01-4dcb-95fb-35ede1148697"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "reveals", " ", "all", " ", "mine", " ", "locations", " ", "if", " ", 
    "the", " ", "game", " ", "is", " ", 
    RowBox[{"lost", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"endGame", "[", "board_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"finalBoard", "=", "board"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"getMine", "@", 
           RowBox[{"board", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"finalBoard", "=", 
           RowBox[{"ReplacePart", "[", 
            RowBox[{"finalBoard", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y", ",", "4"}], "}"}], "\[Rule]", 
              "True"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Length", "@", "board"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"rowLength", "@", "x"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"showMines", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "finalBoard", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797683533117595*^9, 3.7976835473864346`*^9}, {
   3.797683781884762*^9, 3.797683783475478*^9}, {3.7976838158299584`*^9, 
   3.79768400121694*^9}, {3.7976843256406593`*^9, 3.7976843390368366`*^9}, 
   3.7977171658438683`*^9, {3.7977171992203298`*^9, 3.797717203551377*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"5a52b0fc-aeea-473e-8da1-0a450ee61710"],

Cell[BoxData[
 RowBox[{"bTest", "=", 
  RowBox[{"processClick", "[", 
   RowBox[{"5", ",", "80", ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797606124708491*^9, 3.797606147490569*^9}, {
  3.7976872636023235`*^9, 3.797687264897736*^9}, {3.7976965394356575`*^9, 
  3.7976965415009947`*^9}, {3.7977674154608746`*^9, 3.7977674178924074`*^9}, {
  3.7977674487640333`*^9, 3.797767449636083*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"516caf45-f3df-4153-8208-e45541fcd294"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conversion of Coordinates", "Chapter",
 CellChangeTimes->{{3.79733454061448*^9, 3.797334544725297*^9}, 
   3.797335515531254*^9, {3.7976054926050034`*^9, 
   3.7976054928174353`*^9}},ExpressionUUID->"6be94cbd-ee89-4076-9592-\
39534805f00d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"centeredCoords", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"(*", 
    RowBox[{
    "takes", " ", "the", " ", "cartesian", " ", "coordinates", " ", "used", 
     " ", "in", " ", "the", " ", "graphics", " ", "output", " ", "and", " ", 
     "moves", " ", "them", " ", "to", " ", "where", " ", "they", " ", "would",
      " ", "be", " ", "if", " ", "the", " ", "center", " ", "of", " ", "the", 
     " ", "board", " ", "were", " ", "at", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xc", "=", 
       RowBox[{"x", "-", 
        RowBox[{"(", 
         RowBox[{"size", "-", "1"}], ")"}]}]}], ",", 
      RowBox[{"yc", "=", 
       RowBox[{"y", "-", 
        RowBox[{"(", 
         RowBox[{"size", "-", "1"}], ")"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"yc", "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{"xc", "\[NotEqual]", "0"}]}], ",", 
       RowBox[{"yc", " ", "=", " ", 
        RowBox[{"yc", "+", 
         RowBox[{"(", 
          RowBox[{"Abs", "[", "xc", "]"}], ")"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"xc", ",", "yc"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7973350109028783`*^9, 3.797335056098263*^9}, {
  3.7973361746814356`*^9, 3.7973362503675156`*^9}, {3.7973364558819866`*^9, 
  3.7973364619414415`*^9}, {3.7973373077380095`*^9, 3.7973373546684384`*^9}, {
  3.7973374013999395`*^9, 3.7973374032578936`*^9}, {3.7973374703837376`*^9, 
  3.7973374916077523`*^9}, {3.797714976307788*^9, 3.797715033617078*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d1dea8c7-38d6-4ab6-9fbf-0ab6dd86e950"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centeredCoords", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.797335058295427*^9, 3.797335082433236*^9}, {
  3.7973355434970226`*^9, 3.797335546890276*^9}, {3.797335655461027*^9, 
  3.7973356566271133`*^9}, {3.79733574025678*^9, 3.7973357508495736`*^9}, {
  3.797335792606702*^9, 3.797335795970953*^9}, {3.797335860551518*^9, 
  3.7973360004022846`*^9}, {3.797336294226801*^9, 3.797336340078616*^9}, {
  3.797336373433115*^9, 3.797336442328971*^9}, {3.7973364860832696`*^9, 
  3.797336486146274*^9}, {3.7973376634016075`*^9, 3.7973376634726124`*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"9dc55c25-1817-4062-959f-193a4c9f9319"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7973350677911634`*^9, 3.7973350830642834`*^9}, 
   3.79733554753675*^9, 3.797335657045144*^9, {3.7973357444060926`*^9, 
   3.7973357512356043`*^9}, 3.797335796526995*^9, {3.79733586538488*^9, 
   3.7973359531637464`*^9}, {3.7973359872393*^9, 3.797336000962326*^9}, 
   3.797336252844702*^9, {3.79733629499786*^9, 3.797336340660659*^9}, {
   3.797336374027159*^9, 3.7973364864943*^9}, 3.7973373349155912`*^9, 
   3.797337496001898*^9, 3.7973376642246685`*^9, 3.797347692514535*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"4b884ab3-3705-4201-afb4-87a45afc87bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"polarRow", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], ",", 
      RowBox[{"Abs", "[", "y", "]"}]}], "]"}], "*", "2"}], "+", "1", 
   RowBox[{"(*", 
    RowBox[{
    "equation", " ", "to", " ", "determine", " ", "what", " ", "polar", " ", 
     "row", " ", "of", " ", "the", " ", "board", " ", "a", " ", "cartesian", 
     " ", "coordinate", " ", "is", " ", 
     RowBox[{"in", "."}]}], "*)"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7973351856272507`*^9, 3.797335258045246*^9}, {
  3.797335328956908*^9, 3.797335358739434*^9}, {3.797335435215876*^9, 
  3.7973354355038977`*^9}, {3.7973354717266417`*^9, 3.7973354748578763`*^9}, {
  3.797335564674034*^9, 3.7973355691053658`*^9}, {3.7973356870563917`*^9, 
  3.7973356979282093`*^9}, {3.7973358003302813`*^9, 3.7973358056313305`*^9}, {
  3.797335870910293*^9, 3.7973358963201933`*^9}, {3.7973359330162354`*^9, 
  3.7973359559089518`*^9}, {3.7973359902435226`*^9, 3.7973360115096483`*^9}, {
  3.7973362559199333`*^9, 3.7973362889064045`*^9}, {3.7973363444949465`*^9, 
  3.797336346297082*^9}, {3.7973363763533325`*^9, 3.7973365538815947`*^9}, {
  3.7977150419551044`*^9, 3.797715069576063*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"dfe4bf9f-bd57-4808-a797-bc6387d88e3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polarCol", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], "<=", 
     RowBox[{"Abs", "[", "y", "]"}]}], ",", 
    RowBox[{"polarColHoriz", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"polarColVert", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "determines", " ", "what", " ", "index", " ", "in", " ", "a", " ", "polar",
     " ", "row", " ", "that", " ", "a", " ", "cartesian", " ", "coordinate", 
    " ", "has"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976796368676777`*^9, 3.797679649942317*^9}, {
   3.7976798933796577`*^9, 3.7976799332037964`*^9}, {3.797680585177142*^9, 
   3.7976806219136577`*^9}, {3.7976813160512457`*^9, 
   3.7976813377303953`*^9}, {3.797681388178196*^9, 3.7976814277843056`*^9}, 
   3.7976820378965693`*^9, {3.797715074795227*^9, 3.7977151276046505`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"5e9acd45-891e-4329-a699-789d6f6a56b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polarColHoriz", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sign", "[", "y", "]"}], "\[Equal]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"rowLength", "[", 
          RowBox[{"polarRow", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], "]"}], "]"}], "/", "2"}], "-", 
        RowBox[{"2", "x"}]}], ",", 
       RowBox[{"2", "x"}]}], "]"}]}], ",", 
    RowBox[{"rowLength", "[", 
     RowBox[{"polarRow", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], "]"}], ",", "1"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976814557134175`*^9, 3.797681464178546*^9}, {
  3.79768154639613*^9, 3.797681676151803*^9}, {3.797682194190673*^9, 
  3.79768221148278*^9}, {3.797682303176952*^9, 3.797682313622819*^9}, {
  3.79768286019022*^9, 3.7976828603587985`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"3a272b0a-4b03-4b70-884f-8ed1535211c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polarColVert", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"polarColHoriz", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", 
       RowBox[{"Abs", "[", "x", "]"}]}]}], "}"}], "]"}], "-", 
   RowBox[{
    RowBox[{"Sign", "[", "x", "]"}], "*", "2", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], "-", 
      RowBox[{"Abs", "[", "y", "]"}]}], ")"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976823937576923`*^9, 3.797682402580826*^9}, {
  3.797682434441861*^9, 3.7976824360382423`*^9}, {3.7976824977580986`*^9, 
  3.7976825053973846`*^9}, {3.797682590734045*^9, 3.797682654136376*^9}, {
  3.7976826853627625`*^9, 3.7976826855452414`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a89df7c1-4308-43bb-8367-30364456e7c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polarConv", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "yc", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{"x", "\[NotEqual]", "0"}]}], ",", 
       RowBox[{"yc", " ", "=", " ", 
        RowBox[{"y", "+", 
         RowBox[{"(", 
          RowBox[{"Abs", "[", "x", "]"}], ")"}]}]}], ",", 
       RowBox[{"yc", "=", "y"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"polarRow", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", "yc"}], "}"}], "]"}], ",", 
        RowBox[{"polarCol", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", "yc"}], "}"}], "]"}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "converts", " ", "a", " ", "cartesian", " ", "coordinate", " ", "into", 
    " ", "a", " ", "polar", " ", "tile", " ", "index"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976827564661493`*^9, 3.7976828344177113`*^9}, {
  3.7977151345981436`*^9, 3.797715146270561*^9}, {3.79796156748312*^9, 
  3.7979615819411616`*^9}, {3.797965403735553*^9, 3.797965502342212*^9}, {
  3.7979655399459457`*^9, 3.79796554172513*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"22eb2360-a086-4fe2-a535-7506e7eeb788"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polarConv", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7973365570478325`*^9, 3.7973365702088175`*^9}, {
  3.797337075920747*^9, 3.79733715707935*^9}, {3.7973371962237577`*^9, 
  3.79733722552479*^9}, {3.7973373400103407`*^9, 3.797337340249359*^9}, {
  3.7973376678459396`*^9, 3.79733767092117*^9}, {3.797683096338083*^9, 
  3.7976831368493843`*^9}, {3.797767965775284*^9, 3.797767966191313*^9}, {
  3.7977694916035175`*^9, 3.797769494803035*^9}, {3.797965546985042*^9, 
  3.7979655590659375`*^9}},
 CellLabel->
  "In[477]:=",ExpressionUUID->"bc41b435-cfd4-4fc7-95ee-fb97ad6147e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.797336570982879*^9, {3.7973370779529*^9, 3.797337157490382*^9}, {
   3.7973372001300535`*^9, 3.7973372261938396`*^9}, {3.7973373379731884`*^9, 
   3.797337357811674*^9}, 3.7973374989011135`*^9, 3.7973376713262024`*^9, 
   3.797347694250336*^9, {3.7976831137087297`*^9, 3.7976831373544226`*^9}, {
   3.797767962667557*^9, 3.7977679665793486`*^9}, {3.7977694920595503`*^9, 
   3.797769495946419*^9}, 3.7979616101100683`*^9, 3.7979655119039464`*^9, {
   3.7979655451799383`*^9, 3.7979655597129354`*^9}},
 CellLabel->
  "Out[477]=",ExpressionUUID->"99d7dac8-fcf2-4fb1-bc40-957bd34bc7f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Determining the Cartesian and polar-like coordinates for which tile was \
clicked\
\>", "Subsection",
 CellChangeTimes->{{3.797340819234517*^9, 3.7973408241107845`*^9}, {
   3.7973493103769274`*^9, 3.797349329746386*^9}, 
   3.797349566844407*^9},ExpressionUUID->"28bd3c9c-15e9-460e-8a5f-\
d4b0dc1cd9d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"regionShapes", "[", 
   RowBox[{"x_", ",", "y_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "function", " ", "to", " ", "create", " ", "a", " ", "graphic", " ", "of",
      " ", "one", " ", "segment", " ", "of", " ", "the", " ", "tesselation", 
     RowBox[{"(", 
      RowBox[{
      "dodecagon", " ", "and", " ", "surrounding", " ", "hexagons", " ", 
       "and", " ", "squares"}], ")"}]}], ",", " ", 
    RowBox[{"given", " ", "an", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], " ", "coordinate", " ", "for", " ", 
     "the", " ", 
     RowBox[{"segment", "'"}], "s", " ", "center", " ", "and", " ", "the", 
     " ", "size", " ", "of", " ", "the", " ", "whole", " ", "board"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"offsetX", "=", 
       RowBox[{"2.19", "x"}]}], ",", 
      RowBox[{"offsetY", "=", 
       RowBox[{
        RowBox[{"2.53834", "y"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2.53834", "/", "2"}], ")"}], 
          RowBox[{"Abs", "[", "x", "]"}]}], ")"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "all", " ", "of", " ", "the", " ", "hard", " ", "coded", " ", "values",
         " ", "are", " ", "relative", " ", "values", " ", "for", " ", 
        "placement", " ", "of", " ", "shapes", " ", "in", " ", "a", " ", 
        "single", " ", "segment"}], ",", " ", 
       RowBox[{"they", " ", 
        RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", "be", " ", 
        "changed"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"central", " ", "dodecagon"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"offsetX", ",", "offsetY"}], "}"}], ",", "1.04", ",", "12"}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "all", " ", "of", " ", "the", " ", "surrounding", " ", "shapes", " ", 
         "in", " ", "clockwise", " ", "order", " ", "starting", " ", "with", 
         " ", "the", " ", "north"}], "-", 
        RowBox[{"most", " ", "shape"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"offsetX", ",", 
          RowBox[{"offsetY", "+", "1", "+", 
           RowBox[{"(", 
            RowBox[{".538344", "/", "2"}], ")"}]}]}], "}"}], ",", 
        RowBox[{".761333", "/", "2"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", ".73"}], ",", 
          RowBox[{"offsetY", "+", "1", "+", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", "1.095"}], ",", 
          RowBox[{"offsetY", "+", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "12"}]}], "}"}], ",", "4"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", "1.46"}], ",", "offsetY"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", "1.095"}], ",", 
          RowBox[{"offsetY", "-", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{"\[Pi]", "/", "12"}]}], "}"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "+", ".73"}], ",", 
          RowBox[{"offsetY", "-", "1", "-", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"offsetX", ",", 
          RowBox[{"offsetY", "-", "1", "-", 
           RowBox[{"(", 
            RowBox[{".538344", "/", "2"}], ")"}]}]}], "}"}], ",", 
        RowBox[{".761333", "/", "2"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", ".73"}], ",", 
          RowBox[{"offsetY", "-", "1", "-", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", "1.095"}], ",", 
          RowBox[{"offsetY", "-", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "12"}]}], "}"}], ",", "4"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", "1.46"}], ",", "offsetY"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", "1.095"}], ",", 
          RowBox[{"offsetY", "+", "0.634586"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".380667", ",", 
          RowBox[{"\[Pi]", "/", "12"}]}], "}"}], ",", "4"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"offsetX", "-", ".73"}], ",", 
          RowBox[{"offsetY", "+", "1", "+", 
           RowBox[{".538344", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".53", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "6"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797338766074463*^9, 3.797338846387897*^9}, {
   3.797339832782916*^9, 3.797340002152321*^9}, 3.797348782781129*^9, 
   3.79769580734966*^9, 3.7979630607498283`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"e5638dd1-72d2-47d4-ad73-e516140354c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findTile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "shapeLoc", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"RegionDistance", "[", 
               RowBox[{
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"2.19", "k"}], ",", 
                    RowBox[{
                    RowBox[{"2.53834", "j"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2.53834", "/", "2"}], ")"}], 
                    RowBox[{"Abs", "[", "k", "]"}]}], ")"}]}]}], "}"}], ",", 
                  "1.94163"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"RegionDistance", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"regionShapes", "[", 
                    RowBox[{"k", ",", "j", ",", "size"}], "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", 
                   "0"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"shapeLoc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"k", ",", "j"}], "}"}], ",", "i"}], "}"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Return", "[", "shapeLoc", "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "13"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "shapeLoc"}], "\[Equal]", "2"}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"RegionDistance", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"regionShapes", "[", 
                    RowBox[{"k", ",", 
                    RowBox[{"j", "+", "1"}], ",", "size"}], "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", 
                   "0"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"shapeLoc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"k", ",", 
                    RowBox[{"j", "+", "1"}]}], "}"}], ",", "i"}], "}"}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"Return", "[", "shapeLoc", "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "13"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "shapeLoc"}], "\[Equal]", "2"}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"k", "\[GreaterEqual]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"j", "++"}], ";"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RegionDistance", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"regionShapes", "[", 
                    RowBox[{
                    RowBox[{"k", "+", "1"}], ",", 
                    RowBox[{"j", "+", "c"}], ",", "size"}], "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", 
                    "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"shapeLoc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"k", "+", "1"}], ",", 
                    RowBox[{"j", "+", "c"}]}], "}"}], ",", "i"}], "}"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"Return", "[", "shapeLoc", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"c", ",", "0", ",", "1"}], "}"}]}], "]"}], ";", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "@", "shapeLoc"}], "\[Equal]", "2"}], 
                   ",", 
                   RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "13"}], "}"}]}], "]"}]}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "shapeLoc"}], "\[Equal]", "2"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"0", "-", 
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "*", "size"}], ")"}], "-", "2"}], ")"}], "-", 
             RowBox[{"Abs", "[", "k", "]"}], "-", 
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "shapeLoc"}], "\[Equal]", "2"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"0", "-", 
          RowBox[{"(", 
           RowBox[{"size", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "size"}], "-", "2", "-", 
          RowBox[{"(", 
           RowBox[{"size", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "shapeLoc"}], "\[Equal]", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "shapeLoc", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.79769349342006*^9, 3.7976937528337092`*^9}, {
   3.7976937895406933`*^9, 3.797693814751691*^9}, {3.797694091790517*^9, 
   3.797694095183563*^9}, {3.797714919762809*^9, 3.797714958691697*^9}, 
   3.79779433366846*^9, 3.797963101150772*^9, {3.797965765709891*^9, 
   3.797965773605891*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"4167bc39-a573-4e33-b9e8-1cf39c119186"],

Cell[BoxData[
 RowBox[{
  RowBox[{"northMostTile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"(*", 
    RowBox[{
    "Gives", " ", "the", " ", "tiles", " ", "surrounding", " ", "a", " ", 
     "dodecagon", " ", "in", " ", "clockwise", " ", "order", " ", "starting", 
     " ", "from", " ", "the", " ", "northmost", " ", "tile"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"coord", "=", 
       RowBox[{"polarConv", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}]}], ",", 
      RowBox[{"rtnLst", "=", 
       RowBox[{"{", "}"}]}], ",", "row", ",", "polarCol"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"row", "=", 
      RowBox[{"coord", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"polarCol", "=", 
      RowBox[{"coord", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"row", "\[Equal]", "1"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"surrounding", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "if", " ", "the", " ", "given", " ", "coordinate", " ", "is", " ", 
          "the", " ", "centermost", " ", "dodecagon"}], ",", " ", 
         RowBox[{
         "the", " ", "list", " ", "returned", " ", "by", " ", "surrounding", 
          " ", "already", " ", "starts", " ", "on", " ", "the", " ", 
          "northmost", " ", 
          RowBox[{"tile", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"polarCol", "-", "1"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "*", "size"}], "-", "1"}], ")"}], "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "*", "size"}], "-", "row"}], ")"}]}]}], "]"}], 
          "\[Equal]", "0"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "this", " ", "equation", " ", "determines", " ", "if", " ", "the", 
           " ", "dodecagon", " ", "is", " ", "a", " ", "corner"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Switch", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"polarCol", "-", "1"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "*", "size"}], "-", "1"}], ")"}], "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "*", "size"}], "-", "row"}], ")"}]}]], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"if", " ", "it", " ", "is"}], ",", " ", 
             RowBox[{
             "this", " ", "equation", " ", "gives", " ", "a", " ", "number", 
              " ", "0", " ", "through", " ", "5", " ", "for", " ", "which", 
              " ", "corner", " ", "it", " ", "is"}], ",", " ", 
             RowBox[{
             "and", " ", "then", " ", "we", " ", "just", " ", "use", " ", "a",
               " ", "Rotate", " ", "function", " ", "on", " ", "the", " ", 
              "list", " ", "given", " ", "by", " ", "surrounding", " ", 
              "function"}]}], "*)"}], "\[IndentingNewLine]", "0", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateLeft", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "4"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "1", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateLeft", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "2"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "2", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"surrounding", "[", 
             RowBox[{"{", 
              RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", "3", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "2"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "4", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "4"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "5", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "6"}], 
             "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            FractionBox[
             RowBox[{"polarCol", "-", "1"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "size"}], "-", "1"}], ")"}], "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "size"}], "-", "row"}], ")"}]}]], "]"}], 
           ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "if", " ", "it", " ", "is", " ", "not", " ", "a", " ", 
              "corner"}], ",", " ", 
             RowBox[{
             "this", " ", "function", " ", "gives", " ", "us", " ", "a", " ", 
              "number", " ", "0", " ", "through", " ", "5", " ", "to", " ", 
              "determine", " ", "which", " ", "side", " ", "it", " ", 
              RowBox[{"follows", ".", " ", "We"}], " ", "can", " ", "use", 
              " ", "a", " ", "Rotate", " ", "function", " ", "on", " ", 
              "surrounding", " ", "function", " ", "here", " ", "as", " ", 
              RowBox[{"well", "."}]}]}], "*)"}], "\[IndentingNewLine]", "0", 
           ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateLeft", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "2"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "1", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"surrounding", "[", 
             RowBox[{"{", 
              RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", "2", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "2"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "3", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "4"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "4", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "6"}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", "5", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"surrounding", "[", 
               RowBox[{"{", 
                RowBox[{"row", ",", "polarCol"}], "}"}], "]"}], ",", "8"}], 
             "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976203231093464`*^9, 3.7976203612503295`*^9}, {
   3.79762039314214*^9, 3.7976204505309772`*^9}, {3.7976205055401287`*^9, 
   3.797620526785356*^9}, {3.797620686727151*^9, 3.797620689223339*^9}, {
   3.7976209564193344`*^9, 3.7976210288193026`*^9}, {3.7976212003122597`*^9, 
   3.7976212174139085`*^9}, {3.7976214240320587`*^9, 3.797621450951108*^9}, {
   3.7976214822971115`*^9, 3.797621509995017*^9}, 3.797621686084262*^9, {
   3.797621733204918*^9, 3.797621789252261*^9}, {3.797621867656063*^9, 
   3.7976219423299203`*^9}, {3.7976220648672605`*^9, 3.797622065008279*^9}, {
   3.7976220958552046`*^9, 3.797622165731963*^9}, {3.7976222356424303`*^9, 
   3.7976222467152605`*^9}, {3.7976223027983*^9, 3.7976223359841814`*^9}, {
   3.7976223796369514`*^9, 3.7976223819211226`*^9}, {3.797622445844155*^9, 
   3.797622460054761*^9}, {3.797622517119587*^9, 3.79762256100589*^9}, {
   3.797622630952629*^9, 3.7976226910175953`*^9}, {3.797622721067649*^9, 
   3.797622730223337*^9}, 3.7976227731947784`*^9, {3.7976228961457615`*^9, 
   3.797622949520111*^9}, {3.7976229937728477`*^9, 3.7976230580989356`*^9}, {
   3.797623106381076*^9, 3.7976231395785627`*^9}, {3.7976231762616634`*^9, 
   3.7976231987951827`*^9}, {3.7976235768727837`*^9, 
   3.7976235807910767`*^9}, {3.7976236136765623`*^9, 3.797623656388381*^9}, 
   3.7976245194292107`*^9, {3.7976779477968955`*^9, 3.7976779866780024`*^9}, {
   3.797678017809974*^9, 3.7976781879248867`*^9}, {3.7976831864544873`*^9, 
   3.797683220609495*^9}, 3.7976846903200655`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"303668ca-0686-4a1d-8948-d5b9f6ec43eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"giveClickedTile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "for", " ", "any", " ", "coordinate", " ", "clicked", " ", "in", " ", 
      "the", " ", "clickpane"}], ",", 
     RowBox[{
     "will", " ", "return", " ", "the", " ", "polar", " ", "coordinate", " ", 
      "of", " ", "the", " ", "tile", " ", "clicked"}], ",", 
     RowBox[{
     "if", " ", "the", " ", "click", " ", "was", " ", "inside", " ", "a", " ",
       "tile"}]}], "*)"}], 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tile", "=", 
       RowBox[{"findTile", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "size"}], "]"}]}], ",", 
      "coord"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "tile"}], "\[NotEqual]", "0"}], ",", 
      RowBox[{
       RowBox[{"coord", "=", 
        RowBox[{"tile", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"northMostTile", "[", 
            RowBox[{"coord", ",", "size"}], "]"}], ",", 
           RowBox[{"polarConv", "[", 
            RowBox[{"coord", ",", "size"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"tile", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
      "Null"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976940077736187`*^9, 3.797694079198531*^9}, {
  3.797694267507579*^9, 3.7976943361344213`*^9}, {3.79769436705785*^9, 
  3.797694465114463*^9}, {3.79769450455048*^9, 3.797694510625084*^9}, {
  3.797694542569338*^9, 3.7976945786288114`*^9}, {3.7976948909601326`*^9, 
  3.797694893104254*^9}, {3.7976949679769964`*^9, 3.7976949759122963`*^9}, {
  3.79771483529257*^9, 3.7977148707885847`*^9}, {3.797793170840847*^9, 
  3.7977931761815653`*^9}, {3.7979617234329185`*^9, 3.797961724145959*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"e45295fe-fde0-4403-a2ec-8ff53d706cb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"giveClickedTile", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2.5"}], "}"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.797347350506683*^9, 3.7973473774091387`*^9}, {
  3.797347412333351*^9, 3.7973474201285334`*^9}, {3.7976948006210694`*^9, 
  3.797694815365373*^9}, {3.797695001860462*^9, 3.7976950438060775`*^9}, {
  3.797695101231083*^9, 3.797695107733385*^9}, {3.797768765880517*^9, 
  3.797768766001526*^9}, {3.797793700855187*^9, 3.797793722317794*^9}, {
  3.797961734875983*^9, 3.79796173617708*^9}, {3.797961769746161*^9, 
  3.797961777507152*^9}, {3.797963758466474*^9, 3.7979637609400854`*^9}, {
  3.797963829495266*^9, 3.797963840251167*^9}, {3.797963891555049*^9, 
  3.7979639011429386`*^9}, {3.797963984598666*^9, 3.79796398473129*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"7da7a735-27f9-4b99-a293-19be88aa0125"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.797793723436802*^9, 3.7979578952952194`*^9, {3.7979617509900236`*^9, 
   3.7979617796858535`*^9}, 3.797963110847447*^9, 3.797963761526451*^9, {
   3.797963831649531*^9, 3.7979638406603594`*^9}, {3.7979638932822404`*^9, 
   3.797963901547304*^9}, 3.797963985113052*^9},
 CellLabel->
  "Out[414]=",ExpressionUUID->"a1790977-dc69-4051-aa21-33e544e7ea81"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GUI", "Chapter",
 CellChangeTimes->{{3.797688928472742*^9, 
  3.7976889287948833`*^9}},ExpressionUUID->"47f21cb5-8c25-401a-adc1-\
74ea41257670"],

Cell[BoxData[
 RowBox[{
  RowBox[{"openingScreen", "[", "]"}], ":=", 
  RowBox[{"Column", "@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Matheminesweeper!\>\"", ",", "Large", ",", "Red"}], 
         "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "250"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"2", "/", "3"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<New Game\>\"", ",", 
       RowBox[{"screen", "=", 
        RowBox[{"sizeSelect", "[", "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Instructions\>\"", ",", 
       RowBox[{"screen", "=", 
        RowBox[{"instructions", "[", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976889366698656`*^9, 3.7976890918152723`*^9}, {
  3.7976891905269775`*^9, 3.7976892693690453`*^9}, {3.797689442103175*^9, 
  3.797689497366387*^9}, {3.7976908326515265`*^9, 3.797690863738392*^9}, {
  3.7976915196578965`*^9, 3.7976915208207865`*^9}, {3.7977197146509876`*^9, 
  3.7977197306009526`*^9}, {3.7977804617515106`*^9, 3.797780463217339*^9}, {
  3.797780524274543*^9, 3.7977805257593737`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"0a832b2a-c0b8-479a-8ab4-4b180011923d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"openingScreen", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7976890932893515`*^9, 3.797689095472514*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"d2e7b9eb-77bb-44e8-8af5-760b0fbba66b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[InsetBox[
       StyleBox["\<\"Matheminesweeper!\"\>",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontSize->Large,
        FontColor->RGBColor[1, 0, 0]], {0, 0}],
      AspectRatio->NCache[
        Rational[2, 3], 0.6666666666666666],
      ImageSize->250]},
    {
     ButtonBox["\<\"New Game\"\>",
      Appearance->Automatic,
      ButtonFunction:>$CellContext`sizeSelect[],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox["\<\"Instructions\"\>",
      Appearance->Automatic,
      ButtonFunction:>$CellContext`instructions[],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.797689095796649*^9, {3.797689195846961*^9, 3.7976892713068953`*^9}, {
   3.7976894510183325`*^9, 3.797689468688083*^9}, 3.797689499278281*^9, 
   3.797691522844412*^9, 3.797696290934817*^9, 3.7976963772616987`*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"a245d9fc-250d-47d0-b4f5-7f2d63a90bfb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sizeSelect", "[", "]"}], ":=", " ", 
  RowBox[{"Column", "@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Select a Size\>\"", ",", "Medium"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "100"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "4"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Beginner\>\"", ",", " ", 
       RowBox[{
        RowBox[{"globalSize", "=", "3"}], ";", 
        RowBox[{"globalMines", "=", "20"}], ";", 
        RowBox[{"screen", "=", 
         RowBox[{"mainScreen", "[", "]"}]}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Intermediate\>\"", ",", " ", 
       RowBox[{
        RowBox[{"globalSize", "=", "4"}], ";", 
        RowBox[{"globalMines", "=", "55"}], ";", 
        RowBox[{"screen", "=", 
         RowBox[{"mainScreen", "[", "]"}]}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Expert\>\"", ",", 
       RowBox[{
        RowBox[{"globalSize", "=", "5"}], ";", 
        RowBox[{"globalMines", "=", "90"}], ";", 
        RowBox[{"screen", "=", 
         RowBox[{"mainScreen", "[", "]"}]}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976899380510674`*^9, 3.797690095088133*^9}, {
  3.797691319584233*^9, 3.797691360564679*^9}, {3.7976919323643055`*^9, 
  3.797692000583845*^9}, {3.797692188530241*^9, 3.797692208427002*^9}, {
  3.797780466060531*^9, 3.797780473632431*^9}, {3.797966443551739*^9, 
  3.7979664436367435`*^9}, {3.7979666010593762`*^9, 3.7979666356307507`*^9}, {
  3.7979666821037664`*^9, 3.7979666852822742`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"b21707b9-c6fb-4f7a-a764-513bc7b105e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sizeSelect", "[", "]"}]], "Input",
 CellChangeTimes->{{3.797690103189469*^9, 3.797690105912188*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"ebd46865-f6a0-4031-8346-6d5daaeaf8c4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[InsetBox[
       StyleBox["\<\"Select a Size\"\>",
        StripOnInput->False,
        FontSize->Medium], {0, 0}],
      AspectRatio->NCache[
        Rational[1, 4], 0.25],
      ImageSize->100]},
    {
     ButtonBox["\<\"Beginner\"\>",
      Appearance->Automatic,
      ButtonFunction:>($CellContext`globalSize = 3; $CellContext`globalMines = 
        20; $CellContext`mainScreen[]),
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox["\<\"Intermediate\"\>",
      Appearance->Automatic,
      ButtonFunction:>($CellContext`globalSize = 4; $CellContext`globalMines = 
        55; $CellContext`mainScreen[]),
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox["\<\"Expert\"\>",
      Appearance->Automatic,
      ButtonFunction:>($CellContext`globalSize = 5; $CellContext`globalMines = 
        90; $CellContext`mainScreen[]),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.797690106370996*^9, 3.797691363297373*^9, {3.797692203765501*^9, 
   3.797692210438656*^9}, 3.7976963024187393`*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"f1971596-483e-40a1-851a-f4e745767149"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"instructions", "[", "]"}], ":=", 
  RowBox[{"Column", "@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Text", "[", "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Click on a tile to open it. The numbers designate\n how many \
mines are adjacent to that tile. Toggle \n between opening tiles and flagging \
them by clicking the \n button labeled \\\"Open\\\" or \\\"Flag\\\" below the \
map. Open all \nnon-mine tiles to win.\>\"", ",", "Medium"}], "]"}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "310"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "3"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Back to Home Screen\>\"", ",", 
       RowBox[{"screen", "=", 
        RowBox[{"openingScreen", "[", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976909205683937`*^9, 3.7976911068546405`*^9}, {
  3.797691147001771*^9, 3.797691309020508*^9}, {3.7976914929473515`*^9, 
  3.797691506737475*^9}, {3.797780484165639*^9, 3.7977804883393726`*^9}, {
  3.798296030360629*^9, 3.798296031850611*^9}, {3.798296062044854*^9, 
  3.798296076628848*^9}, {3.7982982582417088`*^9, 3.798298258895959*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"6302dde8-e0c4-4954-afb4-414f663f3ad6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"instructions", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7976911084573545`*^9, 3.7976911103881907`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"816f237c-2550-4534-a254-e1dd4bf48b36"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[InsetBox[
       StyleBox["\<\"Click on a tile to open it. The numbers designate\\n how \
many mines are adjacent to that tile. Toggle \\n between opening tiles and \
flagging them by clicking the \\n button labeled \\\"Open\\\" or \\\"Flag\\\" \
below the map. Open all \\nnon-mine tiles to win.\"\>",
        StripOnInput->False,
        FontSize->Medium], {0, 0}],
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      ImageSize->310]},
    {
     ButtonBox["\<\"Back to Home Screen\"\>",
      Appearance->Automatic,
      ButtonFunction:>($CellContext`screen = $CellContext`openingScreen[]),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7976911106784143`*^9, {3.7976911855087996`*^9, 3.7976912147057047`*^9}, 
   3.7976912584576983`*^9, {3.7976912936725607`*^9, 3.7976913110600634`*^9}, {
   3.797691495146443*^9, 3.797691508629416*^9}, 3.7976963080729475`*^9, 
   3.798298262207103*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"9a2cc5c3-11fa-442f-a1d7-1af0655b5dcf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mainScreen", "[", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"type", "=", "0"}], ",", 
      RowBox[{"click", "=", "Null"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Column", "@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ClickPane", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Dynamic", "@", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"boardOfSize", "[", "globalSize", "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"click", "=", 
             RowBox[{"giveClickedTile", "[", 
              RowBox[{"#", ",", "globalSize"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"click", "===", "Null"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"board", "=", 
               RowBox[{"processClick", "[", 
                RowBox[{
                "globalSize", ",", "globalMines", ",", "board", ",", "click", 
                 ",", "type"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
           ")"}], "&"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Row", "@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Back to home\>\"", ",", 
            RowBox[{
             RowBox[{"screen", "=", 
              RowBox[{"openingScreen", "[", "]"}]}], ";", 
             RowBox[{"board", "=", 
              RowBox[{"{", "}"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Reset\>\"", ",", 
            RowBox[{"board", "=", 
             RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Dynamic", "@", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"type", "\[Equal]", "0"}], ",", "\"\<Open\>\"", ",", 
               "\"\<Flag\>\""}], "]"}]}], ",", 
            RowBox[{"type", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"type", "+", "1"}], ",", "2"}], "]"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797760875454708*^9, 3.797761078123249*^9}, {
   3.7977611344418435`*^9, 3.797761190807104*^9}, {3.7977612389702888`*^9, 
   3.797761330359903*^9}, {3.797761374840991*^9, 3.797761442449168*^9}, {
   3.7977614780784974`*^9, 3.797761482639302*^9}, {3.797761537981118*^9, 
   3.7977615400007176`*^9}, {3.7977622108098693`*^9, 3.797762215957139*^9}, {
   3.797780573158538*^9, 3.7977805805175323`*^9}, {3.7977806336858516`*^9, 
   3.797780635050541*^9}, {3.797780673531331*^9, 3.7977806747724204`*^9}, {
   3.7977811036307726`*^9, 3.7977811438414817`*^9}, {3.7977932408526278`*^9, 
   3.7977932896701*^9}, {3.797793529317904*^9, 3.7977935596537933`*^9}, {
   3.797793791142748*^9, 3.7977937941337495`*^9}, {3.7977939194702377`*^9, 
   3.7977939300469885`*^9}, {3.797966207328328*^9, 3.7979663337587643`*^9}, {
   3.79796639230354*^9, 3.7979664050167465`*^9}, 3.7979666953955297`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"66de97f5-860f-4a44-9390-9ed057be22e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualizeGame", "[", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"screen", "=", 
      RowBox[{"openingScreen", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"board", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"globalSize", "=", "3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"globalMines", "=", "30"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Dynamic", "[", "screen", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7977803751703777`*^9, 3.7977804483174686`*^9}, {
  3.79778051159476*^9, 3.7977805385234036`*^9}, {3.7977903767029953`*^9, 
  3.7977904178971252`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"03358bca-4453-4ab0-9ec2-288644a01c43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"visualizeGame", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7977804204704046`*^9, 3.7977804248034024`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"00696f7e-b0a2-4b49-bc58-6ee8c1d0ee8c"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`screen, StandardForm],
  ImageSizeCache->{42.884767055511475`, {0., 7.}}]], "Output",
 CellChangeTimes->{3.79779042627418*^9, 3.797793138343749*^9, 
  3.7977932057744637`*^9, 3.797793298498476*^9, 3.797793463340704*^9, 
  3.7977935403773613`*^9, 3.797793760222432*^9, 3.7977938136482487`*^9, 
  3.7977939082921658`*^9, 3.797793940874002*^9, 3.7977940272699895`*^9, 
  3.859502193512761*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"25bb15c0-29c2-40de-8fbc-e71579855e6e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"playGame", "[", "]"}], ":=", 
  RowBox[{"CreateWindow", "[", 
   RowBox[{"PaletteNotebook", "[", 
    RowBox[{
     RowBox[{"visualizeGame", "[", "]"}], ",", 
     RowBox[{"WindowSize", "\[Rule]", "Fit"}], ",", 
     RowBox[{"WindowTitle", "\[Rule]", "\"\<Matheminesweeper\>\""}], ",", 
     RowBox[{"WindowMargins", "\[Rule]", "Automatic"}]}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797791222449541*^9, 3.797791260743232*^9}, {
  3.7977913313353634`*^9, 3.797791354761019*^9}, {3.797792250589781*^9, 
  3.7977922542759237`*^9}, {3.797792323411048*^9, 3.7977923337753572`*^9}, {
  3.7977923712880197`*^9, 3.797792371526415*^9}, {3.797792416206936*^9, 
  3.797792417903391*^9}, {3.797792455484867*^9, 3.7977924652417765`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"564ce12a-61e8-4580-a432-94ed948a4b3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["AI Work (Unfinished)", "Chapter",
 CellChangeTimes->{{3.7978001841061697`*^9, 3.7978001864230065`*^9}, {
  3.9228877677285137`*^9, 
  3.922887770128439*^9}},ExpressionUUID->"eab347ae-4c1a-4d67-8365-\
9912caaf3f7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "what", " ", "a", " ", "tile", " ", "should", " ", 
    "display", " ", "given", " ", "its", " ", 
    RowBox[{"state", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"display", "[", "tile_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"getOpen", "@", "tile"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"getMine", "@", "tile"}], ",", "\"\<mine\>\"", ",", 
       RowBox[{"ToString", "@", 
        RowBox[{"getNum", "@", "tile"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"getFlag", "@", "tile"}], ",", "\"\<flag\>\"", ",", 
       "\"\<closed\>\""}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7976852941141195`*^9, 3.797685385377099*^9}, {
  3.7977998241404896`*^9, 3.797799829929215*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"deb5435a-9f19-444c-872d-0c137e7e475e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"displayBoard", "[", "board_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"displayBoard", "=", "board"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"displayBoard", "=", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"displayBoard", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", 
           RowBox[{"display", "[", 
            RowBox[{"board", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Length", "@", "board"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"rowLength", "@", "x"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "displayBoard", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797685400504321*^9, 3.797685534752293*^9}, {
  3.7976856835663476`*^9, 3.7976856990778675`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"4d9bae79-49b9-4abe-a819-95bdbd2e4acc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"displayBoard", "[", 
  RowBox[{"processClick", "[", 
   RowBox[{"3", ",", "15", ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7976855490082054`*^9, 3.797685569706854*^9}, {
  3.7976856695638247`*^9, 3.797685674032874*^9}, {3.7983059315175476`*^9, 
  3.7983059316491623`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e404623e-64ae-4e23-b36b-5552141a9a22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"1\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>",
      ",", "\<\"1\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>", ",", "\<\"1\"\>", ",", "\<\"0\"\>",
      ",", "\<\"1\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"1\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"1\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"1\"\>", ",", "\<\"1\"\>", 
     ",", "\<\"1\"\>", ",", "\<\"1\"\>", ",", "\<\"1\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"1\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"1\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"2\"\>", ",", "\<\"1\"\>", ",", "\<\"2\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"2\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"1\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"0\"\>", 
     ",", "\<\"1\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", ",", "\<\"closed\"\>", 
     ",", "\<\"closed\"\>", ",", "\<\"closed\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7976857021795735`*^9, {3.797685754709103*^9, 3.7976857585109367`*^9}, 
   3.7976960522189503`*^9, 3.797799835083364*^9, 3.798305933214975*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"922b9133-894c-4fb6-aebf-ac046ef176be"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tilesInSize", "[", "size_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"rowLength", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"size", "*", "2"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7978013695357437`*^9, 3.797801396620316*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"559c8574-4989-44ae-ae71-e5aad65995a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomBoard", "[", 
   RowBox[{"size_", ",", "mines_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"size", "*", "2"}]}], "}"}], "]"}]}], ",", "y", ",", "init",
       ",", "progress", ",", "randomBoard", ",", "toOpen"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"rowLength", "[", "x", "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"randomBoard", "=", 
      RowBox[{"processClick", "[", 
       RowBox[{"size", ",", "mines", ",", 
        RowBox[{"{", "}"}], ",", "init", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"toOpen", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"randomBoard", ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "_", ",", "_", ",", "False"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"progress", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "@", "toOpen"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"randomBoard", "=", 
        RowBox[{"processClick", "[", 
         RowBox[{
         "size", ",", "mines", ",", "randomBoard", ",", "open", ",", "0"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"open", ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"toOpen", ",", "progress"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "randomBoard", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7978023764184713`*^9, 3.7978025568230486`*^9}, {
  3.7978028130535564`*^9, 3.7978028168773293`*^9}, {3.7978028593966017`*^9, 
  3.7978029756796465`*^9}, {3.797803090344022*^9, 3.7978031741668696`*^9}, {
  3.7978032128649583`*^9, 3.7978032234267154`*^9}, {3.7978034133777657`*^9, 
  3.797803446886161*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"7995746c-f3dd-4889-b788-3a6901c19f4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createAI", "[", 
   RowBox[{"size_", ",", "mines_", ",", "boards_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sampleBoards", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"randomBoard", "[", 
          RowBox[{"size", ",", "mines"}], "]"}], ",", "boards"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "boardDisplays", ",", " ", 
      "closedPositions", ",", "inputData", ",", "outputData"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"boardDisplays", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"displayBoard", "[", "sampleBoard", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sampleBoard", ",", "sampleBoards"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closedPositions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"boardDisplay", ",", "\"\<closed\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"boardDisplay", ",", "boardDisplays"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"inputData", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"closedPosition", ",", 
            RowBox[{"boardDisplays", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "boards"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"closedPosition", ",", 
            RowBox[{"closedPositions", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"outputData", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"gameLost", "[", 
            RowBox[{"processClick", "[", 
             RowBox[{"size", ",", "mines", ",", 
              RowBox[{"sampleBoards", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "tile", ",", "0"}], "]"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "boards"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"tile", ",", 
            RowBox[{"closedPositions", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Classify", "[", 
       RowBox[{"inputData", "\[Rule]", "outputData"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7978000280176044`*^9, 3.797800063452811*^9}, {
   3.7978003218348675`*^9, 3.797800598926891*^9}, {3.797800771793626*^9, 
   3.7978009004635477`*^9}, {3.7978009371953225`*^9, 3.7978010002567225`*^9}, 
   3.79780103676709*^9, {3.7978010717933917`*^9, 3.797801118985224*^9}, {
   3.797801252674245*^9, 3.797801364714635*^9}, {3.797801410656781*^9, 
   3.797801453781461*^9}, {3.7978015297682633`*^9, 3.7978015783982472`*^9}, {
   3.7978016204547915`*^9, 3.7978017381251483`*^9}, {3.7978017919212914`*^9, 
   3.797801830966384*^9}, {3.797801867050886*^9, 3.797801867585432*^9}, {
   3.797802251124522*^9, 3.7978022587640924`*^9}, {3.7978032692122793`*^9, 
   3.797803362104875*^9}, {3.7978034589579077`*^9, 3.7978034616546965`*^9}, {
   3.79780357643573*^9, 3.7978035785441184`*^9}, {3.797803674922365*^9, 
   3.7978038782803*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"c2d01d51-5add-4e8c-b09c-283161144164"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Play Game", "Chapter",
 CellChangeTimes->{{3.797794112091169*^9, 
  3.7977941147041807`*^9}},ExpressionUUID->"f5671a20-f9cf-48d1-a9b4-\
a4af8ee7050b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "to", " ", "show", " ", "that", " ", "larger", " ", "board", " ", "sizes", 
    " ", "do", " ", "work", " ", "but", " ", "we", " ", 
    RowBox[{"can", "'"}], "t", " ", "figure", " ", "out", " ", "why", " ", 
    "they", " ", 
    RowBox[{"don", "'"}], "t", " ", "generate", " ", "when", " ", "the", " ", 
    "game", " ", "is", " ", "running"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"globalMines", "=", "90"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"globalSize", "=", "7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"board", "=", 
     RowBox[{"processClick", "[", 
      RowBox[{"globalSize", ",", "globalMines", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7979656985829105`*^9, 3.7979657103954754`*^9}, {
  3.7979667134436846`*^9, 3.797966790360305*^9}, {3.7983059201469383`*^9, 
  3.7983059239906464`*^9}, {3.85950206762356*^9, 3.8595020683736286`*^9}, {
  3.85950211000486*^9, 3.859502146742809*^9}, {3.859502231710724*^9, 
  3.8595022323746233`*^9}, {3.8595025518075533`*^9, 3.859502565620477*^9}, {
  3.859505012877615*^9, 3.8595050131816216`*^9}, {3.918834832757104*^9, 
  3.9188348404816937`*^9}},ExpressionUUID->"2c7da44a-9bdf-4cbb-91ce-\
e332bcec5f26"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.9188340996847963`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"286f5e9c-027d-4531-af25-d2884c658eaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"playGame", "[", "]"}]], "Input",
 CellChangeTimes->{{3.797794117317193*^9, 3.7977941188251934`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"1c6c2d6d-b60a-4489-a6b2-54fd671acc30"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "38883c00-b4be-41a0-8bbd-d37c68b8cf03", 
     "b84a8264-4900-4c08-8854-3f4f412ea8e8"], "label" -> 
   "\"Matheminesweeper\""|>,
  "NotebookObjectUUIDsUnsaved"]], "Output",
 CellChangeTimes->{3.7977941396893673`*^9, 3.7977944557839704`*^9, 
  3.797794605718734*^9, 3.7977948634595203`*^9, 3.7979401585612316`*^9, 
  3.7979656909943547`*^9, 3.7979663425707645`*^9, 3.7982023603760443`*^9, 
  3.7982959701287003`*^9, 3.79829729287584*^9, 3.798298268471349*^9, 
  3.7982990916254907`*^9, 3.8595021332956467`*^9, 3.9188341035132103`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"203a9d45-2997-4de9-8603-a100d680eb14"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2868., 1581.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6506a62f-971d-45af-87c2-e90f2c513c18"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 238, 4, 69, "Chapter",ExpressionUUID->"f85d76d1-fec0-445a-95c4-711131d11a5e"],
Cell[821, 28, 11035, 259, 425, "Input",ExpressionUUID->"e4aacc25-8c91-4d1a-b6cf-48258bcbcba5",
 InitializationCell->True],
Cell[11859, 289, 10659, 249, 330, "Input",ExpressionUUID->"84c65409-e446-43c8-b425-91327b6a2173",
 InitializationCell->True],
Cell[22521, 540, 3641, 86, 121, "Input",ExpressionUUID->"72581321-7418-4c80-b4d9-c3061919e4e2",
 InitializationCell->True],
Cell[26165, 628, 3306, 85, 121, "Input",ExpressionUUID->"4a3e44a9-fcf8-4819-876e-8250293f1437",
 InitializationCell->True],
Cell[29474, 715, 4141, 92, 178, "Input",ExpressionUUID->"0547e3fa-beb4-45dd-8268-d1da3d4228ed",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[33640, 811, 1843, 26, 28, "Input",ExpressionUUID->"3fc42165-6a89-411e-9fcb-9c7229f808d6"],
Cell[35486, 839, 100466, 2034, 408, "Output",ExpressionUUID->"e620629a-4f40-4e80-b9d7-5237a8fcbd47"]
}, Open  ]],
Cell[135967, 2876, 224, 8, 135, "Subsection",ExpressionUUID->"e4ccd654-28c3-4f6d-ae39-709efb2ce62c"],
Cell[CellGroupData[{
Cell[136216, 2888, 682, 15, 173, "Subsection",ExpressionUUID->"3d47a5d6-01bd-4480-a583-73a3ed6e15ef"],
Cell[136901, 2905, 1154, 32, 47, "Input",ExpressionUUID->"5af3e9e1-4804-45fc-9692-78232e22d66e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[138080, 2941, 261, 5, 28, "Input",ExpressionUUID->"af9d1bfc-49b6-4a55-a71c-23d8e2722ca6"],
Cell[138344, 2948, 249, 4, 32, "Output",ExpressionUUID->"1e22b5cf-9027-46d4-a6ba-3231769b1fb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138630, 2957, 377, 9, 28, "Input",ExpressionUUID->"820356a3-b9ba-4597-a06b-4a16fbff87cc"],
Cell[139010, 2968, 4082, 87, 238, "Output",ExpressionUUID->"72b9bff6-8d1a-4f1d-9b77-5eced93aa4ed"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143153, 3062, 163, 3, 69, "Chapter",ExpressionUUID->"4d47abb5-b70f-4909-ab1e-cbb3b629d6b7"],
Cell[143319, 3067, 1453, 37, 121, "Input",ExpressionUUID->"522ce20f-bbf6-4fde-b444-e25d180f1852",
 InitializationCell->True],
Cell[144775, 3106, 272365, 4471, 545, "Input",ExpressionUUID->"02c58cdd-025a-41d1-a5a8-6dc69f76870c"],
Cell[CellGroupData[{
Cell[417165, 7581, 163, 3, 67, "Section",ExpressionUUID->"74a4afb2-5d7c-4eb0-8bff-dfc8afa494a2"],
Cell[417331, 7586, 2726, 64, 178, "Input",ExpressionUUID->"3f050696-bb12-4e4f-9118-42d70b892297",
 InitializationCell->True],
Cell[420060, 7652, 6602, 157, 334, "Input",ExpressionUUID->"e1ede441-d5aa-434c-87bd-0d5511169b13",
 InitializationCell->True],
Cell[426665, 7811, 7175, 175, 361, "Input",ExpressionUUID->"196ade5b-9d79-4497-969a-87f4b4887885",
 InitializationCell->True],
Cell[433843, 7988, 152, 3, 27, "Input",ExpressionUUID->"5a70c52d-2cd4-48cf-9595-b24c3c098f78"],
Cell[CellGroupData[{
Cell[434020, 7995, 316, 6, 27, "Input",ExpressionUUID->"6341551e-0b38-474a-9797-692f3fb488e0"],
Cell[434339, 8003, 939, 29, 53, "Output",ExpressionUUID->"cb392302-90a5-4b74-a462-3e1f2d8283f8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[435327, 8038, 161, 3, 53, "Section",ExpressionUUID->"76851ccf-4ca2-4090-9108-37fd0ee21759"],
Cell[435491, 8043, 3195, 75, 176, "Input",ExpressionUUID->"aef21e73-6757-4837-ac0b-01ffc453f42b",
 InitializationCell->True],
Cell[438689, 8120, 2548, 59, 157, "Input",ExpressionUUID->"a752dbb9-f1cc-429a-bb86-a66e8df8e3f7",
 InitializationCell->True],
Cell[441240, 8181, 3050, 77, 195, "Input",ExpressionUUID->"478d1908-609a-4772-a3c7-7d92bb190c3e",
 InitializationCell->True],
Cell[444293, 8260, 1689, 39, 62, "Input",ExpressionUUID->"6deafabe-ba94-4f7a-a756-09d402d5ab4f",
 InitializationCell->True],
Cell[445985, 8301, 957, 26, 62, "Input",ExpressionUUID->"86d0a758-005f-452e-b1aa-c5e5e63458d1",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[446967, 8331, 463, 8, 26, "Input",ExpressionUUID->"c3294b48-3dd8-43a9-b346-d0a019ec2ded"],
Cell[447433, 8341, 836, 21, 30, "Output",ExpressionUUID->"27c4e8e0-c931-4d1a-95b6-cb6cee72250a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[448318, 8368, 164, 3, 53, "Section",ExpressionUUID->"15239765-fee6-4505-91df-8705a20d6646"],
Cell[448485, 8373, 2692, 68, 140, "Input",ExpressionUUID->"c80b6eb6-2c1e-4916-b9cc-dadc83c04af0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[451202, 8445, 266, 5, 27, "Input",ExpressionUUID->"a825d9aa-7d36-4347-8aa6-103af8ddc3f9"],
Cell[451471, 8452, 433, 12, 31, "Output",ExpressionUUID->"5c75de00-9bde-4f80-a538-009b24c870e1"]
}, Open  ]],
Cell[451919, 8467, 3699, 92, 272, "Input",ExpressionUUID->"83ba4f6a-6ece-4ca8-96f1-cf3cb0e18393",
 InitializationCell->True],
Cell[455621, 8561, 3564, 91, 253, "Input",ExpressionUUID->"576be61c-e56b-43a0-a7fe-0bc6e1e76e50",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[459210, 8656, 315, 6, 27, "Input",ExpressionUUID->"322a029f-aa5c-49fe-829c-47970dd1a596"],
Cell[459528, 8664, 439, 12, 31, "Output",ExpressionUUID->"a54ee03d-6257-4d17-966d-dead0008cc77"]
}, Open  ]],
Cell[459982, 8679, 152, 3, 27, "Input",ExpressionUUID->"200427e4-a694-4428-9c75-652e3143cca3"]
}, Closed]],
Cell[CellGroupData[{
Cell[460171, 8687, 154, 3, 53, "Section",ExpressionUUID->"999c6a4b-4f17-4e3f-8da1-2f5fdf2e94be"],
Cell[CellGroupData[{
Cell[460350, 8694, 258, 5, 28, "Input",ExpressionUUID->"285d17bf-3ea6-474d-a775-8b351b2b33af"],
Cell[460611, 8701, 909, 28, 32, "Output",ExpressionUUID->"a1d63141-d15a-445b-bd19-b8b8b2fe955e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461557, 8734, 258, 5, 28, "Input",ExpressionUUID->"b07edf71-601f-410b-abff-8ddc01729f69"],
Cell[461818, 8741, 917, 28, 32, "Output",ExpressionUUID->"8cc145d2-8c0f-4445-839e-d62137be0981"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462772, 8774, 260, 5, 28, "Input",ExpressionUUID->"63976147-ddb7-48ae-abd1-f9c6fb0cac87"],
Cell[463035, 8781, 412, 12, 32, "Output",ExpressionUUID->"d4a7c1c9-9034-4c1f-ba9d-15e0a291e199"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463484, 8798, 261, 5, 28, "Input",ExpressionUUID->"e6f54c06-2a88-4dd7-81d1-4cc919f6ef74"],
Cell[463748, 8805, 414, 12, 32, "Output",ExpressionUUID->"cf1fc59d-2b0e-40ac-8da5-065028882857"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464199, 8822, 260, 5, 28, "Input",ExpressionUUID->"27574177-8e44-41a6-a04c-5794bb38f40c"],
Cell[464462, 8829, 530, 16, 32, "Output",ExpressionUUID->"a37a6fb1-8b93-4bde-ab11-45c2d0bae798"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465029, 8850, 259, 5, 28, "Input",ExpressionUUID->"efc11b47-fe2d-405c-a030-0133f9cef1db"],
Cell[465291, 8857, 533, 16, 32, "Output",ExpressionUUID->"4362f099-18cb-45c1-8ec7-803edbda296e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465885, 8880, 161, 3, 69, "Chapter",ExpressionUUID->"7c419d9f-bcd9-4146-9623-932748639d65"],
Cell[466049, 8885, 597, 11, 44, "Input",ExpressionUUID->"d9fb3738-523c-4b95-92d9-bf0862523bc6",
 InitializationCell->True],
Cell[466649, 8898, 419, 9, 44, "Input",ExpressionUUID->"aaa9da1b-e9d6-44c6-acba-a615499917e3",
 InitializationCell->True],
Cell[467071, 8909, 392, 8, 44, "Input",ExpressionUUID->"26942549-1e64-4e0b-a603-ad007d8683ef",
 InitializationCell->True],
Cell[467466, 8919, 317, 7, 44, "Input",ExpressionUUID->"cd8a08d9-4ac4-4947-b30e-2bb4812ceeb4",
 InitializationCell->True],
Cell[467786, 8928, 319, 7, 44, "Input",ExpressionUUID->"dfdb5e94-5c19-4ea4-975f-1e9f1a6987be",
 InitializationCell->True],
Cell[468108, 8937, 4792, 104, 254, "Input",ExpressionUUID->"345fe7a9-a75a-4078-a2f7-f7559027e548",
 InitializationCell->True],
Cell[472903, 9043, 1973, 50, 64, "Input",ExpressionUUID->"f98e963a-59fb-47a5-ac3d-974659cd05e6",
 InitializationCell->True],
Cell[474879, 9095, 368, 9, 28, "Input",ExpressionUUID->"02079628-2525-468c-b9db-c7b7275e4404"]
}, Closed]],
Cell[CellGroupData[{
Cell[475284, 9109, 160, 3, 58, "Chapter",ExpressionUUID->"baf5a4f4-0c5d-44c0-bbd4-c596435e8adf"],
Cell[475447, 9114, 1455, 38, 102, "Input",ExpressionUUID->"7571ef94-8dac-4510-ba1c-509c59907ff7",
 InitializationCell->True],
Cell[476905, 9154, 1556, 41, 102, "Input",ExpressionUUID->"c5cb7d32-97ab-4539-91b0-e17726f16b21",
 InitializationCell->True],
Cell[478464, 9197, 5364, 123, 311, "Input",ExpressionUUID->"bef2c81c-0b01-4dcb-95fb-35ede1148697",
 InitializationCell->True],
Cell[483831, 9322, 1848, 45, 159, "Input",ExpressionUUID->"5a52b0fc-aeea-473e-8da1-0a450ee61710",
 InitializationCell->True],
Cell[485682, 9369, 572, 12, 28, "Input",ExpressionUUID->"516caf45-f3df-4153-8208-e45541fcd294"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486291, 9386, 246, 4, 69, "Chapter",ExpressionUUID->"6be94cbd-ee89-4076-9592-39534805f00d"],
Cell[486540, 9392, 1994, 49, 121, "Input",ExpressionUUID->"d1dea8c7-38d6-4ab6-9fbf-0ab6dd86e950",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[488559, 9445, 733, 13, 28, "Input",ExpressionUUID->"9dc55c25-1817-4062-959f-193a4c9f9319"],
Cell[489295, 9460, 659, 11, 32, "Output",ExpressionUUID->"4b884ab3-3705-4201-afb4-87a45afc87bf"]
}, Open  ]],
Cell[489969, 9474, 1411, 28, 44, "Input",ExpressionUUID->"dfe4bf9f-bd57-4808-a797-bc6387d88e3e",
 InitializationCell->True],
Cell[491383, 9504, 1151, 27, 44, "Input",ExpressionUUID->"5e9acd45-891e-4329-a699-789d6f6a56b2",
 InitializationCell->True],
Cell[492537, 9533, 1151, 31, 44, "Input",ExpressionUUID->"3a272b0a-4b03-4b70-884f-8ed1535211c2",
 InitializationCell->True],
Cell[493691, 9566, 875, 22, 44, "Input",ExpressionUUID->"a89df7c1-4308-43bb-8367-30364456e7c7",
 InitializationCell->True],
Cell[494569, 9590, 1534, 39, 102, "Input",ExpressionUUID->"22eb2360-a086-4fe2-a535-7506e7eeb788",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[496128, 9633, 703, 14, 28, "Input",ExpressionUUID->"bc41b435-cfd4-4fc7-95ee-fb97ad6147e6"],
Cell[496834, 9649, 682, 12, 32, "Output",ExpressionUUID->"99d7dac8-fcf2-4fb1-bc40-957bd34bc7f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497553, 9666, 314, 7, 54, "Subsection",ExpressionUUID->"28bd3c9c-15e9-460e-8a5f-d4b0dc1cd9d2"],
Cell[497870, 9675, 7209, 187, 425, "Input",ExpressionUUID->"e5638dd1-72d2-47d4-ad73-e516140354c4",
 InitializationCell->True],
Cell[505082, 9864, 8502, 198, 730, "Input",ExpressionUUID->"4167bc39-a573-4e33-b9e8-1cf39c119186",
 InitializationCell->True],
Cell[513587, 10064, 10071, 222, 594, "Input",ExpressionUUID->"303668ca-0686-4a1d-8948-d5b9f6ec43eb",
 InitializationCell->True],
Cell[523661, 10288, 2250, 55, 83, "Input",ExpressionUUID->"e45295fe-fde0-4403-a2ec-8ff53d706cb0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[525936, 10347, 877, 15, 28, "Input",ExpressionUUID->"7da7a735-27f9-4b99-a293-19be88aa0125"],
Cell[526816, 10364, 449, 9, 32, "Output",ExpressionUUID->"a1790977-dc69-4051-aa21-33e544e7ea81"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[527326, 10380, 150, 3, 69, "Chapter",ExpressionUUID->"47f21cb5-8c25-401a-adc1-74ea41257670"],
Cell[527479, 10385, 1461, 32, 121, "Input",ExpressionUUID->"0a832b2a-c0b8-479a-8ab4-4b180011923d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[528965, 10421, 212, 4, 28, "Input",ExpressionUUID->"d2e7b9eb-77bb-44e8-8af5-760b0fbba66b"],
Cell[529180, 10427, 1336, 37, 242, "Output",ExpressionUUID->"a245d9fc-250d-47d0-b4f5-7f2d63a90bfb"]
}, Open  ]],
Cell[530531, 10467, 1973, 45, 140, "Input",ExpressionUUID->"b21707b9-c6fb-4f7a-a764-513bc7b105e6",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[532529, 10516, 207, 4, 28, "Input",ExpressionUUID->"ebd46865-f6a0-4031-8346-6d5daaeaf8c4"],
Cell[532739, 10522, 1404, 40, 128, "Output",ExpressionUUID->"f1971596-483e-40a1-851a-f4e745767149"]
}, Open  ]],
Cell[534158, 10565, 1531, 31, 235, "Input",ExpressionUUID->"6302dde8-e0c4-4954-afb4-414f663f3ad6",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[535714, 10600, 209, 3, 28, "Input",ExpressionUUID->"816f237c-2550-4534-a254-e1dd4bf48b36"],
Cell[535926, 10605, 1269, 29, 151, "Output",ExpressionUUID->"9a2cc5c3-11fa-442f-a1d7-1af0655b5dcf"]
}, Open  ]],
Cell[537210, 10637, 3648, 80, 330, "Input",ExpressionUUID->"66de97f5-860f-4a44-9390-9ed057be22e0",
 InitializationCell->True],
Cell[540861, 10719, 897, 19, 178, "Input",ExpressionUUID->"03358bca-4453-4ab0-9ec2-288644a01c43",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[541783, 10742, 210, 3, 28, "Input",ExpressionUUID->"00696f7e-b0a2-4b49-bc58-6ee8c1d0ee8c"],
Cell[541996, 10747, 516, 8, 32, "Output",ExpressionUUID->"25bb15c0-29c2-40de-8fbc-e71579855e6e"]
}, Open  ]],
Cell[542527, 10758, 879, 17, 44, "Input",ExpressionUUID->"564ce12a-61e8-4580-a432-94ed948a4b3f",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[543443, 10780, 220, 4, 69, "Chapter",ExpressionUUID->"eab347ae-4c1a-4d67-8365-9912caaf3f7c"],
Cell[543666, 10786, 1071, 25, 140, "Input",ExpressionUUID->"deb5435a-9f19-444c-872d-0c137e7e475e",
 InitializationCell->True],
Cell[544740, 10813, 1238, 33, 102, "Input",ExpressionUUID->"4d9bae79-49b9-4abe-a819-95bdbd2e4acc",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[546003, 10850, 481, 10, 28, "Input",ExpressionUUID->"e404623e-64ae-4e23-b36b-5552141a9a22"],
Cell[546487, 10862, 3743, 58, 71, "Output",ExpressionUUID->"922b9133-894c-4fb6-aebf-ac046ef176be"]
}, Open  ]],
Cell[550245, 10923, 439, 11, 44, "Input",ExpressionUUID->"559c8574-4989-44ae-ae71-e5aad65995a2",
 InitializationCell->True],
Cell[550687, 10936, 2402, 61, 178, "Input",ExpressionUUID->"7995746c-f3dd-4889-b788-3a6901c19f4c",
 InitializationCell->True],
Cell[553092, 10999, 3662, 84, 197, "Input",ExpressionUUID->"c2d01d51-5add-4e8c-b09c-283161144164",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[556791, 11088, 156, 3, 69, "Chapter",ExpressionUUID->"f5671a20-f9cf-48d1-a9b4-a4af8ee7050b"],
Cell[CellGroupData[{
Cell[556972, 11095, 1405, 30, 86, "Input",ExpressionUUID->"2c7da44a-9bdf-4cbb-91ce-e332bcec5f26"],
Cell[558380, 11127, 158, 2, 32, "Output",ExpressionUUID->"286f5e9c-027d-4531-af25-d2884c658eaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558575, 11134, 203, 3, 28, "Input",ExpressionUUID->"1c6c2d6d-b60a-4489-a6b2-54fd671acc30"],
Cell[558781, 11139, 672, 12, 49, "Output",ExpressionUUID->"203a9d45-2997-4de9-8603-a100d680eb14"]
}, Open  ]]
}, Open  ]]
}
]
*)

